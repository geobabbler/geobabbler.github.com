<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: OpenGeo Suite | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/opengeo-suite/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2014-07-09T16:52:57-04:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Day-Tripping NCGIS 2011]]></title>
    <link href="http://blog.geomusings.com/2011/02/18/day-tripping-ncgis-2011/"/>
    <updated>2011-02-18T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2011/02/18/day-tripping-ncgis-2011</id>
    <content type="html"><![CDATA[<p>I went down to the NCGIS Conference in Raleigh, North Carolina yesterday (it's still going on today). I was speaking in the session titled "The Desktop App: News of My Death is Premature." My talk was called "If You Can Browse This Map, Thank a Desktop" and was focused less on desktop apps themselves than the fuzzy boundary between the desktop and the web. I have been told that the slide deck and, more frighteningly, the video of the talk will be online at some point.</p>

<p><iframe width="560" height="420" src="http://www.youtube.com/embed/XwmtNk_Yb2Q?color=white&theme=light"></iframe></p>

<!--more-->


<p>It's generally difficult to get a feel for a conference when you only attend for a day but a couple of things struck me. First, a higher number of people than I expected actually described themselves as programmers or developers. I find that, at GIS gatherings, it is becoming increasingly rare to find people who describe themselves that way. Perhaps it was because we were in the Research Triangle area but this was a good sign. The truth is that GIS is requiring more development skill, not less, from its user base but many people entering the GIS world today seem primarily focused on the "button-ology" of specific software tools.</p>

<p>I was also struck by the amount of work being done with open-source GIS tools in North Carolina. Julia Harrell and Tobin Bradley, who were on the conference program committee, are big advocates of open-source tools so I'm sure that had something to do with their greater visibility at NCGIS but there really does seem to be a lot of good work being done. In most cases, it's a hybrid approach that mixes and matches open-source and proprietary tools for a best-of-breed approach but I was impressed with the "systems integration" mentality that was evident. In the Federal world where I work, ELAs make a more homogeneous tool set readily available and this kind of innovation has become increasingly rare.</p>

<p>It seems that a lot of people from the DC area made the trip down for the conference. I saw many of them at the social and also some people, like <a href="http://twitter.com/pablonegro">Paul Black</a>, of have built impressive bodies of work at the state and local levels in North Carolina.</p>

<p>Before I had to get on the road, I was able to attend a good chunk of the open-source software group meeting. A large part of the discussion centered around analyzing what is impeding the penetration of open-source GIS tools. <a href="http://opengeo.org/about/team/eddie.pickle/">Eddie Pickle</a> and some of his colleagues from <a href="http://opengeo.org">OpenGeo</a> were there and I continue to be impressed by the business approach they are taking with regard to the OpenGeo Suite. By taking high-quality tools and bundling them with professional documentation and support, they continue to reduce the perceived risk associated with open-source tools in the minds of many decision makers. In short, they are making open-source GIS quantifiable; which it must be in order to be adopted.</p>

<p>During that same discussion, the value of open standards was highlighted as well. One compelling use case was put forward of a project that implemented proprietary tools exposed through OGC WxS specifications and then swapped those tools out seamlessly with open-source tool. Because the users and systems were interfacing via OGC specifications, that back-end switch occurred without interruptions in service. Obviously, there are still very strong feelings regarding the WxS specifications (both positive and negative) across the community. Without wading into those waters, I will say that this highlights the value of open standards and open data in that it can reduce dependence on specific tool sets. I think a similar experience could be achieved using other open formats such as KML or Atom as well but the picture this example painted was rather compelling.</p>

<p>I want to thank Julia Harrell and the rest of the conference organizers for inviting me and I wish I could have stayed longer. Project work required that I come back early but I'll make plans to a) stay for the whole conference next time and b) try to stay on top of things going on in North Carolina in the meantime.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Crazy Times - Coming Up For Air]]></title>
    <link href="http://blog.geomusings.com/2009/06/26/crazy-times-coming-up-for-air/"/>
    <updated>2009-06-26T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2009/06/26/crazy-times-coming-up-for-air</id>
    <content type="html"><![CDATA[<p>It's been an extremely busy few months, as evidenced by the pace (or lack thereof) of blogging. I have been hopping between customer sites, mainly helping with ArcGIS Server implementations. We're also re-hosting an ArcIMS site for someone. I expect that to eventually transition as well but we have to get it moved first. I'm also working a pro-bono implementation of PostGIS/GeoServer/OpenLayers for the town of Green Mountain Falls, Colorado. That's been fun. It's great to see how a small town can marshall it resources (Boys Scouts with GPS collected trails as an Eagle Scout project) to get things done. The initial implementation will be simple as they are more interested in getting their data out there but then we'll circle back around to address public-service-type applications after that.</p>

<p>Significant changes are coming for <a href="http://pub.obtusesoft.com">zigGIS</a>. Abe, Paolo and I have been laying out a roadmap for its way ahead. Look for an announcement soon via <a href="http://twitter.com/zigGIS">zigGIS on Twitter</a>.</p>

<p>I have been having a lot of fun with the REST-based APIs from ESRI (Javascript, Flex, Silverlight/WPF). In particular, I've been happy with how extensible they are in terms of being able to support new data sources.
<a href="http://openlayers.org/pipermail/users/2009-June/012414.html">OpenLayers 2.8</a> and <a href="http://blog.opengeo.org/2009/06/17/geoexplorer-preview/">GeoExplorer</a> are also on my radar but that radar screen is getting pretty crowded.</p>

<p>All of this with less than a week to go before vacation. Whew!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenGeo Suite - A Milestone]]></title>
    <link href="http://blog.geomusings.com/2009/06/01/opengeo-suite-a-milestone/"/>
    <updated>2009-06-01T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2009/06/01/opengeo-suite-a-milestone</id>
    <content type="html"><![CDATA[<p>On May 28th OpenGeo <a href="http://blog.opengeo.org/2009/05/28/opengeo-suite-released/">announced the release of the OpenGeo Suite</a>. They also describe their open pricing structure for support of the suite.</p>

<p>This announcement represents a milestone for open-source geospatial software. If you are of a technical nature and are expecting a detailed discussion of the technical advantages of the OpenGeo Suite, you should probably stop reading now. The OpenGeo Suite is a milestone because it establishes a fair pricing model that addresses what, in my opinion, has been the primary barrier to the adoption of open-source GIS in many enterprises: risk.<!--more--></p>

<p>Am I saying open-source GIS is risky? No. The products included in the suite have gelled into a commonly used core of tools implemented in many places. In fact, some of those products (PostGIS, GeoServer, OpenLayers) are part of a pro bono project I am working for a small town. They are stable, robust, proven and highly capable. So why do I state risk as a barrier to adoption?</p>

<p>Many very capable technical people recognize the quality of the tools included in the OpenGeo Suite. However, the adoption of any technology platform in a well-run enterprise must usually pass muster with senior management who have the responsibility for allocating and managing resources. Many times, this would be CIO and/or the CFO. For these people, a strong business case must be made to justify platform adoption/switch. In this situation, the vendor model is attractive because vendors usually come prepared with pricing that shows what products will be received and what level of support for those products can be expected. As we all know, your actual mileage may vary here but these arrangements generally represent a contract that is binding to a certain extent and can help mitigate risks associated with the implementation and integration of a software platform.</p>

<p>For example, ESRI has been very successful in addressing these concerns with the implementation of ELAs in many large organizations in both government and the private sector. These agreements make technology available to the users that need them while simultaneously helping to better fix the cost of implementing the ArcGIS platform in an organization.</p>

<p>The funny thing about risk is that, for all the tools and techniques out there for quantifying it, a large portion of it is still based on perception. In general, the perception of risk equals the presence of risk.</p>

<p>I have seen this dynamic at work first hand with regard to open-source software (both geospatial and otherwise) in a few instances. The common themes I have observed (and tried to overcome) are:</p>

<ol>
<li><p>Lack of reliable support - For most organizations, information technology is a tool that they use to do something else. They are generally uninterested in delving heavily into software development themselves and fear that committing to open-source may cause them to need to bring in additional developers should changes or updates be needed. This business stance is perfectly legitimate and is one that must be recognized and accepted by the open-source community. To simply say "You have the code. Make the change and contrib back." puts many organizations <em>into a situation they don't want to get into in the first place</em>. So there are a lot of organizations that are looking for someone to call when something doesn?t work correctly.</p></li>
<li><p>Lack of integration between projects - There can be some legitimacy to this. Many open-source projects are indeed independent entities. Many are also coupled together (such as GeoServer and GeoWebCache) but integration of products, if needed, may very well fall to the user if there is no prior association between the projects. Obviously, you can make the changes you need and contribute them back to the projects but see item number one for how many organizations view that whole process. You can also bring in a consultant to do the integration but the long-term O&amp;M of that becomes a concern.</p></li>
<li><p>Security - There is a concern that, due to the crowd-sourced nature of open-source software, that malicious code could be inserted and that the implementing organization would need to scrub the code to ensure against this, leading to the need to have in-house experts that can understand the code. This stance speaks more to the mentality of the person who thinks this way than it does to any real problem with open-source. I can't begin to explain the psychology but, having worked against it, I can say that people who think this way are <em>very</em> hard to dissuade. They feel that buying pre-compiled, closed-source, proprietary software is safer because the purchase transaction at least gives them some recourse in the event that something malicious happens. I suspect these people have never actually read a EULA.</p></li>
<li><p>Cost - I saved the biggest for last. Nobody with funding authority in any enterprise believes in a free lunch (or free beer) and with good reason: it doesn't exist. Everything costs something. I have seen many a technical staff get shot down on proposing open-source solutions because they lead off with "it's free!" All that says to senior management is that you haven't done your homework and they stop listening at that point. They know that the piper gets paid somewhere and they need to know how much and what they get in return for it. In many cases, open-source looks nebulous from an ROI standpoint and that rolls back to the first three issues. In solving them, who is going to do it and how much will it cost and what capability do I get in return?</p></li>
</ol>


<p>There are other topics that have come up with regard to implementing open-source GIS that I have observed, but these four themes tend to always recur in some form or another.</p>

<p>This leads me back to the OpenGeo pricing model. It systematically addresses all of these concerns for a price that is straightforward. Those who have worked with open-source for a while know that the openness extends to being able to choose how to get the support you need. Paul Ramsey addressed this topic <a href="http://s3.cleverelephant.ca/geoconnexion-ramsey-2009-01.pdf">here</a> so it's always been there for those willing to their homework. I find the OpenGeo model preferable because it provides peace of mind with regard to the integration and testing of the suite as a whole. Numerous installations have demonstrated that the tools included in the suite work well together but that's not the same thing as saying that you have specifically tested them and verified their integration and can support the implementation of the suite.</p>

<p>Additionally, <a href="http://www.spatiallyadjusted.com/2009/05/28/opengeo-releases-opengeo-suite-puts-price-on-open-source-gis/">and James alludes to this</a>, the support draws from developers and contributors to the projects themselves. In most vendor technical support models, you are not getting access to the actual development teams. It is also important to note that OpenGeo supports integration with some proprietary tools and, at the enterprise level, for clustering and security. It also includes broad service-level definitions and discounted services rates (20% - 40% depending upon edition).</p>

<p>For many organizations, the question of adopting open-source GIS has been less about quantifying return on investment than it has been about quantifying the investment in the first place. The technical advantages of the tools in the OpenGeo Suite are readily apparent for many. I have spoken to a few people in the past who have found the features in PostGIS, GeoServer and OpenLayers in particular compelling but have shied away from adoption because of questions about total cost, including support and lifetime O&amp;M.</p>

<p>In my opinion, the OpenGeo pricing model represents a milestone because it finally marries the compelling technical capabilities of the tools in the suite with a clear, straightforward, and fair pricing/support model that quantifies costs of adoption/maintenance (if you use OpenGeo) and compares to proprietary vendor ELAs in an apples-to-apples fashion. This now gives an enterprise the tools it needs to do a true side-by-side cost/benefit analysis between open-source and proprietary geospatial tools and should begin to dispel misconceptions about the readiness of open-source geospatial tools for enterprise applications.</p>
]]></content>
  </entry>
  
</feed>
