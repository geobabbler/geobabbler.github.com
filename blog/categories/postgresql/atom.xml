<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: postgresql | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/postgresql/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2012-12-19T14:13:06-05:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Speaking of the 84%...]]></title>
    <link href="http://blog.geomusings.com/2012/02/08/Speaking-of-the-84/"/>
    <updated>2012-02-08T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2012/02/08/Speaking-of-the-84</id>
    <content type="html"><![CDATA[<p>HT to <a href="http://sproke.blogspot.com/2012/02/game-changer-open-source-mapping-in.html">Sophia Parafina for the 84%</a>.</p>

<p><strong>UPDATE</strong>: The NSIS script at utility batch file discussed here is now on github at <a href="https://github.com/geobabbler/pgstandalone" target="_blank">https://github.com/geobabbler/pgstandalone</a>. I'll post a readme in the next day or so.</p>

<p>A few months ago, I asked the following question on Twitter and got this reply from Paul Ramsey:</p>

<p><div class='embed tweet'><blockquote class="twitter-tweet" data-in-reply-to="136481537792294912"><p>@<a href="https://twitter.com/billdollins">billdollins</a> Possible yes, but might have to roll your own? You can get raw binaries in a zip file from download site...?</p>&mdash; Paul Ramsey (@pwramsey) <a href="https://twitter.com/pwramsey/status/136565522836897796" data-datetime="2011-11-15T22:05:32+00:00">November 15, 2011</a></blockquote>
<script src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p>We are working with a Federal Government customer that had the interesting policy that users can install software as long as it makes no changes to the Windows registry. These users are currently running a mix of Windows 7 and XP. We are working with them to help manage one of their data models. In this case, it's more about performing configuration management on the model/standard itself rather than physical databases with real data in them. It's a topic we touched on over at the Zekiah blog <a href="http://www.zekiah.com/index.php?q=blog/2012/01/13/expanding-usefulness-geospatial-data-standards" target="_blank">here</a> and an approach we have used successfully for years to manage the <a href="http://www.sdsfie.org/" target="_blank">SDSFIE</a> data standard. <!--more--></p>

<p>So we've applied the technique to another data standard for another Federal organization. In this case, we need to distribute tools to help data modelers work with the platform-independent logical model (PIM) on their own desktops. Typically, this has been centrally managed and accessible via an implementation in SQL Server. (Don't get wrapped around the term "platform-independent." We use it in a different context within this work.) Since we have to distribute to desktops, and SQL Server makes a slew of registry entries, and <a href="http://www.postgresql.org" target="_blank">PostgreSQL</a> has no licensing issues, we decided to go the PostgreSQL route.</p>

<p>It turns out, this was pretty easy. After doing the work for our approach, I have subsequently found posts showing a similar approach (as always, it depends on the day and the search term), which was nice because they sort of validated what I had already done.</p>

<p>Paul was on the right track with using the Windows binaries from the PostgreSQL site. Natively, PostgreSQL doesn't need any registry entries, which makes sense given that it also runs on Linux and Unix. Registry entries are typically introduced by the one-click installers that do helpful things like setting PostgreSQL up as a service and a few other things that require registry entries on Windows. These are very useful things that I avail myself of when I use PostgreSQL on Windows. In this particular use case, those features were not helpful.</p>

<p>One thing that you'll notice when you use the one-click installer is that you'll end up with a batch file called "pg_env.bat" in the install folder for your version. It looks something like this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='powershell'><span class='line'><span class="nv">@ECHO</span> <span class="n">OFF</span>
</span><span class='line'><span class="n">REM</span> <span class="n">The</span> <span class="n">script</span> <span class="n">sets</span> <span class="n">environment</span> <span class="n">variables</span> <span class="n">helpful</span> <span class="k">for</span> <span class="n">PostgreSQL</span><span class="p">&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="nv">@SET</span> <span class="n">PATH</span><span class="p">=</span><span class="s2">&quot;C:\Program Files (x86)\PostgreSQL\8.4\bin&quot;</span><span class="err">;</span><span class="k">%</span><span class="n">PATH</span><span class="p">%</span>
</span><span class='line'><span class="nv">@SET</span> <span class="n">PGDATA</span><span class="p">=</span><span class="n">C</span><span class="err">:</span><span class="p">\</span><span class="n">Program</span> <span class="n">Files</span> <span class="p">(</span><span class="n">x86</span><span class="p">)\</span><span class="n">PostgreSQL</span><span class="p">\</span><span class="n">8</span><span class="p">.</span><span class="n">4</span><span class="p">\</span><span class="n">data</span>
</span><span class='line'><span class="nv">@SET</span> <span class="n">PGDATABASE</span><span class="p">=</span><span class="n">postgres</span>
</span><span class='line'><span class="nv">@SET</span> <span class="n">PGUSER</span><span class="p">=</span><span class="n">postgres</span>
</span><span class='line'><span class="nv">@SET</span> <span class="n">PGPORT</span><span class="p">=</span><span class="n">5432</span>
</span><span class='line'><span class="nv">@SET</span> <span class="n">PGLOCALEDIR</span><span class="p">=</span><span class="n">C</span><span class="err">:</span><span class="p">\</span><span class="n">Program</span> <span class="n">Files</span> <span class="p">(</span><span class="n">x86</span><span class="p">)\</span><span class="n">PostgreSQL</span><span class="p">\</span><span class="n">8</span><span class="p">.</span><span class="n">4</span><span class="p">\</span><span class="n">share</span><span class="p">\</span><span class="n">locale</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>As you can see, I'm working with version 8.4 of PostgreSQL. That version is what has been blessed but I am also rolling up an implementation of this approach for 9.1 as we expect to get that approval soon.</p>

<p>With this batch file and the unzipped binaries, we have everything we need to run PostgreSQL without running an installer that makes registry entries. Now all we need to do is tell each user to unzip the binaries, edit the batch file to point to the correct paths, open a command window and run the batch file...</p>

<p>...Clearly, there was a little more work to do to make this operate smoothly.</p>

<p>First, we wanted <a href="http://www.postgis.org/" target="_blank">PostGIS</a> in our build. As I mentioned before, the PIM represents a logical model that doesn't store actual data, but we wanted it to know about PostGIS data types. Additionally, we wanted to distribute the PIM with PostgreSQL. In this case, we did a little bit of prep work using a standard install of PostgreSQL to add PostGIS (and its template database) and build/populate our PIM database.</p>

<p>Once we had this done, we moved the data directory over to our "unzipped" instance of PostgreSQL. We tested by running our batch file from the command prompt and starting PosgreSQL the same way. In our case, we changed the listening port to 54325. We then attempted to connect via pgAdmin3 and had success:</p>

<div style="text-align: center;"><img alt="" class="size-full wp-image-2471" height="274" src="http://geobabble.files.wordpress.com/2012/02/pgpost1.png" title="pgpost1" width="235" /><div style="text-align: center; font-size: 14px">Connection successful!<br /></div></div>


<p>This is all well and good, but probably still a bit much to ask a user to do. So we built an installer. In this case, we used the <a href="http://nsis.sourceforge.net/Main_Page" target="_blank">Nullsoft Scriptable Install System</a> (NSIS) to build our own installer and ensure that no registry entries were made. So once we had our instance/data prepped the way we wanted it, we zipped it all back up for inclusion in the installer. The NSIS script for the installer is at the end of this post.</p>

<p>For the installer to work, we also made use of the <a href="http://nsis.sourceforge.net/ZipDLL_plug-in">ZipDLL plug-in</a> for NSIS. The installer essentially prompts the user to specify the install location then unzips the PostgreSQL binaries/data, builds the driver batch file and places shortcuts on the user's desktop. It's really that simple. We have a utility (also a batch file) that builds the driver batch file as the installer runs. When it's done, the installer cleans up the zip file and the utility. The resulting driver batch file looks like this (where the user specified "C:\Program Files (x86)\PGStandalone11" as the install location):</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='powershell'><span class='line'><span class="n">REM</span> <span class="n">This</span> <span class="n">file</span> <span class="n">was</span> <span class="n">automatically</span> <span class="n">generated</span>
</span><span class='line'><span class="n">REM</span> <span class="n">This</span> <span class="n">script</span> <span class="n">sets</span> <span class="n">environment</span> <span class="n">variables</span> <span class="n">helpful</span> <span class="k">for</span> <span class="n">PostgreSQL</span>
</span><span class='line'><span class="nv">@SET</span> <span class="n">PATH</span><span class="p">=</span><span class="s2">&quot;C:\Program Files (x86)\PGStandalone11\bin&quot;</span><span class="err">;</span><span class="k">%</span><span class="n">PATH</span><span class="p">%</span>
</span><span class='line'><span class="nv">@SET</span> <span class="n">PGDATA</span><span class="p">=</span><span class="n">C</span><span class="err">:</span><span class="p">\</span><span class="n">Program</span> <span class="n">Files</span> <span class="p">(</span><span class="n">x86</span><span class="p">)\</span><span class="n">PGStandalone11</span><span class="p">\</span><span class="n">data</span>
</span><span class='line'><span class="nv">@SET</span> <span class="n">PGDATABASE</span><span class="p">=</span><span class="n">postgres</span>
</span><span class='line'><span class="nv">@SET</span> <span class="n">PGUSER</span><span class="p">=</span><span class="n">postgres</span>
</span><span class='line'><span class="nv">@SET</span> <span class="n">PGPORT</span><span class="p">=</span><span class="n">54325</span>
</span><span class='line'><span class="nv">@SET</span> <span class="n">PGLOCALEDIR</span><span class="p">=</span><span class="n">C</span><span class="err">:</span><span class="p">\</span><span class="n">Program</span> <span class="n">Files</span> <span class="p">(</span><span class="n">x86</span><span class="p">)\</span><span class="n">PGStandalone11</span><span class="p">\</span><span class="n">share</span><span class="p">\</span><span class="n">locale</span>
</span><span class='line'><span class="n">CALL</span> <span class="s2">&quot;C:\Program Files (x86)\PGStandalone11\bin\postgres.exe&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We also drop two shortcuts on the desktop:</p>

<p><img alt="" class="aligncenter size-full wp-image-2475" height="161" src="http://geobabble.files.wordpress.com/2012/02/pgpost2.png" title="pgpost2" width="316" /></p>

<p>The shortcut labeled "Start PostGIS PIM" executes the batch file above. The shortcut labeled "Manage PostGIS PIM" starts pgAdmin3. I am currently trying to get pgAdmin3 to read the connection information from its settings.ini file instead of looking to the registry. If the user adds the connection on their own, it will write information to the HKCU hive of the registry. This may end up being acceptable but I probably still won't let it go until I solve this problem.</p>

<p>Once we get this completely finalized, I'll make the script and the utilities available. Another reason that I love PostgreSQL is that things like this seem to end up being easier than you would think. That's a sign of a well-built piece of software, in my opinion.</p>

<p>And here's the installer's NSIS script:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>!define CO_DIR &quot;Zekiah Technologies&quot;
</span><span class='line'>!define NAME &quot;Standalone PostgreSQL/PostGIS Install for Windows&quot;
</span><span class='line'>!define SHORTNAME &quot;PGStandalone&quot;
</span><span class='line'>!define UNINSTALLER &quot;uninstall.exe&quot;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;OutFile &quot;setup_${SHORTNAME}.exe&quot;
</span><span class='line'>Name &quot;${NAME}&quot;
</span><span class='line'>Caption &quot;${NAME} Setup&quot;
</span><span class='line'>InstallDir &quot;$PROGRAMFILES\${SHORTNAME}&quot;
</span><span class='line'>CompletedText &quot;Success.&quot;
</span><span class='line'>XPStyle &quot;On&quot;
</span><span class='line'>InstallColors /windows&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Page directory
</span><span class='line'>Page instfiles
</span><span class='line'>ShowInstDetails show&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Section &quot;Install&quot;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;SetOutPath $INSTDIR
</span><span class='line'>
</span><span class='line'>; Create uninstaller first, so user can clean up if we barf.
</span><span class='line'>WriteUninstaller &quot;$INSTDIR\${UNINSTALLER}&quot; ;this actually does nothing right now
</span><span class='line'>
</span><span class='line'>; Extract all the files.
</span><span class='line'>DetailPrint &quot;Extracting files...&quot;
</span><span class='line'>File pg.zip
</span><span class='line'>ZipDLL::extractall &quot;$INSTDIR\pg.zip&quot; &quot;$INSTDIR&quot;
</span><span class='line'>
</span><span class='line'>;Write batch file using INSTDIR to set correct paths
</span><span class='line'>Call WriteBatchFile
</span><span class='line'>DetailPrint &quot;OK: Batch file written&quot;
</span><span class='line'>
</span><span class='line'>Call OutputToTemp
</span><span class='line'>GetFullPathName /short $0 $INSTDIR
</span><span class='line'>Delete &quot;$INSTDIR\pg.zip&quot;
</span><span class='line'>
</span><span class='line'>; Add start menu shortcuts.
</span><span class='line'>DetailPrint &quot;Adding shortcuts...&quot;
</span><span class='line'>SetShellVarContext all
</span><span class='line'>CreateDirectory &quot;$SMPROGRAMS\${NAME}&quot;
</span><span class='line'>SetOutPath &quot;$SMPROGRAMS\${NAME}&quot;
</span><span class='line'>CreateShortCut &quot;Uninstall.lnk&quot; &quot;$INSTDIR\${UNINSTALLER}&quot;
</span><span class='line'>CreateShortCut &quot;$DESKTOP\Start PostGIS PIM.lnk&quot; &quot;$INSTDIR\pg_standalone.bat&quot; &quot;&quot;
</span><span class='line'>CreateShortCut &quot;$DESKTOP\Manage PostGIS PIM.lnk&quot; &quot;$INSTDIR\bin\pgAdmin3.exe&quot; &quot;&quot;
</span><span class='line'>
</span><span class='line'>; Success.
</span><span class='line'>DetailPrint &quot;All Done!&quot;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;SectionEnd&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Function OutputToTemp&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;ExpandEnvStrings $5 &quot;%TEMP%&quot;
</span><span class='line'>SetOutPath $5
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;FunctionEnd&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Function un.OutputToTemp&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;ExpandEnvStrings $5 &quot;%TEMP%&quot;
</span><span class='line'>SetOutPath $5
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;FunctionEnd&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Function WriteBatchFile&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;; execute utility to create batch file to execute PostgreSQL
</span><span class='line'>
</span><span class='line'>Call OutputToTemp
</span><span class='line'>File &quot;utils\make_pg_env.bat&quot;
</span><span class='line'>ExecWait &#39;&quot;$5\make_pg_env.bat&quot; &quot;$INSTDIR&quot;&#39;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;FunctionEnd&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;UninstPage uninstConfirm
</span><span class='line'>UninstPage instfiles
</span><span class='line'>ShowUninstDetails hide&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Section &quot;Uninstall&quot;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;; Remove all start menu shortcuts.
</span><span class='line'>DetailPrint &quot;Removing shortcuts...&quot;
</span><span class='line'>SetShellVarContext all
</span><span class='line'>Delete &quot;$SMPROGRAMS\${NAME}\*&quot;
</span><span class='line'>RmDir &quot;$SMPROGRAMS\${NAME}&quot;
</span><span class='line'>
</span><span class='line'>DetailPrint &quot;Removing files...&quot;
</span><span class='line'>
</span><span class='line'>Delete &quot;$INSTDIR\${UNINSTALLER}&quot;
</span><span class='line'>RmDir &quot;$INSTDIR&quot;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;SectionEnd
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zigGIS - The End of the Road]]></title>
    <link href="http://blog.geomusings.com/2011/08/03/zigGIS-The-End-of-the-Road/"/>
    <updated>2011-08-03T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2011/08/03/zigGIS-The-End-of-the-Road</id>
    <content type="html"><![CDATA[<p><a href="http://twitter.com/xanadont">Abe Gillespie</a> made it official today on the zigGIS Google Group: development on <a href="http://pub.obtusesoft.com">zigGIS</a> will cease.  <!--more--></p>

<blockquote>
I've been meaning to make an announcement that zigGIS has officially reached its end-of-life since the next version of ArcGIS should support direct read / write interoperability with PostGIS (thereby rendering zigGIS moot).  I was delaying the announcement because I was hoping we could test PgMap and, if it was any good, suggest it as an alternative during the interim.  But we haven't been able to test it yet.

In any case, PgMap is free, so why not give it a try?  I'm sure the list would appreciate any feedback you could give.
</blockquote>


<p>This is obviously a something of a bittersweet, though expected, development for me. Although <a href="http://blog.geomusings.com/2010/09/28/me-and-ziggis/">I ceased my involvement with zigGIS</a> last year, I was still rooting for it. Abe had a lot of cool plans for it but the fact that <a href="http://www.esri.com">ArcGIS</a> will <a href="http://events.esri.com/uc/QandA/index.cfm?fuseaction=Answer&amp;ConferenceID=DD02CFE7-1422-2418-7F271831F47A7A31&amp;QuestionID=3949">natively support direct read/write to its supported spatial databases</a> really renders zigGIS unnecessary. Its primary value at this point would be support for earlier versions of ArcGIS but that's not really enough to justify so much time and effort.</p>

<p><img alt="zigGIS is no more" class="alignleft size-medium wp-image-3109" src="http://geobabble.files.wordpress.com/2007/08/ziggis_logo.jpg?w=200" /></p>

<p>In terms of ArcGIS, this is a good development. Direct read/write is a capability that always needed to be there and now it will be. When I first got involved with zigGIS, <a href="http://postgis.refractions.net">PostGIS</a> wasn't supported at all so it made a lot of sense. At the time, I was stuck in a windowless room building a personnel system, so working on zigGIS in the evenings helped be stay connected to the geospatial world. It enabled me to work with Abe and <a href="https://twitter.com/capooti">Paolo Corti</a>; a fact that I will always treasure. Abe put a lot of sweat into zigGIS over its lifetime and I am honored to have helped him in some small way. zigGIS also brought me into contact with phenomenally supportive users, such as <a href="http://www.bostongis.com/blog/">Regina Obe</a> and <a href="http://thesteve0.wordpress.com/">Steven Citron-Pousty</a>, from both of whom I learned a great deal.</p>

<p>Some of the first posts on this blog were about zigGIS. It's hard to believe I've just written my last one.</p>

<p>The PgMap product that Abe mentions can be found <a href="http://st-links.com/default.aspx">here</a>.</p>

<p><strong>UPDATE:</strong> Later in the same discussion on the zigGIS group, Abe responded to a question about opening the latest version of the code (version 2.x) this way:</p>

<blockquote>
I'm planning on doing just that.  But I didn't want to
announce anything yet because I have very little free time right now
and don't know when I can get to it.
</blockquote>


<p>The full discussion thread is here: <a href="http://groups.google.com/group/ziggis/browse_thread/thread/14ae8a351564de9e">http://groups.google.com/group/ziggis/browse_thread/thread/14ae8a351564de9e</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Triggered Notifications Using PostGIS]]></title>
    <link href="http://blog.geomusings.com/2011/08/01/Triggered-Notifications-Using-PostGIS/"/>
    <updated>2011-08-01T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2011/08/01/Triggered-Notifications-Using-PostGIS</id>
    <content type="html"><![CDATA[<p>My project work the last few months has kept me away from a lot of my favorite open-source tools and I was starting to get hives. Specifically, it had been a while since I had worked with <a href="http://www.postgresql.org">PostgreSQL</a> and <a href="http://postgis.refractions.net">PostGIS</a> and I was missing the experience, so I dreamed up something to do.</p>

<p><img alt="" class="aligncenter size-full wp-image-1898" height="307" src="http://geobabble.files.wordpress.com/2011/08/elephant.png" title="Elephant" width="461" /></p>

<p>I do a lot of work implementing situational awareness systems for my customers and one common requirement is automated notification of events. I decided that I wanted to roll a completely FOSS approach to sending an SMS notification based upon the results of a spatial query. This post will discuss the basic wiring to make it all work. I'll probably add more advanced features in subsequent posts but I'll be sticking to the basics for now.</p>

<!--more-->


<p>I decided to keep my first pass relatively simple in order to work out the core logic and workflow. To get started, I really only needed a few things:</p>

<ol>
    <li>PostgreSQL with PostGIS installed. I simply used the <a href="http://www.opengeo.org">OpenGeo</a> Community Edition.</li>
    <li><a href="http://developer.postgresql.org/pgdocs/postgres/plpython.html">plpython</a> - support for writing PostgreSQL functions in <a href="http://www.python.org">Python</a></li>
    <li>Python - I used version 2.7 for this</li>
    <li>Some spatial data - I loaded a data set of the US counties to test with</li>
</ol>


<p>Using these tools, I set out to create a core workflow that would use a trigger function attached to a point data set to test, whenever a record was inserted or updated, whether the point geometry fell within a specific US county (St. Mary's County, Maryland in this case). If so, the system would send an SMS message to me. In order to do this, I had to create the following:</p>

<ol>
    <li>An empty table with a PostGIS geometry column to store the incoming points</li>
    <li>A trigger function to perform the spatial query on insert or update</li>
    <li>A trigger to fire the trigger function</li>
    <li>A function to send the SMS message</li>
    <li>Some test SQL to insert records into the point table</li>
</ol>


<p>The first step was loading my county data, which I had in shapefile format. For that, I simply used <a href="http://www.qgis.org/">QGIS</a> and its SPIT plug-in. After that, I created the table that would hold my point data. Right now, it's just a point and an ID. The SQL is very simple:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='postgres'><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">locations</span> <span class="p">(</span><span class="n">gid</span> <span class="nb">SERIAL</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">);</span>
</span><span class='line'><span class="k">SELECT</span> <span class="n">AddGeometryColumn</span> <span class="p">(</span><span class="s1">&#39;public&#39;</span><span class="p">,</span><span class="s1">&#39;locations&#39;</span><span class="p">,</span><span class="s1">&#39;shape&#39;</span><span class="p">,</span><span class="mf">4326</span><span class="p">,</span><span class="s1">&#39;POINT&#39;</span><span class="p">,</span><span class="mf">2</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This table is the one that does all the work. The initial trigger will be attached to it. The counties data set really just sits there waiting to be queried. I'll actually take the next three functions in the reverse of the order in which they will execute.</p>

<p>The first function I wrote was the one that sends off the actual SMS message. That is its sole job in this process. After looking at different ways to accomplish the SMS, my old <a href="http://www.obtusesoft.com/">zigGIS</a> partner, <a href="http://twitter.com/xanadont">Abe</a> <a href="http://www.linkedin.com/in/agillesp">Gillespie</a>, clued me in to using each provider's e-mail gateway. So, by sending a properly formatted e-mail, the end user will receive an SMS message. You can learn more about it <a href="http://www.emailtextmessages.com/">here</a>. (Thanks, Abe!) So, my task really just became sending an e-mail message, which is nice because I want support that as well so now I can reuse code. After looking at various means to send e-mail from within PostgreSQL, I decided that Python was the most direct way to accomplish it.</p>

<p>PostgreSQL supports using Python for functions in a manner similar to the way SQL Server supports embedded procedures written against the <a href="http://en.wikipedia.org/wiki/Common_Language_Runtime">Common Language Runtime</a>. You simply need to make sure plpython support is installed with your instance of PostgreSQL. Here is the code for the simplified messaging function:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='postgres'><span class='line'><span class="k">CREATE</span> <span class="k">OR</span> <span class="k">REPLACE</span> <span class="k">FUNCTION</span> <span class="n">emailme</span><span class="p">(</span><span class="n">txt</span> <span class="nb">text</span><span class="p">)</span>
</span><span class='line'>  <span class="k">RETURNS</span> <span class="nb">integer</span> <span class="k">AS</span>
</span><span class='line'><span class="s">$BODY$</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">python</span> <span class="n">starts</span> <span class="n">here</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Import</span> <span class="n">smtplib</span> <span class="k">for</span> <span class="n">the</span> <span class="n">actual</span> <span class="n">sending</span> <span class="n">function</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">smtplib</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">email</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">re</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Import</span> <span class="n">the</span> <span class="n">email</span> <span class="n">modules</span> <span class="n">we</span><span class="s">&#39;ll need&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">email.mime.text</span> <span class="kn">import</span> <span class="n">MIMEText</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">threading</span> <span class="kn">import</span> <span class="n">Thread</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">mailfunction</span><span class="p">(</span><span class="n">recip</span><span class="p">,</span><span class="n">msgtxt</span><span class="p">,</span><span class="o">*</span><span class="n">args</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">msg</span> <span class="o">=</span> <span class="n">MIMEText</span><span class="p">(</span><span class="n">msgtxt</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># me == the sender&#39;s email address</span>
</span><span class='line'><span class="c"># you == the recipient&#39;s email address</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;Subject&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;Message from PostgreSQL&#39;</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;From&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;contact@zekiah.com&#39;</span>
</span><span class='line'><span class="c">#msg[&#39;To&#39;] = &#39;not used here&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Send the message via our own SMTP server, but don&#39;t include the</span>
</span><span class='line'><span class="c"># envelope header.</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">smtplib</span><span class="o">.</span><span class="n">SMTP</span><span class="p">(</span><span class="s">&#39;localhost&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">sendmail</span><span class="p">(</span><span class="s">&#39;contact@zekiah.com&#39;</span><span class="p">,</span> <span class="p">[</span><span class="n">recip</span><span class="p">],</span> <span class="n">msg</span><span class="o">.</span><span class="n">as_string</span><span class="p">())</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">quit</span><span class="p">()</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">t</span> <span class="o">=</span> <span class="n">Thread</span><span class="p">(</span><span class="n">target</span><span class="o">=</span><span class="n">mailfunction</span><span class="p">,</span><span class="n">args</span><span class="o">=</span><span class="p">(</span><span class="s">&#39;1234567890@vtext.com&#39;</span><span class="p">,</span> <span class="n">txt</span><span class="p">))</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span><span class='line'><span class="k">return</span> <span class="mi">0</span>
</span><span class='line'><span class="s">$BODY$</span>
</span><span class='line'>  <span class="k">LANGUAGE</span> <span class="n">plpythonu</span> <span class="k">VOLATILE</span>
</span><span class='line'>  <span class="k">COST</span> <span class="mf">100</span><span class="p">;</span>
</span><span class='line'><span class="k">ALTER</span> <span class="k">FUNCTION</span> <span class="n">emailme</span><span class="p">(</span><span class="nb">text</span><span class="p">)</span> <span class="k">OWNER</span> <span class="k">TO</span> <span class="n">postgres</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>As can be seen, the Python code is embedded in the body of the function. Early on, I was experiencing significant slowness when sending the messages. After some code refactoring, I realized it was the SMTP handshake that was causing the problem. The original version used an external server that required authentication. I installed a local open-source SMTP server and configured it to allow unauthenticated relay from the local server and the bottleneck went away.</p>

<p>This version of the code receives the message body as a parameter and sends to a hard-coded address. I plan to change this to accept the recipient address as well. Then the calling function can pass in an array of recipients who have subscribed to these messages. For now, the system just talks to me.</p>

<p>Next, I built the trigger function. This is a little different from other platforms I've worked on. In SQL Server, a trigger is basically a stored procedure that gets called when a table event happens. When authoring, you simply build the one procedure. In PostgreSQL, you have two distinct objects: a trigger and a trigger function. The trigger function does the heavy lifting and the trigger is what calls it. In my case, the trigger function is what performs the actual spatial query to determine if the new point geometry falls within my county. The code for that function is here:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='postgres'><span class='line'><span class="k">CREATE</span> <span class="k">OR</span> <span class="k">REPLACE</span> <span class="k">Function</span> <span class="n">checkcounty</span><span class="p">()</span> <span class="k">RETURNS</span> <span class="k">TRIGGER</span> <span class="k">AS</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="s">$BODY$</span>
</span><span class='line'><span class="k">DECLARE</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">shp</span> <span class="n">geometry</span><span class="p">;</span>
</span><span class='line'><span class="n">a_row</span> <span class="n">counties</span><span class="nb">%ROWTYPE</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">BEGIN</span>
</span><span class='line'><span class="n">shp</span> <span class="o">=</span> <span class="n">new</span><span class="mf">.</span><span class="n">shape</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">counties</span> <span class="k">WHERE</span> <span class="n">ST_Contains</span><span class="p">(</span><span class="n">counties</span><span class="mf">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">shp</span><span class="p">)</span> <span class="k">INTO</span> <span class="n">a_row</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">IF</span> <span class="n">a_row</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">THEN</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">IF</span> <span class="n">a_row</span><span class="mf">.</span><span class="s-Name">&quot;COUNTY&quot;</span> <span class="o">=</span> <span class="s1">&#39;Saint Marys County&#39;</span> <span class="k">THEN</span>
</span><span class='line'>    <span class="k">PERFORM</span> <span class="n">emailme</span><span class="p">(</span><span class="s1">&#39;New feature in St. Mary`s County&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">END</span> <span class="k">IF</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">END</span> <span class="k">IF</span><span class="p">;</span>
</span><span class='line'><span class="k">RETURN</span> <span class="n">new</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">END</span><span class="p">;</span>
</span><span class='line'><span class="s">$BODY$</span>
</span><span class='line'><span class="k">LANGUAGE</span> <span class="s1">&#39;plpgsql&#39;</span> <span class="k">VOLATILE</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Again, I'm just checking for one, hard-coded value. In my next iteration, I plan to make that configurable so that the trigger function will test for various user-specified conditions. Of course, the type of spatial relationship can also be configured.</p>

<p>Lastly, the trigger itself. As can be seen, it's primary job is to call the trigger function when appropriate.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='postgres'><span class='line'><span class="k">CREATE</span> <span class="k">TRIGGER</span> <span class="n">locations_change</span>
</span><span class='line'>  <span class="k">AFTER</span> <span class="k">INSERT</span> <span class="k">OR</span> <span class="k">UPDATE</span>
</span><span class='line'>  <span class="k">ON</span> <span class="n">locations</span>
</span><span class='line'>  <span class="k">FOR</span> <span class="k">EACH</span> <span class="k">ROW</span>
</span><span class='line'>  <span class="k">EXECUTE</span> <span class="k">PROCEDURE</span> <span class="n">checkcounty</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Once these were all in place, I used the following to test:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='postgres'><span class='line'><span class="c1">--TRUE</span>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">locations</span>
</span><span class='line'><span class="p">(</span><span class="n">shape</span><span class="p">)</span>
</span><span class='line'><span class="k">VALUES</span>
</span><span class='line'><span class="p">(</span><span class="n">ST_PointFromText</span><span class="p">(</span><span class="s1">&#39;POINT(-76.662 38.348)&#39;</span><span class="p">,</span> <span class="mf">4326</span><span class="p">));</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;--</span><span class="k">FALSE</span>
</span><span class='line'><span class="c1">--insert into locations</span>
</span><span class='line'><span class="c1">--(shape)</span>
</span><span class='line'><span class="c1">--VALUES</span>
</span><span class='line'><span class="c1">--(ST_PointFromText(&#39;POINT(-76.622 37.895)&#39;, 4326));&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;--</span><span class="k">NULL</span>
</span><span class='line'><span class="c1">--insert into locations</span>
</span><span class='line'><span class="c1">--(shape)</span>
</span><span class='line'><span class="c1">--VALUES</span>
</span><span class='line'><span class="c1">--(ST_PointFromText(&#39;POINT(-74.482 37.734)&#39;, 4326));</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>These objects represent the basic skeleton of the notification capability I am building. In the future, I also want to support various types of messaging in addition to SMS and e-mail. I'm thinking of Twitter, publishing to RSS or Atom and other such options.</p>

<p>Even at this early stage, I've got to consider performance. The spatial query in the trigger is performing amazingly fast but my data is still small. I've got spatial indices built on the data sets but I'll need to keep an eye on that as this grows. Thankfully, <a href="http://www.manning.com/obe/">'PostGIS In Action'</a> offers lots of tips in that regard. Another design consideration I've made is that all of my spatial data sets will be stored in the same spatial reference. PostGIS has nice coordinate transformation capabilities but I don't want to introduce that into my trigger functions in case data starts to grow. I plan to pre-process buffers and such for the same reasons.</p>

<p>I'm pretty happy with this so far primarily because all of the logic is executing at the database level. There's really no need to extract any of this logic out into a middle-tier library of any kind and it's running without any dependence on any middleware. It's also a nice use of spatial processing that doesn't involve a map. I love maps but they aren't necessary in every application of spatial technology. I'm also excited to have a meaty requirement to dig into to help with my Python explorations. I've missed working with these tools. It's good to be back.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Me and zigGIS]]></title>
    <link href="http://blog.geomusings.com/2010/09/28/Me-and-zigGIS/"/>
    <updated>2010-09-28T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2010/09/28/Me-and-zigGIS</id>
    <content type="html"><![CDATA[<p>If you?ve been to the <a href="http://pub.obtusesoft.com">Obtuse Software</a> site recently, you may or may not have noticed a change to the ?<a href="http://pub.obtusesoft.com/who.aspx">Who We Are</a>? page. It now lists only <a href="http://abegillespie.blogspot.com">Abe Gillespie</a> and <a href="http://www.paolocorti.net/">Paolo Corti</a>. Prior to my trip to Colorado to talk about zigGIS at <a href="http://www.gisintherockies.org/GISITR2010/Home/Default.aspx">GIS in the Rockies</a>, I informed Abe and Paolo that I would be stepping back from any ?official? involvement in Obtuse.</p>

<p>This does not mean that I am stepping back from involvement in zigGIS. I plan to continue to support zigGIS as it returns to open-source but, in truth, I haven?t done much with zigGIS day-to-day in a long time. As part of the <a href="http://abegillespie.blogspot.com/2010/04/prodigal-extension.html">return of zigGIS to open-source at version 3.0</a>, Abe has been working on a plan to give the community multiple paths to support the project, including sponsorship and technical support plans. I'm sure he'll have the details out soon so I'll leave it at that (since it's not my story to tell). So, as Obtuse transitions to more of a supporting role for the zigGIS 3.0 open-source project, I felt that this was a good time to step away and become part of the community. <!--more--></p>

<p>But enough about me, this post is called ?Me and zigGIS? so I?ll address some of the key needs for zigGIS 3.0, as I see them. Abe is planning a complete rewrite in order to make zigGIS better. A certain amount of that will have to stay on his plate (with help from Paolo) but it?s a large effort. To that end, help is needed. <a href="http://abegillespie.blogspot.com/2010/06/on-to-30.html">Abe published the roadmap</a> a while back so you can take a look and see what needs to be done. zigGIS 3.0 will happen faster and better with the help of additional developers, testers, end-users, etc.</p>

<p><img alt="null" src="http://geobabble.files.wordpress.com/2007/08/ziggis_logo.jpg" /></p>

<p>Developers are the most obvious. If you have C# and/or ArcObjects experience and want to get involved in an open-source project, zigGIS can use the help. Testing has always been a big issue with zigGIS as it has lots of moving parts. Between <a href="http://www.esri.com">ArcMap</a>, .Net, <a href="http://www.postgresql.org">PostgreSQL</a> and <a href="http://www.postgis.com">PostGIS</a>, there are a lot of pieces which drive testing of zigGIS. Each new release of any of these can necessitate compatibility testing, the results of which can drive changes to the code. One of the great things about open-source is that those kinds of things can happen more fluidly. Recognizing, however, that not every user of zigGIS is a developer, it?s good to know who may want to take a compiled executable and put it through its paces or who may want to test an installer.</p>

<p>Another big thing on the roadmap is internationalization. A lot of the users of zigGIS (maybe even most of them) are from outside the United States. Supporting languages other than English would be a good thing to do. That?s something that wouldn't necessarily require any coding skill at all but would be a huge help.</p>

<p>As an aside, when zigGIS 2.0 was released, we <a href="http://code.google.com/p/ziggis/">left zigGIS 1.x (licensed under the GPL) available</a>. It is read-only and lacks many of the features that have been added to 2.x but the downloads have continued so I know there is an appetite for an open-source tool that does what zigGIS does. So I hope that some of those people who have continued to use 1.x can help build 3.0.</p>

<p>So why help? Why zigGIS? I?ll address these questions in more detail in future posts. Before I ever got involved with the project, <a href="http://geobabble.wordpress.com/2006/12/17/postgis-and-arcgis-91/">I blogged about it</a>. The use case was a little clearer back then as ArcGIS simply did not support PostgreSQL/PostGIS as a back end. That changed at 9.3 and, although it may have muddied the waters somewhat for zigGIS, it provided a good option for ArcGIS users. So zigGIS had to find its niche.</p>

<p>Over the last couple of years, I have been putting some thought into that and I think that it can provide a nice way to augment workflow in an ArcGIS environment, allowing an organization to maximize the value of its ArcView licenses. Additionally, zigGIS is a nice option for an organization that is growing into its GIS capability. Such an organization may use ArcMap and may be ready to begin managing its spatial data centrally but may not quite be ready to make down-range decisions regarding web-mapping, online GIS and the like. zigGIS can provide a nice stepping stone to help a shop get more organized while also giving it more time to decide its next steps, allowing it to make longer-range decisions about technology and resources on its own schedule. I?ll be exploring these use cases in more detail in future posts.</p>

<p>So, while I?ve stepped away from Obtuse, I don?t plan to step away from zigGIS. As I continue on with my consulting, it is a technology that has key place in my toolbox. I?m glad it will be returning to open-source and I am looking forward to seeing how it evolves. I have greatly enjoyed my association with Abe and Paolo thus far and look forward to it continuing in a new and different form.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Look at "PostGIS In Action"]]></title>
    <link href="http://blog.geomusings.com/2010/04/21/A-Look-at-PostGIS-In-Action/"/>
    <updated>2010-04-21T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2010/04/21/A-Look-at-PostGIS-In-Action</id>
    <content type="html"><![CDATA[<p>Over the past few weeks, I have been reading a copy of the upcoming book by Regina Obe and Leo Hsu titled "<a href="http://manning.com/obe/">PostGIS In Action</a>." Through my work with <a href="http://pub.obtusesoft.com">zigGIS</a> and some of my consulting work with <a href="http://www.zekiah.com">Zekiah</a>, I have been using <a href="http://postgis.refractions.net/">PostGIS</a> with good results for some time now. I have found that it matches or exceeds the capabilities of its commercial counterparts and I can be quite productive with it.</p>

<p><img alt="" src="http://www.manning.com/obe/obe_cover150.jpg" /></p>

<p>Regina has been a frequent contributor to zigGIS discussions over the years and her expertise with PostGIS has definitely helped <a href="http://dpulp.com/">Abe</a>, <a href="http://www.paolocorti.net/">Paolo</a> and I as we have worked on it. Also, many tips from the <a href="http://www.bostongis.com/">Boston GIS blog/site</a> have been very helpful so I have been looking forward to this book for some time.<!--more--></p>

<p>I must confess to being something of a "book guy." I like having a book on my lap as I work through a problem (using my multiple monitors for actual implementation). "PostGIS in Action" puts most of what I need between one set of covers.</p>

<p>This book addresses a problem I have run into repeatedly in my consulting work: educating database professionals (DBAs, developers, etc.) on working with spatial data in a manner that they are familiar with. The authors are extremely knowledgeable about database technologies of all kinds and it comes through here.</p>

<p>Since PostGIS extends <a href="http://www.postgresql.org/">PostgreSQL</a>, it is impossible to separate the two when discussing good data design and implementation. The "Data Modeling" chapter provides a good discussion of various considerations when working with spatial data (use of complex geometries vs. points, homogeneous vs. heterogeneous geometry columns, etc.) but it also provides one of the best discussions of PostgreSQL table inheritance and partitioning that I have found in one place. Each topic, as throughout the book, is backed up by SQL examples and succinct discussion of the pros and cons of each approach.</p>

<p>The design consideration regarding storing geometry as points versus storing lines or polygons may seem basic to a GIS professional but is a discussion I have had repeatedly throughout my career with database designers who are new to spatial data. Many times, their initial instinct is to store X and Y values in separate columns in a table. This may be a perfectly valid approach for a given data set and how it is to be used but many design considerations come into play. "PostGIS In Action" does a good job of encapsulating those considerations in a manner that is consistent with how most database professionals approach database design.</p>

<p>Another concept that typically confounds database professionals on their first exposure to spatial data is the spatial reference system. "PostGIS In Action" has a chapter dedicated to spatial reference systems. It discusses various common spatial references and their pros and cons as well as the components of a spatial reference (ellipsoid, datum, projection, etc.). This is a complex topic and the purpose of this book is not to "teach GIS" but it is a crucial topic when working with spatial data. The chapter gives a good overview of the concepts and considerations surrounding spatial references. If you are starting to work with spatial data, you will leave the chapter with an understanding of their importance and the fact that you should probably dig into them further.</p>

<p>"PostGIS In Action" continues on to discuss using PostGIS to perform spatial analysis. As always, real SQL samples are used so that a database professional will become comfortable with the use of spatial joins, spatial indexing, the many spatial functions built into PostGIS and many other concepts and techniques. Throughout the book, the authors return to a few examples (the fictional "Hello Town", San Francisco, Washington, DC) so that each topic is discussed within a problem set with which we become familiar. Additionally, tools such as <a href="http://www.gdal.org/ogr/">OGR</a> and <a href="http://www.qgis.org/">QGIS/SPIT</a> are also discussed (with examples).</p>

<p>I could go on but I will summarize what I like about "PostGIS In Action": it provides a solid foundation for an experienced database professional who needs to begin working with spatial data using PostGIS and PostgreSQL.</p>

<p>Throughout this post, I have used the term "database professional" to describe who I think will benefit from this book. It is not for beginners or the faint of heart. You should be very comfortable with your knowledge of relational databases, SQL and (optionally) PostgreSQL before diving into the book. "PostGIS in Action" does not teach RDBMS basics, nor should it.</p>

<p>From the solid foundation it provides, the book delves into advanced topics and techniques that will enable the reader to become productive with PostGIS. A programmer can also benefit from the practical SQL examples in the book to write better applications (regardless of language) on top of of PostGIS/PostgreSQL. I also think database professionals working on other platforms (such as Oracle/Oracle Spatial) could benefit from the better understanding of the unique characteristics of spatial data that can be achieved with this book. They will also begin to see how well PostgreSQL stacks up against commercial RDBMS platforms in terms of capability.</p>

<p>The subject of spatial data, as well as its implementation in PostGIS, is too big for one book to attempt to handle in a "one-stop shop" manner. "PostGIS In Action" wisely avoids trying to do this. It is a good starting point to begin building expertise if you are new to spatial data and, if you are experienced with it, you will probably learn a few things you didn't know. I recommend checking out "PostGIS In Action" if you are or will be working with PostGIS or spatial data.</p>
]]></content>
  </entry>
  
</feed>
