<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: sql server | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/sql-server/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2012-12-21T13:28:14-05:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SQL Server SIG at the UC]]></title>
    <link href="http://blog.geomusings.com/2008/08/06/sql-server-sig-at-the-uc/"/>
    <updated>2008-08-06T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2008/08/06/sql-server-sig-at-the-uc</id>
    <content type="html"><![CDATA[<p>My blogging has been slower this time around because I've been doing a lot of booth duty. This is my thrid conference this year and some of our other staff are getting to go to the sessions. I did, however, go to the SQL Server SIG a little while ago.</p>

<p>Ed Katibah had a few tricks up his sleeve. First off, he dropped the news that, as of 11:00am, SQL Server 2008 is now in RTM. Very soon, the final version will be in our hands. That's great news to everyone who has been working with the CTPs and RCs.</p>

<p>Ed had few other nuggets. He described the stress-testing that SQL 2008 has undergone. In short, there has been about 375,000 hours of stress testing run against SQL 2008 so we should be able to expect it to be solid. Additionally, Microsoft has already been running on SQL 2008 for "a few months." To me, this is all great news that makes me feel even more confident about the product (which already had my confidence). When I first installed the November CTP, I felt that much of the platform was already production-ready but more testing and use can't have hurt.</p>

<p>Ed went on to describe the two spatial types and reationale for doing that. That discussion is well documented and I fall in the "it's a good thing category" mainly because of previous work with applications that had over-the-horizon requirements.</p>

<p>Ed gave props to Paul Ramsey during his talk when explaining the XY switching debate. It was great to see that kind of respect on display.</p>

<p>Some nuts and bolts: SQL 2008 limits spatial objects to about 250 million vertices. This greatly exceeds Ed's largest test case, which is a high-res vector data set of the world's oceans. Polygons are limited to about 65,000 holes. I think those limits leave a lot of wiggle room. He also discussed the significance of coordinate ordering for the geography data type. Basically, it's counter-clockwise for outer rings and clockwise for inner rings. This is consistent with implementations in Informix, DB2 and Oracle (those are what he mentioned). He did mention that this was an industry consensus but there was no official specification on this matter. Ed also mentioned it may be a topic of future discussion for OGC.</p>

<p>Ed also demonstrated the spatial results window in the SQL management Studio. This is a really nice tool that lets you visualize the results of your spatial SQL inside the management studio. As a developer, that will be a huge help because I won't have to do a test run to see if I got the query right. Ed just saved me a bunch of time!</p>

<p>Ed went on to announce a companion CodePlex site for SQL Server 2008 spatial tools: <a href="http://www.codeplex.com/sqlspatialtools">www.codeplex.com/SqlSpatialTools</a>. There are already some tools that Isaac has posted but Ed said that other tools will include shapefile and KML converters. The site will also be open to contribs from the community. All of the tools currently there were developed using the <a href="http://blogs.msdn.com/isaac/archive/2008/05/30/our-upcoming-builder-api.aspx">Builder API</a> and full source code is available so they serve has great examples of working with the Builder API.</p>

<p>All in all, it was a great talk. Ed's one of the nicest guys ever and he is having a lot of fun with ArcSDE on SQL Server 2008.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrading to SQL Server 2008 February CTP]]></title>
    <link href="http://blog.geomusings.com/2008/02/25/upgrading-to-sql-server-2008-february-ctp/"/>
    <updated>2008-02-25T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2008/02/25/upgrading-to-sql-server-2008-february-ctp</id>
    <content type="html"><![CDATA[<p>There is no direct upgrade yet so you need to remove the November CTP. Apparently, the uninstall doesn't always work well (hey, it's beta). Luckily, <a href="http://dotnettim.spaces.live.com/blog/cns!4B800EB59FAEDC2A!152.entry">Tim's post</a> straightened me out. This worked for me. More accurately, the guidance in Michael's comment worked for me.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL Server 2008 and 2005 Side-By-Side]]></title>
    <link href="http://blog.geomusings.com/2008/02/01/sql-server-2008-and-2005-side-by-side/"/>
    <updated>2008-02-01T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2008/02/01/sql-server-2008-and-2005-side-by-side</id>
    <content type="html"><![CDATA[<p>Installing the the SQL Server 2008 November CTP side-by-side with SQL Server 2005 is very straightforward. On the previous build of my machine, I had them both running just fine. After my system crash, I began setting things up again. Because I had been working with 2008 before the crash, I installed that first and then got around to 2005 later.</p>

<p>It should have been obvious to me before I did that but installing them in that order seems to break a lot of stuff in 2008. Kinda makes sense. I was a little flustered at having to rebuild in the first place and perhaps rushing things a bit but here it is for the record: If you are installing both of them on a new box, put on 2005 first.</p>

<p>Generally the database engine worked well. Most of the issues I had came up in the management studio. After installing 2005, many of the dialogs and property pages in the Katmai management studio would no longer display. Attempting to invoke them usually resulted in a "class not registered" exception.</p>

<p>In order to fix that, I had to remove and then re-install 2008. Before doing that, I detached my databases and then re-attached them after I was done. Everything works fine now.</p>

<p>This probably says more about me than it does SQL Server ;) but I thought I'd share.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spatial References in SQL Server 2008, Part 3]]></title>
    <link href="http://blog.geomusings.com/2007/12/08/spatial-references-in-sql-server-2008-part-3/"/>
    <updated>2007-12-08T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2007/12/08/spatial-references-in-sql-server-2008-part-3</id>
    <content type="html"><![CDATA[<p>A little clarification is in order:</p>

<p>SQL Server 2008 Books Online makes the following statement about SRIDs:</p>

<blockquote>
"A SQL Server-supported SRID for geography instances must be used when performing calculations or using methods with geography spatial data. The SRID must match one of the SRIDs displayed in the sys.spatial_reference_systems catalog view."
</blockquote>


<p>As previously noted, SQL 2008 supports two spatial data types: geometry and geography. As can be seen, the above statement only applies to the geography data type. If you are using geometry, the SRID can be set to anything (I have done so). It would probably be a best practice to stick to <a href="http://www.epsg.org/">EPSG</a>-defined SRIDs but this does open up the possibility of user-defined spatial references similar to <a href="http://postgis.refractions.net">PostGIS</a>. <a href="http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=2505683&amp;SiteID=1">In a discussion with Isaac on the MSDN forum</a>, he clarified that they plan to leave such things to the discretion of the database designers/users for implementation. As can be seen in the discussion, it seems they may also write up some best practices but it seems many things such as constraints to limit SRIDs and geometry types will be left to users/developers/DBAs to implement.</p>

<p>So, as a result of the discussion, I think I have a better understanding of <a href="http://www.microsoft.com">MSFT</a>'s intent and how to proceed with SQL 2008. It will be interesting to adjust my way of thinking from what I have come to expect from other products.</p>

<p>Also, other discussions on the forum seem to indicate that this release will not have any coordinate transformation functions so those of us planning to use and develop with SQL 2008 should probably get comfortable with something like <a href="http://www.codeplex.com/ProjNET">Proj.Net</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL Server 2008 SharpMap Data Provider Code]]></title>
    <link href="http://blog.geomusings.com/2007/11/28/sql-server-2008-sharpmap-data-provider-code/"/>
    <updated>2007-11-28T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2007/11/28/sql-server-2008-sharpmap-data-provider-code</id>
    <content type="html"><![CDATA[<p>As promised, I have uploaded the data provider code I <a href="http://geobabble.wordpress.com/2007/11/20/sharpmap-and-sql-server-2008-spatial/">mentioned earlier</a> to the <a href="http://www.codeplex.com/SharpMap">SharpMap</a> site. It's written in C#. I took the existing Oracle provider, stripped out the Oracle SQL and put in T-SQL. There are a couple of things I'm still trying to chase down but it's basically done at this point. I know they're busy trying to finish up SharpMap 2.0 so I don't know how long it'll take to become available. Just in case, here's the code:<!--more--></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
<span class='line-number'>419</span>
<span class='line-number'>420</span>
<span class='line-number'>421</span>
<span class='line-number'>422</span>
<span class='line-number'>423</span>
<span class='line-number'>424</span>
<span class='line-number'>425</span>
<span class='line-number'>426</span>
<span class='line-number'>427</span>
<span class='line-number'>428</span>
<span class='line-number'>429</span>
<span class='line-number'>430</span>
<span class='line-number'>431</span>
<span class='line-number'>432</span>
<span class='line-number'>433</span>
<span class='line-number'>434</span>
<span class='line-number'>435</span>
<span class='line-number'>436</span>
<span class='line-number'>437</span>
<span class='line-number'>438</span>
<span class='line-number'>439</span>
<span class='line-number'>440</span>
<span class='line-number'>441</span>
<span class='line-number'>442</span>
<span class='line-number'>443</span>
<span class='line-number'>444</span>
<span class='line-number'>445</span>
<span class='line-number'>446</span>
<span class='line-number'>447</span>
<span class='line-number'>448</span>
<span class='line-number'>449</span>
<span class='line-number'>450</span>
<span class='line-number'>451</span>
<span class='line-number'>452</span>
<span class='line-number'>453</span>
<span class='line-number'>454</span>
<span class='line-number'>455</span>
<span class='line-number'>456</span>
<span class='line-number'>457</span>
<span class='line-number'>458</span>
<span class='line-number'>459</span>
<span class='line-number'>460</span>
<span class='line-number'>461</span>
<span class='line-number'>462</span>
<span class='line-number'>463</span>
<span class='line-number'>464</span>
<span class='line-number'>465</span>
<span class='line-number'>466</span>
<span class='line-number'>467</span>
<span class='line-number'>468</span>
<span class='line-number'>469</span>
<span class='line-number'>470</span>
<span class='line-number'>471</span>
<span class='line-number'>472</span>
<span class='line-number'>473</span>
<span class='line-number'>474</span>
<span class='line-number'>475</span>
<span class='line-number'>476</span>
<span class='line-number'>477</span>
<span class='line-number'>478</span>
<span class='line-number'>479</span>
<span class='line-number'>480</span>
<span class='line-number'>481</span>
<span class='line-number'>482</span>
<span class='line-number'>483</span>
<span class='line-number'>484</span>
<span class='line-number'>485</span>
<span class='line-number'>486</span>
<span class='line-number'>487</span>
<span class='line-number'>488</span>
<span class='line-number'>489</span>
<span class='line-number'>490</span>
<span class='line-number'>491</span>
<span class='line-number'>492</span>
<span class='line-number'>493</span>
<span class='line-number'>494</span>
<span class='line-number'>495</span>
<span class='line-number'>496</span>
<span class='line-number'>497</span>
<span class='line-number'>498</span>
<span class='line-number'>499</span>
<span class='line-number'>500</span>
<span class='line-number'>501</span>
<span class='line-number'>502</span>
<span class='line-number'>503</span>
<span class='line-number'>504</span>
<span class='line-number'>505</span>
<span class='line-number'>506</span>
<span class='line-number'>507</span>
<span class='line-number'>508</span>
<span class='line-number'>509</span>
<span class='line-number'>510</span>
<span class='line-number'>511</span>
<span class='line-number'>512</span>
<span class='line-number'>513</span>
<span class='line-number'>514</span>
<span class='line-number'>515</span>
<span class='line-number'>516</span>
<span class='line-number'>517</span>
<span class='line-number'>518</span>
<span class='line-number'>519</span>
<span class='line-number'>520</span>
<span class='line-number'>521</span>
<span class='line-number'>522</span>
<span class='line-number'>523</span>
<span class='line-number'>524</span>
<span class='line-number'>525</span>
<span class='line-number'>526</span>
<span class='line-number'>527</span>
<span class='line-number'>528</span>
<span class='line-number'>529</span>
<span class='line-number'>530</span>
<span class='line-number'>531</span>
<span class='line-number'>532</span>
<span class='line-number'>533</span>
<span class='line-number'>534</span>
<span class='line-number'>535</span>
<span class='line-number'>536</span>
<span class='line-number'>537</span>
<span class='line-number'>538</span>
<span class='line-number'>539</span>
<span class='line-number'>540</span>
<span class='line-number'>541</span>
<span class='line-number'>542</span>
<span class='line-number'>543</span>
<span class='line-number'>544</span>
<span class='line-number'>545</span>
<span class='line-number'>546</span>
<span class='line-number'>547</span>
<span class='line-number'>548</span>
<span class='line-number'>549</span>
<span class='line-number'>550</span>
<span class='line-number'>551</span>
<span class='line-number'>552</span>
<span class='line-number'>553</span>
<span class='line-number'>554</span>
<span class='line-number'>555</span>
<span class='line-number'>556</span>
<span class='line-number'>557</span>
<span class='line-number'>558</span>
<span class='line-number'>559</span>
<span class='line-number'>560</span>
<span class='line-number'>561</span>
<span class='line-number'>562</span>
<span class='line-number'>563</span>
<span class='line-number'>564</span>
<span class='line-number'>565</span>
<span class='line-number'>566</span>
<span class='line-number'>567</span>
<span class='line-number'>568</span>
<span class='line-number'>569</span>
<span class='line-number'>570</span>
<span class='line-number'>571</span>
<span class='line-number'>572</span>
<span class='line-number'>573</span>
<span class='line-number'>574</span>
<span class='line-number'>575</span>
<span class='line-number'>576</span>
<span class='line-number'>577</span>
<span class='line-number'>578</span>
<span class='line-number'>579</span>
<span class='line-number'>580</span>
<span class='line-number'>581</span>
<span class='line-number'>582</span>
<span class='line-number'>583</span>
<span class='line-number'>584</span>
<span class='line-number'>585</span>
<span class='line-number'>586</span>
<span class='line-number'>587</span>
<span class='line-number'>588</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="c1">// Copyright 2008 - William Dollins</span>
</span><span class='line'><span class="c1">// SQL Server 2008 by William Dollins (dollins.bill@gmail.com)</span>
</span><span class='line'><span class="c1">// Based on Oracle provider by Humberto Ferreira (humbertojdf@hotmail.com)</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// Date 2007-11-28</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// This file is part of SharpMap.</span>
</span><span class='line'><span class="c1">// SharpMap is free software; you can redistribute it and/or modify</span>
</span><span class='line'><span class="c1">// it under the terms of the GNU Lesser General Public License as published by</span>
</span><span class='line'><span class="c1">// the Free Software Foundation; either version 2 of the License, or</span>
</span><span class='line'><span class="c1">// (at your option) any later version.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// SharpMap is distributed in the hope that it will be useful,</span>
</span><span class='line'><span class="c1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
</span><span class='line'><span class="c1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
</span><span class='line'><span class="c1">// GNU Lesser General Public License for more details.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="c1">// You should have received a copy of the GNU Lesser General Public License</span>
</span><span class='line'><span class="c1">// along with SharpMap; if not, write to the Free Software</span>
</span><span class='line'><span class="c1">// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Collections.ObjectModel</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Data.SqlClient</span><span class="p">;&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="k">namespace</span> <span class="nn">SharpMap.Data.Providers</span>
</span><span class='line'><span class="p">{&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="c1">/// </span>
</span><span class='line'><span class="c1">/// SQL Server 2008 data provider</span>
</span><span class='line'><span class="c1">/// </span>
</span><span class='line'><span class="c1">/// </span>
</span><span class='line'><span class="c1">/// This provider was developed against the SQL Server 2008 November CTP. The platform may change significantly before release.</span>
</span><span class='line'><span class="c1">/// </span>
</span><span class='line'><span class="c1">/// Adding a datasource to a layer:</span>
</span><span class='line'><span class="c1">/// &amp;lt;code lang=&quot;C#&quot;&amp;gt;</span>
</span><span class='line'><span class="c1">/// SharpMap.Layers.VectorLayer myLayer = new SharpMap.Layers.VectorLayer(&quot;My layer&quot;);</span>
</span><span class='line'><span class="c1">/// string ConnStr = &quot;Provider=SQLOLEDB.1;Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=myDB;Data Source=myServer\myInstance&quot;;</span>
</span><span class='line'><span class="c1">/// myLayer.DataSource = new SharpMap.Data.Providers.Katmai(ConnStr, &quot;myTable&quot;, &quot;GeomColumn&quot;, &quot;OidColumn&quot;);</span>
</span><span class='line'><span class="c1">/// &amp;lt;/code&amp;gt;</span>
</span><span class='line'><span class="c1">/// </span>
</span><span class='line'><span class="c1">/// SharpMap SQL Server 2008 provider by Bill Dollins (dollins.bill@gmail.com). Based on the Oracle provider written by Humberto Ferreira.</span>
</span><span class='line'><span class="c1">/// </span>
</span><span class='line'><span class="na">[Serializable]</span>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">Katmai</span> <span class="p">:</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">Providers</span><span class="p">.</span><span class="n">IProvider</span><span class="p">,</span> <span class="n">IDisposable</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Initializes a new connection to SQL Server</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Connectionstring</span>
</span><span class='line'>    <span class="c1">/// Name of data table</span>
</span><span class='line'>    <span class="c1">/// Name of geometry column</span>
</span><span class='line'>    <span class="c1">/// /// Name of column with unique identifier</span>
</span><span class='line'>    <span class="k">public</span> <span class="nf">Katmai</span><span class="p">(</span><span class="kt">string</span> <span class="n">ConnectionStr</span><span class="p">,</span> <span class="kt">string</span> <span class="n">tablename</span><span class="p">,</span> <span class="kt">string</span> <span class="n">geometryColumnName</span><span class="p">,</span> <span class="kt">string</span> <span class="n">OID_ColumnName</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">//Provider=SQLOLEDB.1;Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=ztTest;Data Source=\</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">ConnectionString</span> <span class="p">=</span> <span class="n">ConnectionStr</span><span class="p">;</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">=</span> <span class="n">tablename</span><span class="p">;</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">=</span> <span class="n">geometryColumnName</span><span class="p">;</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">ObjectIdColumn</span> <span class="p">=</span> <span class="n">OID_ColumnName</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Initializes a new connection to SQL Server</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Connectionstring</span>
</span><span class='line'>    <span class="c1">/// Name of data table</span>
</span><span class='line'>    <span class="c1">/// Name of column with unique identifier</span>
</span><span class='line'>    <span class="k">public</span> <span class="nf">Katmai</span><span class="p">(</span><span class="kt">string</span> <span class="n">ConnectionStr</span><span class="p">,</span> <span class="kt">string</span> <span class="n">tablename</span><span class="p">,</span> <span class="kt">string</span> <span class="n">OID_ColumnName</span><span class="p">)</span> <span class="p">:</span> <span class="k">this</span><span class="p">(</span><span class="n">ConnectionStr</span><span class="p">,</span><span class="n">tablename</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="n">OID_ColumnName</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">=</span> <span class="s">&quot;shape&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">bool</span> <span class="n">_IsOpen</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns true if the datasource is currently open</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">bool</span> <span class="n">IsOpen</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_IsOpen</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Opens the datasource</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">Open</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">//Don&#39;t really do anything.</span>
</span><span class='line'>        <span class="n">_IsOpen</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Closes the datasource</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">Close</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">//Don&#39;t really do anything.</span>
</span><span class='line'>        <span class="n">_IsOpen</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="cp">#region Disposers and finalizers</span>
</span><span class='line'>    <span class="k">private</span> <span class="kt">bool</span> <span class="n">disposed</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Disposes the object</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">Dispose</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Dispose</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
</span><span class='line'>        <span class="n">GC</span><span class="p">.</span><span class="n">SuppressFinalize</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">internal</span> <span class="k">void</span> <span class="nf">Dispose</span><span class="p">(</span><span class="kt">bool</span> <span class="n">disposing</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(!</span><span class="n">disposed</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">disposing</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="c1">//Close();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">disposed</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Finalizer</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="p">~</span><span class="n">Katmai</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Dispose</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cp">#endregion</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">string</span> <span class="n">_ConnectionString</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Connectionstring</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">ConnectionString</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_ConnectionString</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">set</span> <span class="p">{</span> <span class="n">_ConnectionString</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">string</span> <span class="n">_Table</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Data table name</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">Table</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_Table</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">set</span> <span class="p">{</span> <span class="n">_Table</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">string</span> <span class="n">_GeometryColumn</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Name of geometry column</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">GeometryColumn</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_GeometryColumn</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">set</span> <span class="p">{</span> <span class="n">_GeometryColumn</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">string</span> <span class="n">_ObjectIdColumn</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Name of column that contains the Object ID</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">ObjectIdColumn</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_ObjectIdColumn</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">set</span> <span class="p">{</span> <span class="n">_ObjectIdColumn</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns geometries within the specified bounding box</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="n">Collection</span> <span class="nf">GetGeometriesInView</span><span class="p">(</span><span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">BoundingBox</span> <span class="n">bbox</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Collection</span> <span class="n">features</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Collection</span><span class="p">();</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">//Get bounding box string</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strBbox</span> <span class="p">=</span> <span class="n">GetBoxFilterStr</span><span class="p">(</span><span class="n">bbox</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;SELECT g.&quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span><span class="s">&quot;.STAsBinary() &quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="n">strSQL</span> <span class="p">+=</span> <span class="s">&quot; FROM &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">+</span> <span class="s">&quot; g WHERE &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">String</span><span class="p">.</span><span class="n">IsNullOrEmpty</span><span class="p">(</span><span class="n">_defintionQuery</span><span class="p">))</span>
</span><span class='line'>                <span class="n">strSQL</span> <span class="p">+=</span> <span class="k">this</span><span class="p">.</span><span class="n">DefinitionQuery</span> <span class="p">+</span> <span class="s">&quot; AND &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">strSQL</span> <span class="p">+=</span> <span class="n">strBbox</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlCommand</span> <span class="n">command</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>                <span class="k">using</span> <span class="p">(</span><span class="n">SqlDataReader</span> <span class="n">dr</span> <span class="p">=</span> <span class="n">command</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="k">while</span> <span class="p">(</span><span class="n">dr</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">dr</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">!=</span> <span class="n">DBNull</span><span class="p">.</span><span class="n">Value</span><span class="p">)</span>
</span><span class='line'>                        <span class="p">{</span>
</span><span class='line'>                            <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Geometry</span> <span class="n">geom</span> <span class="p">=</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Converters</span><span class="p">.</span><span class="n">WellKnownBinary</span><span class="p">.</span><span class="n">GeometryFromWKB</span><span class="p">.</span><span class="n">Parse</span><span class="p">((</span><span class="kt">byte</span><span class="p">[])</span><span class="n">dr</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
</span><span class='line'>                            <span class="k">if</span><span class="p">(</span><span class="n">geom</span><span class="p">!=</span><span class="k">null</span><span class="p">)</span>
</span><span class='line'>                                <span class="n">features</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">geom</span><span class="p">);</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">features</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns the geometry corresponding to the Object ID</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Object ID</span>
</span><span class='line'>    <span class="c1">/// geometry</span>
</span><span class='line'>    <span class="k">public</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Geometry</span> <span class="n">GetGeometryByID</span><span class="p">(</span><span class="kt">uint</span> <span class="n">oid</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Geometry</span> <span class="n">geom</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;SELECT g.&quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span> <span class="s">&quot;.STAsBinary() FROM &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">+</span> <span class="s">&quot; g WHERE &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">ObjectIdColumn</span> <span class="p">+</span> <span class="s">&quot;=&#39;&quot;</span> <span class="p">+</span> <span class="n">oid</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="s">&quot;&#39;&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlCommand</span> <span class="n">command</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">using</span> <span class="p">(</span><span class="n">SqlDataReader</span> <span class="n">dr</span> <span class="p">=</span> <span class="n">command</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="k">while</span> <span class="p">(</span><span class="n">dr</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">dr</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">!=</span> <span class="n">DBNull</span><span class="p">.</span><span class="n">Value</span><span class="p">)</span>
</span><span class='line'>                            <span class="n">geom</span> <span class="p">=</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Converters</span><span class="p">.</span><span class="n">WellKnownBinary</span><span class="p">.</span><span class="n">GeometryFromWKB</span><span class="p">.</span><span class="n">Parse</span><span class="p">((</span><span class="kt">byte</span><span class="p">[])</span><span class="n">dr</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">geom</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns geometry Object IDs whose bounding box intersects &#39;bbox&#39;</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="n">Collection</span> <span class="nf">GetObjectIDsInView</span><span class="p">(</span><span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">BoundingBox</span> <span class="n">bbox</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Collection</span> <span class="n">objectlist</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Collection</span><span class="p">();</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">//Get bounding box string</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strBbox</span> <span class="p">=</span> <span class="n">GetBoxFilterStr</span><span class="p">(</span><span class="n">bbox</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;SELECT g.&quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">ObjectIdColumn</span> <span class="p">+</span> <span class="s">&quot; &quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="n">strSQL</span> <span class="p">+=</span> <span class="s">&quot;FROM &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">+</span> <span class="s">&quot; g WHERE &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">String</span><span class="p">.</span><span class="n">IsNullOrEmpty</span><span class="p">(</span><span class="n">_defintionQuery</span><span class="p">))</span>
</span><span class='line'>                <span class="n">strSQL</span> <span class="p">+=</span> <span class="k">this</span><span class="p">.</span><span class="n">DefinitionQuery</span> <span class="p">+</span> <span class="s">&quot; AND &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">strSQL</span> <span class="p">+=</span> <span class="n">strBbox</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlCommand</span> <span class="n">command</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>                <span class="k">using</span> <span class="p">(</span><span class="n">SqlDataReader</span> <span class="n">dr</span> <span class="p">=</span> <span class="n">command</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="k">while</span> <span class="p">(</span><span class="n">dr</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">dr</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">!=</span> <span class="n">DBNull</span><span class="p">.</span><span class="n">Value</span><span class="p">)</span>
</span><span class='line'>                        <span class="p">{</span>
</span><span class='line'>                            <span class="kt">uint</span> <span class="n">ID</span> <span class="p">=</span> <span class="p">(</span><span class="kt">uint</span><span class="p">)(</span><span class="kt">decimal</span><span class="p">)</span><span class="n">dr</span><span class="p">[</span><span class="m">0</span><span class="p">];</span>
</span><span class='line'>                            <span class="n">objectlist</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">ID</span><span class="p">);</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">objectlist</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns the box filter string needed in SQL query</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">private</span> <span class="kt">string</span> <span class="nf">GetBoxFilterStr</span><span class="p">(</span><span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">BoundingBox</span> <span class="n">bbox</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">//geography::STGeomFromText(&#39;LINESTRING(47.656 -122.360, 47.656 -122.343)&#39;, 4326);</span>
</span><span class='line'>        <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">LinearRing</span> <span class="n">lr</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">LinearRing</span><span class="p">();</span>
</span><span class='line'>        <span class="n">lr</span><span class="p">.</span><span class="n">Vertices</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Point</span><span class="p">(</span><span class="n">bbox</span><span class="p">.</span><span class="n">Left</span><span class="p">,</span> <span class="n">bbox</span><span class="p">.</span><span class="n">Bottom</span><span class="p">));</span>
</span><span class='line'>        <span class="n">lr</span><span class="p">.</span><span class="n">Vertices</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Point</span><span class="p">(</span><span class="n">bbox</span><span class="p">.</span><span class="n">Right</span><span class="p">,</span> <span class="n">bbox</span><span class="p">.</span><span class="n">Bottom</span><span class="p">));</span>
</span><span class='line'>        <span class="n">lr</span><span class="p">.</span><span class="n">Vertices</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Point</span><span class="p">(</span><span class="n">bbox</span><span class="p">.</span><span class="n">Right</span><span class="p">,</span> <span class="n">bbox</span><span class="p">.</span><span class="n">Top</span><span class="p">));</span>
</span><span class='line'>        <span class="n">lr</span><span class="p">.</span><span class="n">Vertices</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Point</span><span class="p">(</span><span class="n">bbox</span><span class="p">.</span><span class="n">Left</span><span class="p">,</span> <span class="n">bbox</span><span class="p">.</span><span class="n">Top</span><span class="p">));</span>
</span><span class='line'>        <span class="n">lr</span><span class="p">.</span><span class="n">Vertices</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Point</span><span class="p">(</span><span class="n">bbox</span><span class="p">.</span><span class="n">Left</span><span class="p">,</span> <span class="n">bbox</span><span class="p">.</span><span class="n">Bottom</span><span class="p">));</span>
</span><span class='line'>        <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Polygon</span> <span class="n">p</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Polygon</span><span class="p">(</span><span class="n">lr</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">string</span> <span class="n">bboxText</span> <span class="p">=</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Converters</span><span class="p">.</span><span class="n">WellKnownText</span><span class="p">.</span><span class="n">GeometryToWKT</span><span class="p">.</span><span class="n">Write</span><span class="p">((</span><span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">IGeometry</span><span class="p">)</span><span class="n">p</span><span class="p">);</span> <span class="c1">// &quot;&quot;;</span>
</span><span class='line'>        <span class="kt">string</span> <span class="n">whereClause</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span> <span class="s">&quot;.STIntersects(geometry::STGeomFromText(&#39;&quot;</span> <span class="p">+</span> <span class="n">bboxText</span> <span class="p">+</span> <span class="s">&quot;&#39;, &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">SRID</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="s">&quot;)) = 1&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">whereClause</span><span class="p">;</span> <span class="c1">// strBbox;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns the features that intersects with &#39;geom&#39;</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// FeatureDataSet to fill data into</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">ExecuteIntersectionQuery</span><span class="p">(</span><span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Geometry</span> <span class="n">geom</span><span class="p">,</span> <span class="n">FeatureDataSet</span> <span class="n">ds</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">List</span> <span class="n">features</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">();</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">//TODO: Convert to SQL Server</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strGeom</span> <span class="p">=</span> <span class="s">&quot;geography::STGeomFromText(&#39;&quot;</span> <span class="p">+</span> <span class="n">geom</span><span class="p">.</span><span class="n">AsText</span><span class="p">()</span> <span class="p">+</span> <span class="s">&quot;&#39;, #SRID#)&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">SRID</span> <span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">strGeom</span> <span class="p">=</span> <span class="n">strGeom</span><span class="p">.</span><span class="n">Replace</span><span class="p">(</span><span class="s">&quot;#SRID#&quot;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">SRID</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">strGeom</span> <span class="p">=</span> <span class="n">strGeom</span><span class="p">.</span><span class="n">Replace</span><span class="p">(</span><span class="s">&quot;#SRID#&quot;</span><span class="p">,</span> <span class="s">&quot;0&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">strGeom</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span> <span class="s">&quot;.STIntersects(&quot;</span> <span class="p">+</span> <span class="n">strGeom</span> <span class="p">+</span> <span class="s">&quot;) = 1&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;SELECT g.* , g.&quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span> <span class="s">&quot;).STAsBinary() As sharpmap_tempgeometry FROM &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">+</span> <span class="s">&quot; g WHERE &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">String</span><span class="p">.</span><span class="n">IsNullOrEmpty</span><span class="p">(</span><span class="n">_defintionQuery</span><span class="p">))</span>
</span><span class='line'>                <span class="n">strSQL</span> <span class="p">+=</span> <span class="k">this</span><span class="p">.</span><span class="n">DefinitionQuery</span> <span class="p">+</span> <span class="s">&quot; AND &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">strSQL</span> <span class="p">+=</span> <span class="n">strGeom</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlDataAdapter</span> <span class="n">adapter</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlDataAdapter</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>                <span class="n">adapter</span><span class="p">.</span><span class="n">Fill</span><span class="p">(</span><span class="n">ds</span><span class="p">);</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">.</span><span class="n">Count</span> <span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">FeatureDataTable</span> <span class="n">fdt</span> <span class="p">=</span> <span class="k">new</span> <span class="n">FeatureDataTable</span><span class="p">(</span><span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
</span><span class='line'>                    <span class="k">foreach</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataColumn</span> <span class="n">col</span> <span class="k">in</span> <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Columns</span><span class="p">)</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">&amp;</span><span class="n">amp</span><span class="p">;&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">)</span>
</span><span class='line'>                            <span class="n">fdt</span><span class="p">.</span><span class="n">Columns</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span><span class="p">,</span> <span class="n">col</span><span class="p">.</span><span class="n">DataType</span><span class="p">,</span> <span class="n">col</span><span class="p">.</span><span class="n">Expression</span><span class="p">);</span>
</span><span class='line'>                    <span class="k">foreach</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataRow</span> <span class="n">dr</span> <span class="k">in</span> <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Rows</span><span class="p">)</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">SharpMap</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">FeatureDataRow</span> <span class="n">fdr</span> <span class="p">=</span> <span class="n">fdt</span><span class="p">.</span><span class="n">NewRow</span><span class="p">();</span>
</span><span class='line'>                        <span class="k">foreach</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataColumn</span> <span class="n">col</span> <span class="k">in</span> <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Columns</span><span class="p">)</span>
</span><span class='line'>                            <span class="k">if</span> <span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">&amp;</span><span class="n">amp</span><span class="p">;&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">)</span>
</span><span class='line'>                                <span class="n">fdr</span><span class="p">[</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span><span class="p">]</span> <span class="p">=</span> <span class="n">dr</span><span class="p">[</span><span class="n">col</span><span class="p">];</span>
</span><span class='line'>                        <span class="n">fdr</span><span class="p">.</span><span class="n">Geometry</span> <span class="p">=</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Converters</span><span class="p">.</span><span class="n">WellKnownBinary</span><span class="p">.</span><span class="n">GeometryFromWKB</span><span class="p">.</span><span class="n">Parse</span><span class="p">((</span><span class="kt">byte</span><span class="p">[])</span><span class="n">dr</span><span class="p">[</span><span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">]);</span>
</span><span class='line'>                        <span class="n">fdt</span><span class="p">.</span><span class="n">AddRow</span><span class="p">(</span><span class="n">fdr</span><span class="p">);</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                    <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">fdt</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Convert WellKnownText to linestrings</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">private</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">LineString</span> <span class="n">WktToLineString</span><span class="p">(</span><span class="kt">string</span> <span class="n">WKT</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">LineString</span> <span class="n">line</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">LineString</span><span class="p">();</span>
</span><span class='line'>        <span class="n">WKT</span> <span class="p">=</span> <span class="n">WKT</span><span class="p">.</span><span class="n">Substring</span><span class="p">(</span><span class="n">WKT</span><span class="p">.</span><span class="n">LastIndexOf</span><span class="p">(</span><span class="sc">&#39;(&#39;</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">).</span><span class="n">Split</span><span class="p">(</span><span class="sc">&#39;)&#39;</span><span class="p">)[</span><span class="m">0</span><span class="p">];</span>
</span><span class='line'>        <span class="kt">string</span><span class="p">[]</span> <span class="n">strPoints</span> <span class="p">=</span> <span class="n">WKT</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="sc">&#39;,&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">strPoint</span> <span class="k">in</span> <span class="n">strPoints</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">string</span><span class="p">[]</span> <span class="n">coord</span> <span class="p">=</span> <span class="n">strPoint</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="sc">&#39; &#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="n">line</span><span class="p">.</span><span class="n">Vertices</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Point</span><span class="p">(</span><span class="kt">double</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">coord</span><span class="p">[</span><span class="m">0</span><span class="p">],</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Map</span><span class="p">.</span><span class="n">numberFormat_EnUS</span><span class="p">),</span> <span class="kt">double</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">coord</span><span class="p">[</span><span class="m">1</span><span class="p">],</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Map</span><span class="p">.</span><span class="n">numberFormat_EnUS</span><span class="p">)));</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">line</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns the number of features in the dataset</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// number of features</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">int</span> <span class="nf">GetFeatureCount</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">count</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;SELECT COUNT(*) FROM &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">String</span><span class="p">.</span><span class="n">IsNullOrEmpty</span><span class="p">(</span><span class="n">_defintionQuery</span><span class="p">))</span>
</span><span class='line'>                <span class="n">strSQL</span> <span class="p">+=</span> <span class="s">&quot; WHERE &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">DefinitionQuery</span><span class="p">;</span>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlCommand</span> <span class="n">command</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>                <span class="n">count</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">command</span><span class="p">.</span><span class="n">ExecuteScalar</span><span class="p">();</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">count</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cp">#region IProvider Members</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">string</span> <span class="n">_defintionQuery</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Definition query used for limiting dataset</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">DefinitionQuery</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_defintionQuery</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">set</span> <span class="p">{</span> <span class="n">_defintionQuery</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Gets a collection of columns in the dataset</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataColumnCollection</span> <span class="n">Columns</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">NotImplementedException</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">int</span> <span class="n">_srid</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Spacial Reference ID</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">int</span> <span class="n">SRID</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">_srid</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">set</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">_srid</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns a datarow based on a RowID</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// datarow</span>
</span><span class='line'>    <span class="k">public</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">FeatureDataRow</span> <span class="n">GetFeature</span><span class="p">(</span><span class="kt">uint</span> <span class="n">RowID</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;select g.* , g.&quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span> <span class="s">&quot;.STAsBinary() As sharpmap_tempgeometry from &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">+</span> <span class="s">&quot; g WHERE &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">ObjectIdColumn</span> <span class="p">+</span> <span class="s">&quot;=&quot;</span> <span class="p">+</span> <span class="n">RowID</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlDataAdapter</span> <span class="n">adapter</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlDataAdapter</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">FeatureDataSet</span> <span class="n">ds</span> <span class="p">=</span> <span class="k">new</span> <span class="n">FeatureDataSet</span><span class="p">();</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>                <span class="n">adapter</span><span class="p">.</span><span class="n">Fill</span><span class="p">(</span><span class="n">ds</span><span class="p">);</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">.</span><span class="n">Count</span> <span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">FeatureDataTable</span> <span class="n">fdt</span> <span class="p">=</span> <span class="k">new</span> <span class="n">FeatureDataTable</span><span class="p">(</span><span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
</span><span class='line'>                    <span class="k">foreach</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataColumn</span> <span class="n">col</span> <span class="k">in</span> <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Columns</span><span class="p">)</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">&amp;</span><span class="n">amp</span><span class="p">;&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">)</span>
</span><span class='line'>                            <span class="n">fdt</span><span class="p">.</span><span class="n">Columns</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span><span class="p">,</span> <span class="n">col</span><span class="p">.</span><span class="n">DataType</span><span class="p">,</span> <span class="n">col</span><span class="p">.</span><span class="n">Expression</span><span class="p">);</span>
</span><span class='line'>                    <span class="k">if</span><span class="p">(</span><span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Rows</span><span class="p">.</span><span class="n">Count</span><span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="m">0</span><span class="p">)</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataRow</span> <span class="n">dr</span> <span class="p">=</span> <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Rows</span><span class="p">[</span><span class="m">0</span><span class="p">];</span>
</span><span class='line'>                        <span class="n">SharpMap</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">FeatureDataRow</span> <span class="n">fdr</span> <span class="p">=</span> <span class="n">fdt</span><span class="p">.</span><span class="n">NewRow</span><span class="p">();</span>
</span><span class='line'>                        <span class="k">foreach</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataColumn</span> <span class="n">col</span> <span class="k">in</span> <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Columns</span><span class="p">)</span>
</span><span class='line'>                            <span class="k">if</span> <span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">&amp;</span><span class="n">amp</span><span class="p">;&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">)</span>
</span><span class='line'>                                <span class="n">fdr</span><span class="p">[</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span><span class="p">]</span> <span class="p">=</span> <span class="n">dr</span><span class="p">[</span><span class="n">col</span><span class="p">];</span>
</span><span class='line'>                        <span class="n">fdr</span><span class="p">.</span><span class="n">Geometry</span> <span class="p">=</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Converters</span><span class="p">.</span><span class="n">WellKnownBinary</span><span class="p">.</span><span class="n">GeometryFromWKB</span><span class="p">.</span><span class="n">Parse</span><span class="p">((</span><span class="kt">byte</span><span class="p">[])</span><span class="n">dr</span><span class="p">[</span><span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">]);</span>
</span><span class='line'>                        <span class="k">return</span> <span class="n">fdr</span><span class="p">;</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                    <span class="k">else</span>
</span><span class='line'>                        <span class="k">return</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'>                    <span class="k">return</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Boundingbox of dataset</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// boundingbox</span>
</span><span class='line'>    <span class="k">public</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">BoundingBox</span> <span class="n">GetExtents</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;SELECT g.&quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span> <span class="s">&quot;.STEnvelope().STAsText() FROM &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">+</span> <span class="s">&quot; g &quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">String</span><span class="p">.</span><span class="n">IsNullOrEmpty</span><span class="p">(</span><span class="n">_defintionQuery</span><span class="p">))</span>
</span><span class='line'>                <span class="n">strSQL</span> <span class="p">+=</span> <span class="s">&quot; WHERE &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">DefinitionQuery</span><span class="p">;</span>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlCommand</span> <span class="n">command</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>                <span class="c1">//SharpMap.Geometries.Geometry geom = null;</span>
</span><span class='line'>                <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">BoundingBox</span> <span class="n">bx</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>                <span class="n">SqlDataReader</span> <span class="n">dr</span> <span class="p">=</span> <span class="n">command</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">();</span>
</span><span class='line'>                <span class="k">while</span> <span class="p">(</span><span class="n">dr</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="kt">string</span> <span class="n">wkt</span> <span class="p">=</span> <span class="n">dr</span><span class="p">.</span><span class="n">GetString</span><span class="p">(</span><span class="m">0</span><span class="p">);</span> <span class="c1">//[this.GeometryColumn];</span>
</span><span class='line'>                    <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Geometry</span> <span class="n">g</span> <span class="p">=</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Converters</span><span class="p">.</span><span class="n">WellKnownText</span><span class="p">.</span><span class="n">GeometryFromWKT</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">wkt</span><span class="p">);</span>
</span><span class='line'>                    <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">BoundingBox</span> <span class="n">bb</span> <span class="p">=</span> <span class="n">g</span><span class="p">.</span><span class="n">GetBoundingBox</span><span class="p">();</span>
</span><span class='line'>                    <span class="k">if</span> <span class="p">(</span><span class="n">bx</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">bx</span> <span class="p">=</span> <span class="n">bb</span><span class="p">;</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                    <span class="k">else</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">bx</span> <span class="p">=</span> <span class="n">bx</span><span class="p">.</span><span class="n">Join</span><span class="p">(</span><span class="n">bb</span><span class="p">);</span>
</span><span class='line'>                     <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="n">dr</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">bx</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Gets the connection ID of the datasource</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">ConnectionID</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_ConnectionString</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cp">#endregion</span>
</span><span class='line'>
</span><span class='line'>    <span class="cp">#region IProvider Members</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns all features with the view box</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// view box</span>
</span><span class='line'>    <span class="c1">/// FeatureDataSet to fill data into</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">ExecuteIntersectionQuery</span><span class="p">(</span><span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">BoundingBox</span> <span class="n">bbox</span><span class="p">,</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">FeatureDataSet</span> <span class="n">ds</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">List</span> <span class="n">features</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">();</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">//Get bounding box string</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strBbox</span> <span class="p">=</span> <span class="n">GetBoxFilterStr</span><span class="p">(</span><span class="n">bbox</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;SELECT g.*, g.&quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span> <span class="s">&quot;.Get_WKB() AS sharpmap_tempgeometry &quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="n">strSQL</span> <span class="p">+=</span> <span class="s">&quot;FROM &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">+</span> <span class="s">&quot; g WHERE &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">String</span><span class="p">.</span><span class="n">IsNullOrEmpty</span><span class="p">(</span><span class="n">_defintionQuery</span><span class="p">))</span>
</span><span class='line'>                <span class="n">strSQL</span> <span class="p">+=</span> <span class="k">this</span><span class="p">.</span><span class="n">DefinitionQuery</span> <span class="p">+</span> <span class="s">&quot; AND &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">strSQL</span> <span class="p">+=</span> <span class="n">strBbox</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlDataAdapter</span> <span class="n">adapter</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlDataAdapter</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>                <span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataSet</span> <span class="n">ds2</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataSet</span><span class="p">();</span>
</span><span class='line'>                <span class="n">adapter</span><span class="p">.</span><span class="n">Fill</span><span class="p">(</span><span class="n">ds2</span><span class="p">);</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">ds2</span><span class="p">.</span><span class="n">Tables</span><span class="p">.</span><span class="n">Count</span> <span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">FeatureDataTable</span> <span class="n">fdt</span> <span class="p">=</span> <span class="k">new</span> <span class="n">FeatureDataTable</span><span class="p">(</span><span class="n">ds2</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
</span><span class='line'>                    <span class="k">foreach</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataColumn</span> <span class="n">col</span> <span class="k">in</span> <span class="n">ds2</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Columns</span><span class="p">)</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">&amp;</span><span class="n">amp</span><span class="p">;&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">)</span>
</span><span class='line'>                            <span class="n">fdt</span><span class="p">.</span><span class="n">Columns</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span><span class="p">,</span><span class="n">col</span><span class="p">.</span><span class="n">DataType</span><span class="p">,</span><span class="n">col</span><span class="p">.</span><span class="n">Expression</span><span class="p">);</span>
</span><span class='line'>                    <span class="k">foreach</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataRow</span> <span class="n">dr</span> <span class="k">in</span> <span class="n">ds2</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Rows</span><span class="p">)</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">SharpMap</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">FeatureDataRow</span> <span class="n">fdr</span> <span class="p">=</span> <span class="n">fdt</span><span class="p">.</span><span class="n">NewRow</span><span class="p">();</span>
</span><span class='line'>                        <span class="k">foreach</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataColumn</span> <span class="n">col</span> <span class="k">in</span> <span class="n">ds2</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Columns</span><span class="p">)</span>
</span><span class='line'>                            <span class="k">if</span> <span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">&amp;</span><span class="n">amp</span><span class="p">;&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">)</span>
</span><span class='line'>                                <span class="n">fdr</span><span class="p">[</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span><span class="p">]</span> <span class="p">=</span> <span class="n">dr</span><span class="p">[</span><span class="n">col</span><span class="p">];</span>
</span><span class='line'>                        <span class="n">fdr</span><span class="p">.</span><span class="n">Geometry</span> <span class="p">=</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Converters</span><span class="p">.</span><span class="n">WellKnownBinary</span><span class="p">.</span><span class="n">GeometryFromWKB</span><span class="p">.</span><span class="n">Parse</span><span class="p">((</span><span class="kt">byte</span><span class="p">[])</span><span class="n">dr</span><span class="p">[</span><span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">]);</span>
</span><span class='line'>                        <span class="n">fdt</span><span class="p">.</span><span class="n">AddRow</span><span class="p">(</span><span class="n">fdr</span><span class="p">);</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                    <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">fdt</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cp">#endregion</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
