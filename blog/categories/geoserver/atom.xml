<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: geoserver | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/geoserver/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2012-12-21T12:40:19-05:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OpenGeo Suite - A Milestone]]></title>
    <link href="http://blog.geomusings.com/2009/06/01/OpenGeo-Suite-A-Milestone/"/>
    <updated>2009-06-01T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2009/06/01/OpenGeo-Suite-A-Milestone</id>
    <content type="html"><![CDATA[<p>On May 28th OpenGeo <a href="http://blog.opengeo.org/2009/05/28/opengeo-suite-released/">announced the release of the OpenGeo Suite</a>. They also describe their open pricing structure for support of the suite.</p>

<p>This announcement represents a milestone for open-source geospatial software. If you are of a technical nature and are expecting a detailed discussion of the technical advantages of the OpenGeo Suite, you should probably stop reading now. The OpenGeo Suite is a milestone because it establishes a fair pricing model that addresses what, in my opinion, has been the primary barrier to the adoption of open-source GIS in many enterprises: risk.<!--more--></p>

<p>Am I saying open-source GIS is risky? No. The products included in the suite have gelled into a commonly used core of tools implemented in many places. In fact, some of those products (PostGIS, GeoServer, OpenLayers) are part of a pro bono project I am working for a small town. They are stable, robust, proven and highly capable. So why do I state risk as a barrier to adoption?</p>

<p>Many very capable technical people recognize the quality of the tools included in the OpenGeo Suite. However, the adoption of any technology platform in a well-run enterprise must usually pass muster with senior management who have the responsibility for allocating and managing resources. Many times, this would be CIO and/or the CFO. For these people, a strong business case must be made to justify platform adoption/switch. In this situation, the vendor model is attractive because vendors usually come prepared with pricing that shows what products will be received and what level of support for those products can be expected. As we all know, your actual mileage may vary here but these arrangements generally represent a contract that is binding to a certain extent and can help mitigate risks associated with the implementation and integration of a software platform.</p>

<p>For example, ESRI has been very successful in addressing these concerns with the implementation of ELAs in many large organizations in both government and the private sector. These agreements make technology available to the users that need them while simultaneously helping to better fix the cost of implementing the ArcGIS platform in an organization.</p>

<p>The funny thing about risk is that, for all the tools and techniques out there for quantifying it, a large portion of it is still based on perception. In general, the perception of risk equals the presence of risk.</p>

<p>I have seen this dynamic at work first hand with regard to open-source software (both geospatial and otherwise) in a few instances. The common themes I have observed (and tried to overcome) are:</p>

<ol>
<li><p>Lack of reliable support ? For most organizations, information technology is a tool that they use to do something else. They are generally uninterested in delving heavily into software development themselves and fear that committing to open-source may cause them to need to bring in additional developers should changes or updates be needed. This business stance is perfectly legitimate and is one that must be recognized and accepted by the open-source community. To simply say ?You have the code. Make the change and contrib back.? puts many organizations <em>into a situation they don?t want to get into in the first place</em>. So there are a lot of organizations that are looking for someone to call when something doesn?t work correctly.</p></li>
<li><p>Lack of integration between projects ? There can be some legitimacy to this. Many open-source projects are indeed independent entities. Many are also coupled together (such as GeoServer and GeoWebCache) but integration of products, if needed, may very well fall to the user if there is no prior association between the projects. Obviously, you can make the changes you need and contribute them back to the projects but see item number one for how many organizations view that whole process. You can also bring in a consultant to do the integration but the long-term O&amp;M of that becomes a concern.</p></li>
<li><p>Security ? There is a concern that, due to the crowd-sourced nature of open-source software, that malicious code could be inserted and that the implementing organization would need to scrub the code to ensure against this, leading to the need to have in-house experts that can understand the code. This stance speaks more to the mentality of the person who thinks this way than it does to any real problem with open-source. I can?t begin to explain the psychology but, having worked against it, I can say that people who think this way are <em>very</em> hard to dissuade. They feel that buying pre-compiled, closed-source, proprietary software is safer because the purchase transaction at least gives them some recourse in the event that something malicious happens. I suspect these people have never actually read a EULA.</p></li>
<li><p>Cost ? I saved the biggest for last. Nobody with funding authority in any enterprise believes in a free lunch (or free beer) and with good reason: it doesn?t exist. Everything costs something. I have seen many a technical staff get shot down on proposing open-source solutions because they lead off with ?it?s free!? All that says to senior management is that you haven?t done your homework and they stop listening at that point. They know that the piper gets paid somewhere and they need to know how much and what they get in return for it. In many cases, open-source looks nebulous from an ROI standpoint and that rolls back to the first three issues. In solving them, who is going to do it and how much will it cost and what capability do I get in return?</p></li>
</ol>


<p>There are other topics that have come up with regard to implementing open-source GIS that I have observed, but these four themes tend to always recur in some form or another.</p>

<p>This leads me back to the OpenGeo pricing model. It systematically addresses all of these concerns for a price that is straightforward. Those who have worked with open-source for a while know that the openness extends to being able to choose how to get the support you need. Paul Ramsey addressed this topic <a href="http://s3.cleverelephant.ca/geoconnexion-ramsey-2009-01.pdf">here</a> so it?s always been there for those willing to their homework. I find the OpenGeo model preferable because it provides peace of mind with regard to the integration and testing of the suite as a whole. Numerous installations have demonstrated that the tools included in the suite work well together but that?s not the same thing as saying that you have specifically tested them and verified their integration and can support the implementation of the suite.</p>

<p>Additionally, <a href="http://www.spatiallyadjusted.com/2009/05/28/opengeo-releases-opengeo-suite-puts-price-on-open-source-gis/">and James alludes to this</a>, the support draws from developers and contributors to the projects themselves. In most vendor technical support models, you are not getting access to the actual development teams. It is also important to note that OpenGeo supports integration with some proprietary tools and, at the enterprise level, for clustering and security. It also includes broad service-level definitions and discounted services rates (20% - 40% depending upon edition).</p>

<p>For many organizations, the question of adopting open-source GIS has been less about quantifying return on investment than it has been about quantifying the investment in the first place. The technical advantages of the tools in the OpenGeo Suite are readily apparent for many. I have spoken to a few people in the past who have found the features in PostGIS, GeoServer and OpenLayers in particular compelling but have shied away from adoption because of questions about total cost, including support and lifetime O&amp;M.</p>

<p>In my opinion, the OpenGeo pricing model represents a milestone because it finally marries the compelling technical capabilities of the tools in the suite with a clear, straightforward, and fair pricing/support model that quantifies costs of adoption/maintenance (if you use OpenGeo) and compares to proprietary vendor ELAs in an apples-to-apples fashion. This now gives an enterprise the tools it needs to do a true side-by-side cost/benefit analysis between open-source and proprietary geospatial tools and should begin to dispel misconceptions about the readiness of open-source geospatial tools for enterprise applications.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bringing It All Together...]]></title>
    <link href="http://blog.geomusings.com/2007/06/26/Bringing-It-All-Together/"/>
    <updated>2007-06-26T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2007/06/26/Bringing-It-All-Together</id>
    <content type="html"><![CDATA[<p>These are pretty fun times to be working in GIS. There's an explosion of new technologies across the whole spectrum and integration possibilities are seemingly boundless. Back when I got started, <a href="http://www.esri.com">ESRI</a> and <a href="http://www.intergraph.com">Intergaph</a> were duking it out and others, like <a href="http://www.mapinfo.com">MapInfo</a>, were out there on the periphery also. <a href="http://grass.itc.it/">GRASS</a> was flying the OS banner and there were a few good free tools, such as the various ones put out by <a href="http://en.wikipedia.org/wiki/Sol_Katz">Sol Katz</a> at the <a href="http://www.blm.gov/wo/st/en.html">BLM</a>.</p>

<p>Everything quieted down for a few years but there's been a flowering of new technologies (well-documented elsewhere) over the last couple of years in both the commercial and open-source communities. I am particularly impressed with the pace at which the open-source community has ramped up with tools of strong quality and capability. In addition, the back-and-forth between <a href="http://earth.google.com/">Google</a> and <a href="http://www.microsoft.com/virtualearth/default.mspx">Microsoft</a> has put better tools in the hands of the average consumer. That doesn't come without drawbacks, but I see it as a net positive.</p>

<p>What I find interesting about all of this activity is that it demonstrates that the closed/commerical/competitive approach can bear fruit and so can the open-source/free/collaborative approach. Where you fall in the spectrum between the two is totally up to you but no one can offer up any concrete evidence that one is vastly superior to the other at this point. In addition, it's becoming increasingly clear that they don't have to be mutually exclusive.</p>

<p>When you throw in <a href="http://www.opengeospatial.org">OGC</a> standards and well as <em>de facto</em> standards such as <a href="http://code.google.com/apis/kml/documentation/">KML</a>, it becomes quite possible to stitch together technologies of various parentage effectively. I offer up the following as a concrete example:</p>

<p><a href="http://geobabble.files.wordpress.com/2007/06/os_free_commercial.png" title="Click to enlarge..."><img src="http://geobabble.files.wordpress.com/2007/06/os_free_commercial.thumbnail.png" /></a></p>

<p>This screenshot depicts a map (no, it's not pretty but blame that on me) that was assembled using several technologies. The application is obviously <a href="http://www.esri.com/software/arcgis/about/desktop_gis.html">ArcMap</a>. Working from the bottom up, the layers are:</p>

<ul>
    <li>Counties - US Counties residing in <a href="http://www.esri.com/software/arcgis/arcsde/">ArcSDE</a> and <a href="http://www.microsoft.com/sql/default.mspx">SQL Server</a></li>
    <li>State Boundaries - US States loaded directly from a local install of <a href="http://postgis.refractions.net/">PostGIS</a> using the <a href="http://code.google.com/p/ziggis/">zigGIS</a> connector</li>
    <li>Major Water - A shapefile on the local hard drive</li>
    <li>Hospitals - A <a href="http://www.opengeospatial.org/standards/wfs">WFS</a> layer being served from my <a href="http://geoserver.org/">GeoServer</a> <a href="http://geobabble.wordpress.com/2007/06/19/my-little-open-source-stack/">instance</a> and loaded into ArcMap with the help of the free <a href="http://www.thecarbonproject.com/carbonarc.php">CarbonArc Lite</a> extension from the <a href="http://www.thecarbonproject.com">Carbon Project</a>. Behind Geoserver, the data sits in PostGIS.</li>
</ul>


<p>So we have commercially licensed software (ArcMap, ArcSDE, SQL Server), freeware (CarbonArc Lite) and open-source software (zigGIS, PostGIS, GeoServer, <a href="http://www.postgresql.org/">PostgreSQL</a>) working together to make this product. All are good tools that, working together, bolster each others' shortcomings. This kind of thing demostrates the "best-of-breed" (hate that term) concept very well.</p>

<p>A few months back, <a href="http://www.paolocorti.net/public/wordpress/index.php/2007/01/19/full-oss-solution-vs-osscommercial-solution-mix/">Paolo posted</a> about mixing commercial and open-source tools. I think this will eventually be the prevalent means of doing business.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Little Open-Source Stack]]></title>
    <link href="http://blog.geomusings.com/2007/06/19/My-Little-Open-Source-Stack/"/>
    <updated>2007-06-19T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2007/06/19/My-Little-Open-Source-Stack</id>
    <content type="html"><![CDATA[<p>It's been a while since I've posted and things have been busy. Soccer season has ended, the kids have finished school and I've finished up at my client site and moved back to the office. Among the many things I've been working on, I've started building an open-source GIS stack. It's not entirely open-source since it's installed on a Windows server but the purists will have to get over that.</p>

<p>So far, I've got <a href="http://www.postgresql.org/">PostgreSQL</a>/<a href="http://postgis.refractions.net/">PostGIS</a> and <a href="http://docs.codehaus.org/display/GEOS/Home">GeoServer 1.5.1</a> installed. I've got GeoServer running as a Windows service and I've loaded a couple of data sets into PostGIS, serving one out through GeoServer for now. I've been able to successfully connect to the <a href="http://www.opengeospatial.org/standards/wms">WMS</a> and <a href="http://www.opengeospatial.org/standards/wfs">WFS</a> remotely using <a href="http://udig.refractions.net/confluence/display/UDIG/Home">uDig</a> as a client. <a href="http://code.google.com/apis/kml/documentation/">KML</a> seems to work fine for the sample data sets that install with GeoServer but my test layer doesn't work correctly. That's not as much of an issue for us right now because we'll probably focus on <a href="http://worldwind.arc.nasa.gov/">World Wind</a> for the spinny globe component. Basically, I'm at the infrastructure-building stage. My next step is to set up <a href="http://www.codeplex.com/SharpMap">SharpMap</a> and start writing some apps.</p>

<p>The only hiccup I've had so far dealt with getting GeoServer to run as a service. Every time I logged out, the service would stop (not a great feature in a service). It turns out that I had the DLL and JARs for the <a href="http://wrapper.tanukisoftware.org/doc/english/introduction.html">Java Service Wrapper</a> in the wrong place. Now it works fine.</p>

<p>So far, I'm impressed with how smoothly it's going. We'll see how long that keeps up once I start slinging code. ;)</p>

<p><img alt="The road less traveled?" src="http://geobabble.files.wordpress.com/2007/06/road.jpg" /></p>
]]></content>
  </entry>
  
</feed>
