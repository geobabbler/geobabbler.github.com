<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: CartoDB | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/cartodb/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2013-01-26T15:36:36-05:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CartoDB/Leaflet Sample Update]]></title>
    <link href="http://blog.geomusings.com/2012/07/09/cartodbleaflet-sample-update/"/>
    <updated>2012-07-09T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2012/07/09/cartodbleaflet-sample-update</id>
    <content type="html"><![CDATA[<p>A while back, I posted about some experimentation I did with <a href="http://leaflet.cloudmade.com/" target="_blank">Leaflet</a> and <a href="http://cartodb.com/" target="_blank">CartoDB</a> in the wake of FOSS4G in Denver. I recently had the chance to go back and update that sample with some spatial queries. At the time of the original post, CartoDB was still in beta and spatial queries didn't seem to work, despite the fact that the back-end was driven by PostGIS.</p>

<p><img alt="" class="aligncenter size-full wp-image-2737" height="310" src="http://geobabble.files.wordpress.com/2012/07/cartodb_spatial_query.png" title="cartodb_spatial_query" width="640" /></p>

<!--more-->


<p>Since then, of course, CartoDB has gone production, as has <a href="http://www.postgis.org" target="_blank">PostGIS</a> 2.0 (up to <a href="http://www.postgis.org/news/20120622/" target="_blank">2.0.1</a> now) so I decided to <a href="http://demo.zekiah.com/propfinder2/" target="_blank">update the sample</a> a little. This time, I added a floodway layer that flows through <a href="http://leonardtown.somd.com/" target="_blank" title="Official Leonardtown home page">Leonardtown</a>, <a href="http://maps.google.com/maps?sugexp=chrome,mod%3D16&amp;q=leonardtown,+md&amp;um=1&amp;ie=UTF-8&amp;hq=&amp;hnear=0x89b768aa0432337d:0x22590e342c11b91b,Leonardtown,+MD&amp;gl=us&amp;sa=X&amp;ei=wRL8T9TIFqno0QGshqC6Bg&amp;ved=0CHwQtgM" target="_blank" title="Leonardtown in Google Maps">Maryland</a>. With a button click, you can identify the buildings that intersect the floodway. I am again using the CartoDB SQL API and GeoJSON to accomplish this. The API call that accomplishes this is:</p>

<p><a href="http://geomusings.cartodb.com/api/v2/sql?q=SELECT%20leonardtown_bldgs.*%20FROM%20leonardtown_bldgs,floodway%20WHERE%20ST_Intersects(floodway.the_geom,leonardtown_bldgs.the_geom)&amp;format=geojson" target="_blank">http://geomusings.cartodb.com/api/v2/sql?q=SELECT%20leonardtown_bldgs.*%20FROM%20leonardtown_bldgs,<br />floodway%20WHERE%20ST_Intersects(floodway.the_geom,leonardtown_bldgs.the_geom)<br />&amp;format=geojson</a></p>

<p>If you pull that apart, you'll see a relatively straightforward use of a PostGIS spatial operator in there:</p>

<h2>{% codeblock lang:sql %}</h2>

<h2>SELECT leonardtown_bldgs.* FROM leonardtown_bldgs,floodway WHERE ST_Intersects(floodway.the_geom,leonardtown_bldgs.the_geom)</h2>

<p>{% endcodeblock %}</p>

<p>The Javascript function that executes the query is here:</p>

<p>{% codeblock lang:js %}</p>

<pre><code>function getFloodBldgs(){
    var bldgLayer = new L.GeoJSON();
    bldgLayer.on('featureparse', function(e) {
      e.layer.setStyle({ color:  '#FFFFB2', weight: 1, fill: true, fillColor: '#FFFFB2', fillOpacity: 0.9 });
      var label = "";
      if (e.properties &amp;amp;&amp;amp; e.properties.address){
            label += "&amp;lt;b&amp;gt;Address:&amp;lt;/b&amp;gt;: " + e.properties.address + "&amp;lt;br/&amp;gt;";
      }
      if (e.properties &amp;amp;&amp;amp; e.properties.structure_){
            label += "&amp;lt;b&amp;gt;Property Type:&amp;lt;/b&amp;gt;: " + e.properties.structure_ + "&amp;lt;br/&amp;gt;";
      }
      if (e.properties &amp;amp;&amp;amp; e.properties.shape_area){
            label += "&amp;lt;b&amp;gt;Square Footage:&amp;lt;/b&amp;gt;: " + e.properties.shape_area + "&amp;lt;br/&amp;gt;";
      }
      if (label != "")
      {
        e.layer.bindPopup(label);
      }
    });

    $.getJSON(
        "http://geomusings.cartodb.com/api/v2/sql?q=SELECT%20leonardtown_bldgs.*%20FROM%20leonardtown_bldgs,floodway%20WHERE%20" + 
</code></pre>

<p>"ST_Intersects(floodway.the_geom,leonardtown_bldgs.the_geom)&amp;format=geojson&amp;callback=?",</p>

<pre><code>        function(geojson) {
        $.each(geojson.features, function(i, feature) {
          bldgLayer.addGeoJSON(feature);
        })
    });

    map.addLayer(bldgLayer);
}
</code></pre>

<p>{% endcodeblock %}</p>

<p>The CartoDB documentation has greatly improved since my last post, including some <a href="http://developers.cartodb.com/examples.html" target="_blank">good developer examples</a>. A little bit of comfort with PostGIS-esque spatial SQL goes a long way with CartoDB. It's good to see how the platform is evolving.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FOSS4G North America]]></title>
    <link href="http://blog.geomusings.com/2012/04/12/foss4g-north-america/"/>
    <updated>2012-04-12T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2012/04/12/foss4g-north-america</id>
    <content type="html"><![CDATA[<p>It's rather fitting that the second plenary talk on Wednesday had to do with "firehose" applications since the <a href="http://foss4g-na.org/" target="_blank">FOSS4G North America</a> (FOSS4GNA) conference was something of a firehose in itself. Despite the fact that the event was smaller than the worldwide event in Denver back in October, I came away with the same "full brain" feeling.</p>

<p><img alt="It feels like I never leave this place." src="http://www.visitingdc.com/images/washington-dc-convention-center.jpg" /></p>

<p>Of course, given the recent production release of <a href="http://blog.opengeo.org/2012/04/03/postgis-2-0-released/" target="_blank">PostGIS 2.0</a>, that was kind of the big story for this event. I attended a number of <a href="http://postgis.org/" target="_blank">PostGIS</a>/<a href="http://www.postgresql.org/" target="_blank">PostgreSQL</a>-related sessions and came away with lots of new information. I especially enjoyed <a href="http://twitter.com/pwramsey" target="_blank">Paul Ramsey's</a> "what's new" talk on Wednesday. One thing I enjoy about his talks (here and in Denver) is that he's not afraid to throw sample SQL up on the screen. It's one thing to hear about a new feature but it's another thing entirely to see a concrete example. Some may find the idea of raw SQL in a presentation abhorrent but it worked for me. <!--more--></p>

<p>I've already started playing with PostGIS 2.0 but haven't gotten terribly far so these sessions helped a lot. It's already been pretty well vetted by the community during it's various pre-release stages so it seems remarkably stable. With the addition of topology and raster analysis in addition to 3D/4D indexing and new vector functions, PostGIS probably handles the majority of what most users would need for GIS analysis at the database level. I'm excited to dig deeper.</p>

<p>I also attended a few web-mapping themed talks. If there is one word that consistently and repeatedly passed the lips of most of the presenters, it was "<a href="http://geojson.org/" target="_blank">GeoJSON</a>." I've <a href="http://blog.geomusings.com/?s=geojson" target="_blank">blogged about GeoJSON</a> in the past but it really is the oil that makes the modern geo-web run smoothly. The rate of adoption it is receiving rivals only one other <em>de facto</em> standard that I can recall: you may remember something called the shapefile. The fact is that anyone who's been hunting through their file system looking for the "next shapefile" has been looking in the wrong place. It lives behind that nice map in your browser. The shapefile took off because it solved a problem for what was the frontier of GIS in the 1990s; the transition from heavy workstations to desktop mapping. GeoJSON solves the problem of delivering vector spatial data for today's frontier; the transition from the desktop GIS to web mapping. It's that simple. We don't need another file format to solve an old problem that already has a solution.</p>

<p>Of course, there was a lot more. I got introduced to <a href="http://cartodb.com/" target="_blank">CartoDB</a> in Denver, have <a href="http://blog.geomusings.com/2011/10/13/cartodb-leaflet-easy/" target="_blank">experimented with it</a> since then and was able to get an update on its 1.0 release at one of the sessions. It remains a compelling option for spatial data hosting and <a href="http://vizzuality.com/" target="_blank">Vizzuality</a> are actively engaging with the open-source communities that build the tools they use. On the cartography side of things, <a href="http://stamen.com/" target="_blank">Stamen</a> continues to show how beautiful maps can be made with open-source tools. Similarly, <a href="http://mapbox.com/" target="_blank">MapBox</a> showed how they efficiently deliver high-quality maps on the web. For my money, the unsung hero of what MapBox is doing is <a href="http://mapbox.com/mbtiles-spec/utfgrid/" target="_blank">UTFGrid</a>. I hadn't delved into it deeply until I saw the announcement that <a href="http://www.openlayers.org/" target="_blank">OpenLayers</a> now supports it. UTFGrid is breathtakingly elegant in its approach to delivering richer content with tiles. I expect that, in a few years, UTFGrid will be a standard part under the hood of any web mapping experience, like tiles and slippy maps are today.</p>

<p>The only consistent criticism I heard was that most of the sessions were "too technical." I can see some validity to this, given that the event was held in Washington, DC and many higher-level government or policy types who may have been seeking to conceptually understand open-source geospatial may have been put off. Commercial vendors have addressed this problem with the establishment of "executive tracks" at their events. That said, if that's the biggest criticism that can be leveled, then FOSS4GNA was a rousing success in my book.</p>

<p>I have resolved that I will take at least one of my kids, if not both, to the next FOSS4G event that I attend. The attitude of the open-source crowd is one that I want to rub off on them. Aside from the energy that is exuded from a gathering such as this, the open-source world is full of people who see a problem and just set out to solve it. I want my kids to be exposed to that kind of initiative and understand the power that can come from harnessing it, even if they never go into a technical field.</p>

<p>My understanding is that FOSS4GNA came together very quickly. Given that, it was a very high-quality conference and the organizers should be commended. Early tongue-in-cheek commentary referred to it as the "<a href="http://opengeo.org/" target="_blank">OpenGeo </a>User Conference." I felt like there was good balance and, when I attended sessions given by OpenGeo staff, I didn't feel like I was beaten over the head with the OpenGeo brand. All-in-all, I found my day-and-a-half at FOSS4GNA to be very beneficial and I'm hoping it becomes an annual event. (<strong>Update</strong>: It looks like next year's FOSS4GNA <a href="https://twitter.com/#!/foss4gna/status/190517270928293888" target="_blank">will be in Minnesota</a>.)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Busy Day for Releases]]></title>
    <link href="http://blog.geomusings.com/2012/04/04/a-busy-day-for-releases/"/>
    <updated>2012-04-04T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2012/04/04/a-busy-day-for-releases</id>
    <content type="html"><![CDATA[<p>3 April 2012 was a busy day for releases/announcements in the geospatial field:</p>

<p><a href="http://postgis.refractions.net/">PostGIS 2.0</a> - This long-anticipated major version of PostGIS was <a href="http://www.osgeo.org/node/1275">announced</a> with advanced features such as raster, topology, and 3D/4D indexing. Many have been using 2.0 for a while but the official release gives top-cover to organizations, such as some government agencies, that are not allowed to take systems "production" using software that is technically in beta.</p>

<p><a href="http://cartodb.com/">CartoDB</a> v1 - I've <a href="http://blog.geomusings.com/2011/10/13/cartodb-leaflet-easy/">blogged about CartoDB before</a> and it's an intriguing platform for hosting geospatial data and applications. It uses PostGIS 2.0 as its storage engine and exposes a lot of PostGIS capability through its API. It's a pretty elegant way to build interactive mapping applications. It's support of <a href="http://www.geojson.org/">GeoJSON</a> makes it easy to integrate with a number of mapping libraries</p>

<p><a href="http://graffitimapper.org">GraffitiMapper</a> - This is a location-based application built by <a href="http://spatialnetworks.com/">Spatial Networks</a> on their <a href="http://spatialnetworks.com/products/fulcrum/">Fulcrum</a> platform. It's a great example of a specialized crowd-sourcing application. In this case, capturing graffiti using location as a potential indicator of other activity. It also really showcases the flexibility of Fulcrum. The app is currently only available for iOS but rumor has it Android is in the works.</p>

<p>All-in-all, it was pretty exciting day. Congratulations to everyone involved in all of these releases.</p>

<p>Well, my toy box is now overflowing so it's time to start playing.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arc2Earth Sync Beta Announced]]></title>
    <link href="http://blog.geomusings.com/2011/11/23/arc2earth-sync-beta-announced/"/>
    <updated>2011-11-23T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2011/11/23/arc2earth-sync-beta-announced</id>
    <content type="html"><![CDATA[<p>Over on <a href="https://plus.google.com/112324940962843535547/posts/B9T9M1vPLCz">Google+</a> (and also on Twitter), <a href="http://twitter.com/bflood">Brian Flood</a> announced the impending availability of Arc2Earth Sync Beta to existing <a href="http://www.arc2earth.com">Arc2Earth</a> users. This has been brewing for for a while and Brian says it best:</p>

<blockquote>
"What makes Sync really cool is the live edit synchronization and the ability to publish online to different formats. It's a great way to provide integration between ArcGIS desktops/online and the other Cloud database providers like Google."
</blockquote>


<!--more-->


<p>So it gives users the ability to publish, edit and synchronize data they are storing in on-line, hosted environments using the editing tools of ArcMap. The initial beta will only support Google Fusion Tables but support for Google Earth Builder and - this caught my eye right away - <a href="http://cartodb.com">CartoDB</a> are scheduled for after the first of the year.</p>

<div style="text-align:center;"><img alt="" height="375" src="http://geobabble.files.wordpress.com/2011/11/assorted_donuts1.jpg" title="Choices, choices..." width="500" /><div style="text-align:center;font-size: 14px;">Arc2Earth Sync stands to give ArcGIS users an assortment of hosted data platforms to choose from.<br/><br/></div></div>


<p>There are a lot of ArcGIS for Desktop users out there and exposing different hosted solutions using workflows and tools with which they are comfortable has the potential to do a lot for user choice and the ability to control one's own data.</p>

<p>Here is a link to Brian's screencast showing Arc2Earth Sync in action: <a href="https://arc2earth.viewscreencasts.com/fe762cac52664083ad5dfdfcd0f750c9">https://arc2earth.viewscreencasts.com/fe762cac52664083ad5dfdfcd0f750c9</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CartoDB + Leaflet = Easy]]></title>
    <link href="http://blog.geomusings.com/2011/10/13/cartodb-leaflet-easy/"/>
    <updated>2011-10-13T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2011/10/13/cartodb-leaflet-easy</id>
    <content type="html"><![CDATA[<p>One of the biggest sources of buzz at <a href="http://2011.foss4g.org/">FOSS4G</a> was <a href="http://cartodb.com">CartoDB</a>. It is a hosted solution from <a href="http://vizzuality.com/">Vizzuality</a> that uses <a href="http://postgis.org/">PostGIS</a> to allow you to store your spatial data online. I got a beta account a couple of weeks ago but life (i.e. paying work) kept getting in the way but I finally got to play with it recently.</p>

<p>One of the things that intrigued me is that, similar to <a href="http://www.google.com/fusiontables/Home/">Google Fusion Tables</a>, CartoDB exposes a SQL interface through a RESTful API (I'm still not sure if the term "API" applies to REST but it's a convenient shorthand). Essentially, CartoDB exposes PostgreSQL SQL and the spatial SQL extensions of PostGIS. Once your data is loaded, you can query it and return the results as either CartoDB's JSON syntax, KML or <a href="http://geojson.org">GeoJSON</a>.</p>

<p>With this information, I set out to build a simple application to query property data and display the results on a map in a browser. In addition to CartoDB, I elected to use the <a href="http://leaflet.cloudmade.com/">Leaflet</a> Javascript library to accomplish the mapping (although I also experimented with OpenLayers). Displaying and styling GeoJSON in Leaflet is very straightforward and this task gave me and excuse to get a little more comfortable with it.</p>

<!--more-->


<p>For starters, I downloaded building footprints for St. Mary's County, Maryland (freely available <a href="http://www.stmarysmd.com/gis/">here</a>). The footprints themselves are countywide so I also downloaded the boundary for Leonardtown, Maryland and used <a href="http://qgis.org/">QGIS</a> to clip out just those buildings that fell within the town boundary. Once my data was prepped, I uploaded it into CartoDB.</p>

<div style="text-align: center;"><img alt="" class="size-full wp-image-2134" height="359" src="http://geobabble.files.wordpress.com/2011/10/cartodb_upload.png" title="cartodb_upload" width="590" /><div style="text-align: center; font-size: 14px">The CartoDB uploader is very easy to use.<br /></div></div>


<p>Once the data is uploaded and made public, it is as easy as a URL to pull down the GeoJSON (or even KML). Click here:</p>

<p><a href="http://geomusings.cartodb.com/api/v1/sql?q=SELECT%20*%20FROM%20leonardtown_bldgs&amp;format=geojson">http://geomusings.cartodb.com/api/v1/sql?q=SELECT%20*%20FROM%20leonardtown_bldgs&amp;format=geojson</a></p>

<p>You'll notice that some SQL is embedded in the URL. Finding the commercial properties in the data set is as simple as adding a WHERE clause:</p>

<p><a href="http://geomusings.cartodb.com/api/v1/sql?q=SELECT%20*%20FROM%20leonardtown_bldgs%20WHERE%20structure_%20=%20'Commercial'&amp;format=geojson">http://geomusings.cartodb.com/api/v1/sql?q=SELECT%20*%20FROM%20leonardtown_bldgs%20WHERE%20structure_%20=%20'Commercial'&amp;format=geojson</a></p>

<p>This became the basis of my sample application. I decided to do a simple property finder that allows a user to find buildings by property type and square footage. As I mentioned, it's very easy to use GeoJSON with Leaflet. Here is the Javascript function that fetches the buildings from CartoDB and adds them to the map. It uses jQuery to do the actual fetch and then processes the result, adding the features into a Leaflet GeoJSON layer.</p>

<p>{% codeblock lang:js %}</p>

<pre><code>function getBuildings()
{
    var bldgLayer = new L.GeoJSON();
    //here we also parse the attributes for the popups on the map
    bldgLayer.on('featureparse', function(e) {
      e.layer.setStyle({ color:  '#BDBDBD', weight: 1, fill: true, fillColor: '#EF6548', fillOpacity: 0.85 });
      var label = "";
      if (e.properties &amp;amp;&amp;amp; e.properties.address){
            label += "&amp;lt;b&amp;gt;Address:&amp;lt;/b&amp;gt;: " + e.properties.address + "&amp;lt;br/&amp;gt;";
      }
      if (e.properties &amp;amp;&amp;amp; e.properties.structure_){
            label += "&amp;lt;b&amp;gt;Property Type:&amp;lt;/b&amp;gt;: " + e.properties.structure_ + "&amp;lt;br/&amp;gt;";
      }
      if (e.properties &amp;amp;&amp;amp; e.properties.shape_area){
            label += "&amp;lt;b&amp;gt;Square Footage:&amp;lt;/b&amp;gt;: " + e.properties.shape_area + "&amp;lt;br/&amp;gt;";
      }
      if (label != "")
      {
        e.layer.bindPopup(label);
      }
    });

    $.getJSON(
        "http://geomusings.cartodb.com/api/v1/sql?q=SELECT%20*%20FROM%20leonardtown_bldgs&amp;amp;format=geojson&amp;amp;callback=?",
        function(geojson) {
        $.each(geojson.features, function(i, feature) {
          bldgLayer.addGeoJSON(feature);
        })
    });

    map.addLayer(bldgLayer);        
}
</code></pre>

<p>{% endcodeblock %}</p>

<p><del datetime="2011-10-14T14:44:58+00:00">If you look closely, you'll notice the use of a proxy handler to get past the same origin restriction. This handler is written in .Net. I had been using a Python proxy but urllib2 was indicating header errors in the return from CartoDB so I fell back to this one. I'll dig into that more later.</del> (Thanks to <a href="http://twitter.com/jatorre">Javier de la Torre</a> for straightening me out with the use of a callback.) The above routine is basically the template for all the work in the app. Aside from the basemap tiles, the app loads the town boundary and the buildings from CartoDB. A similar funtion drives the query function, building and passing a WHERE clause to CartoDB. The image below shows the interface with query results in blue. The popups are performed by Leaflet.</p>

<div style="text-align: center;"><img alt="" class="size-full wp-image-2139" height="300" src="http://geobabble.files.wordpress.com/2011/10/propfinder.png" title="propfinder" width="590" /><div style="text-align: center; font-size: 14px">Selected buildings are shown in blue with popups to display the property details<br /></div></div>


<p>All told, this app took about 3 or so hours to build and deploy. This version doesn't actually make use of any spatial SQL yet but I'll add that soon. The live demo can be found here: <a href="http://demo.zekiah.com/propfinder/">http://demo.zekiah.com/propfinder/</a> (give the buildings a few seconds to load). It seems to work well in Firefox and Chrome and is functional, although clunky, in IE9. I haven't tried Safari or earlier versions of IE.</p>

<p>CartoDB is still in beta but already seems solid and is definitely powerful. As a hosted solution, there are associated costs but that's to be expected. I'll keep playing with it but it's already impressive.</p>
]]></content>
  </entry>
  
</feed>
