<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: arcsde | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/arcsde/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2012-12-24T12:51:27-05:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ArcGIS 10 Service Pack 2 Is Available]]></title>
    <link href="http://blog.geomusings.com/2011/05/20/arcgis-10-service-pack-2-is-available/"/>
    <updated>2011-05-20T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2011/05/20/arcgis-10-service-pack-2-is-available</id>
    <content type="html"><![CDATA[<p>Esri announced late today that Service Pack 2 for ArcGIS 10 is available. It looks like <a href="http://downloads2.esri.com/support/downloads/other_/ArcGIS-10sp2-issues.htm">a fairly sizable list of issues</a> was addressed with this service pack.</p>

<p>Who knows, we could be witnessing history as this could potentially be the last service pack to address ArcIMS. (Well, I can dream, can't I?)</p>

<p>Anyway, if you're among those who like to wait until the second service pack before doing an Esri upgrade, you can now start putting 9.3 out to pasture. Live it up!</p>

<p><img alt="Out to pasture" src="http://www.ia.nrcs.usda.gov/news/images/Pics/pasture.gif" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using ArcSDE 9.3 with PostgreSQL, Part 3.5]]></title>
    <link href="http://blog.geomusings.com/2008/08/21/using-arcsde-93-with-postgresql-part-35/"/>
    <updated>2008-08-21T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2008/08/21/using-arcsde-93-with-postgresql-part-35</id>
    <content type="html"><![CDATA[<p>I thought I was done with the series a while back but I've been getting a steady stream of questions through other channels so I thought I'd wrap up a lot of the common stuff in another post. Most of the inquiries come from people trying to integrate <a href="http://www.esri.com/software/arcgis/arcsde/index.html">ArcSDE</a> for <a href="http://www.postgresql.org">PostgreSQL</a> with open-source tools in one way or another. Here are a few notes:<!--more--></p>

<ol type="1">
    <li>If you plan to load data into PostgreSQL with ArcCatalog but plan to edit it with tools such as <a href="http://udig.refractions.net/">uDig</a>, <a href="http://www.gvsig.gva.es/index.php?id=gvsig&amp;L=2">gvSIG</a> or <a href="http://pub.obtusesoft.com/">zigGIS</a>, then you want to do the following:
             <ol type="a">
                  <li>Always load your data with the PG_GEOMETRY configuration keyword. This will cause your spatial objects to be stored in the <a href="http://postgis.refractions.net/">PostGIS</a> format. None of the open-source tools I've used can understand ST_GEOMETRY.</li>
                  <li>Don't version your data. uDig, gvSIG and zigGIS (what I've used) only "see" the DEFAULT version anyway. They can't take advantage of versioning.</li>
                  <li>Although ArcCatalog does put an entry in the PostGIS geometry_columns table, it lists the geometry type as GEOMETRY. gvSIG edits this fine but it seems to monkey with uDig a little. It's not a bad idea to update this with the actual geometry type. These will be string values such as "POLYGON", "MULTIPOLYGON", etc. You'll need to do this if you plan to edit your data with zigGIS from an ArcView desktop.</li>
                  <li>Related to the previous item. If you were to load data using shp2pgsql or any other method that calls the PostGIS <a href="http://postgis.refractions.net/documentation/manual-1.3/ch06.html#id3059786">AddGeometryColumn</a> function, you would end up with constraints on your table limiting the geometry column to a homogenous geometry type (e.g only polygons) and a homogenous SRID. Loading via ArcCatalog doesn't do this (and I've run into other tools that don't as well). Quite frankly ArcSDE manages all of that for itself so it doesn't need such constraints. Without them, however, you can use other tools and mix your geometry types and SRIDs in the table. It's a good idea to add these constraints and I have noticed no ill effects on ArcGIS if you do.</li>
                   <li>As we discovered with zigGIS, there is a difference between the spatial references that are defined by default on the PostGIS spatial_ref_sys table and the ArcSDE sde_spatial_references table. This makes it possible to load data via ArcCatalog that doesn't have a corresponding SRID in the PostGIS table. This would effect your ability to add the previously discussed constraint. It will also throw off open-source tools that look at the spatial_ref_sys table. It's a good idea to update spatial_ref_sys to include those from ArcGIS that are not already supported.</li>
                    <li>ArcCatalog doesn't define a primary key on your spatial table. uDig really doesn't like this so it's best to add a primary key on the objectid column (this has no effect on ArcGIS that I can tell) using the following syntax:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='postgres'><span class='line'><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">myTable</span>
</span><span class='line'><span class="k">ADD</span> <span class="k">CONSTRAINT</span> <span class="n">mytable_pkey</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">(</span><span class="n">objectid</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
gvSIG additionally expects the column with the PK to "auto-number" so you may want to experiment with adding a sequence to the column. The syntax I used to do this is:

 <div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='postgres'><span class='line'><span class="k">CREATE</span> <span class="k">SEQUENCE</span> <span class="n">mytable_gid_seq</span>
</span><span class='line'><span class="k">INCREMENT</span> <span class="mf">1</span>
</span><span class='line'><span class="k">MINVALUE</span> <span class="mf">1</span>
</span><span class='line'><span class="k">MAXVALUE</span> <span class="mf">9223372036854775807</span>
</span><span class='line'><span class="k">START</span> <span class="mf">408</span>
</span><span class='line'><span class="k">CACHE</span> <span class="mf">1</span><span class="p">;</span>
</span><span class='line'><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">mytable_gid_seq</span> <span class="k">OWNER</span> <span class="k">TO</span> <span class="n">postgres</span><span class="p">;</span>
</span><span class='line'><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">myTable</span> <span class="k">ALTER</span> <span class="k">COLUMN</span> <span class="n">objectid</span> <span class="k">SET</span> <span class="k">DEFAULT</span> <span class="n">nextval</span><span class="p">(</span><span class="o">?</span><span class="n">mytable_gid_seq</span><span class="o">?::</span><span class="n">regclass</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>                 
If you're experienced with ArcSDE, you get nervous mucking with the objectid column. I have made both the of the above changes to several data sets and made edits in uDig, gvSIG and ArcMap with no ill effect.</li>
</ol>
<li>If you plan to edit/manage your data using ArcGIS but serve it out using an open-source application like GeoServer or MapServer then there are a few considerations:
            <ol type="a">
            <li>If you plan to use versioning, then be diligent about posting and reconciling with DEFAULT so that any changes want to have show up will. Of course, this assumes you would just be connecting to the PostGIS data. If you connect through ArcSDE, this <em>may</em> be unnecessary.</li>
            <li>Again, use the PG_GEOMETRY keyword.</li>
            <li>The SRID issue discussed in item 1e above <em>may</em> be relevant here as well.</li>
            </ol>
</li>
<li>The implementation of ArcSDE on the PostgreSQL platform is pretty solid. I have been able to do everything I could do on other platforms. So, if you plan to stay in the ESRI environment, go forth an conquer. I think you'll be pleased with PostgreSQL. You may want to bone up on PostgreSQL database administration, though.</li>

Ultimately, support for PostgreSQL by ArcGIS opens up the possibility of numerous technology mixes. It's somewhat uncharted territory and it's not a bad idea, as with any system integration task, to do a little testing and experimentation before moving on with an implementation.

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL Server SIG at the UC]]></title>
    <link href="http://blog.geomusings.com/2008/08/06/sql-server-sig-at-the-uc/"/>
    <updated>2008-08-06T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2008/08/06/sql-server-sig-at-the-uc</id>
    <content type="html"><![CDATA[<p>My blogging has been slower this time around because I've been doing a lot of booth duty. This is my thrid conference this year and some of our other staff are getting to go to the sessions. I did, however, go to the SQL Server SIG a little while ago.</p>

<p>Ed Katibah had a few tricks up his sleeve. First off, he dropped the news that, as of 11:00am, SQL Server 2008 is now in RTM. Very soon, the final version will be in our hands. That's great news to everyone who has been working with the CTPs and RCs.</p>

<p>Ed had few other nuggets. He described the stress-testing that SQL 2008 has undergone. In short, there has been about 375,000 hours of stress testing run against SQL 2008 so we should be able to expect it to be solid. Additionally, Microsoft has already been running on SQL 2008 for "a few months." To me, this is all great news that makes me feel even more confident about the product (which already had my confidence). When I first installed the November CTP, I felt that much of the platform was already production-ready but more testing and use can't have hurt.</p>

<p>Ed went on to describe the two spatial types and reationale for doing that. That discussion is well documented and I fall in the "it's a good thing category" mainly because of previous work with applications that had over-the-horizon requirements.</p>

<p>Ed gave props to Paul Ramsey during his talk when explaining the XY switching debate. It was great to see that kind of respect on display.</p>

<p>Some nuts and bolts: SQL 2008 limits spatial objects to about 250 million vertices. This greatly exceeds Ed's largest test case, which is a high-res vector data set of the world's oceans. Polygons are limited to about 65,000 holes. I think those limits leave a lot of wiggle room. He also discussed the significance of coordinate ordering for the geography data type. Basically, it's counter-clockwise for outer rings and clockwise for inner rings. This is consistent with implementations in Informix, DB2 and Oracle (those are what he mentioned). He did mention that this was an industry consensus but there was no official specification on this matter. Ed also mentioned it may be a topic of future discussion for OGC.</p>

<p>Ed also demonstrated the spatial results window in the SQL management Studio. This is a really nice tool that lets you visualize the results of your spatial SQL inside the management studio. As a developer, that will be a huge help because I won't have to do a test run to see if I got the query right. Ed just saved me a bunch of time!</p>

<p>Ed went on to announce a companion CodePlex site for SQL Server 2008 spatial tools: <a href="http://www.codeplex.com/sqlspatialtools">www.codeplex.com/SqlSpatialTools</a>. There are already some tools that Isaac has posted but Ed said that other tools will include shapefile and KML converters. The site will also be open to contribs from the community. All of the tools currently there were developed using the <a href="http://blogs.msdn.com/isaac/archive/2008/05/30/our-upcoming-builder-api.aspx">Builder API</a> and full source code is available so they serve has great examples of working with the Builder API.</p>

<p>All in all, it was a great talk. Ed's one of the nicest guys ever and he is having a lot of fun with ArcSDE on SQL Server 2008.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Good PostGIS Overview...]]></title>
    <link href="http://blog.geomusings.com/2008/08/06/a-good-postgis-overview/"/>
    <updated>2008-08-06T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2008/08/06/a-good-postgis-overview</id>
    <content type="html"><![CDATA[<p>Steven Citron-Pousty gave a talk on PostGIS and has helpfully posted his slides <a href="http://www.slideshare.net/scitronpousty/using-post-gis-to-add-some-spatial-flavor-to-your-application">here</a>. It's a good introductory overview and provides some good examples of basic spatial SQL in PostGIS.</p>

<p>With ArcGIS Server now supporting PostgreSQL as a back end RDBMS and also supporting the use of PostGIS geometries, a lot of new users may be migrating to the PostgreSQL platform. This presentation is a good overview for anyone picking it up for the first time. Thanks, @TheSteve0!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ArcSDE Geocoding Services Deprecated at 9.3]]></title>
    <link href="http://blog.geomusings.com/2008/08/01/arcsde-geocoding-services-deprecated-at-93/"/>
    <updated>2008-08-01T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2008/08/01/arcsde-geocoding-services-deprecated-at-93</id>
    <content type="html"><![CDATA[<p>This isn't a huge surprise but <a href="http://support.esri.com/index.cfm?fa=knowledgebase.documentation.viewDoc&amp;PID=66&amp;MetaID=1430">this announcement</a> made it official a couple of days ago.</p>

<p>Basically, you'll need to use ArcGIS Server's server-side geocoding because the next release of ArcSDE won't include it. The PDF attached to the announcement gives more detail. I know we had moved away from ArcSDE geocoding some time ago because it didn't hold up to the load we were putting on it. We used Oracle Spatial instead.</p>

<p>But, if you've got any apps that are still using ArcSDE for geocoding, now's the time the transition.</p>
]]></content>
  </entry>
  
</feed>
