<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: arcgis desktop | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/arcgis-desktop/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2012-12-18T22:16:30-05:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using BruTile and MapsUI to Enable WeoGeo Previews]]></title>
    <link href="http://blog.geomusings.com/2011/03/21/Using-BruTile-and-MapsUI-to-Enable-WeoGeo-Previews/"/>
    <updated>2011-03-21T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2011/03/21/Using-BruTile-and-MapsUI-to-Enable-WeoGeo-Previews</id>
    <content type="html"><![CDATA[<p>A few weeks ago, <a href="http://geobabble.wordpress.com/2011/03/02/announcing-weogeo-tools-for-arcgis/">my company announced the availability</a> of the first beta version of <a href="http://www.zekiah.com/index.php?q=weogeo">WeoGeo Tools for ArcGIS</a>. Unlike the previous version, which opened a separate browser window, this new release allows a user to order a data set from <a href="http://market.weogeo.com">WeoGeo Market</a> or a library from inside ArcMap.</p>

<p>One of the challenges was enabling data set previews. If you browse data sets using the <a href="http://www.weogeo.com">WeoGeo</a> online tool, you can get an idea of what the data set contains by using the data set preview images supplied by the data set provider.</p>

<p>When we developed the first version of WeoGeo Tools for WeoGeo, they used kamap to create preview tiles for data sets. This was accomplished by used either one of two desktop tools: the weoapp (command line) or gWeoApp (GUI). The first version of WeoGeo Tools used the weoapp in the background to create tiles when uploading data. <!--more--></p>

<p>In between the two versions, WeoGeo switched to a ZYX tile structure similar to Google Maps or <a href="http://wiki.osgeo.org/wiki/Tile_Map_Service_Specification">TMS</a> (although not always using spherical mercator). This change made the idea of integrating ordering much easier.</p>

<p>Part of the challenge was implementing support for preview tiles in a manner that provided a smooth user experience inside ArcMap. Luckily, my experience with <a href="http://sharpmap.codeplex.com/">SharpMap</a> pointed the way. It's been a while since I've blogged SharpMap but, in the intervening time, the project added support for map tiles by way of another .Net-based open-source project called <a href="http://brutile.codeplex.com/">BruTile</a>. It was through SharpMap that I was first exposed to BruTile and the two projects have developed something of a symbiotic relationship.</p>

<p>A while back, BruTile branched, with its UI aspects being spun off into another project called <a href="http://mapsui.codeplex.com/">MapsUI</a>. Between these two projects, I had what I needed to added support for WeoGeo previews. I've been building the UI elements of WeoGeo tools using Windows Presentation Foundation (WPF) from the beginning. MapsUI provided exactly what I needed in a simple WPF map control to embed tile support into my application.</p>

<div style="text-align: center;"><a href="http://geobabble.files.wordpress.com/2011/03/orderwindow.png"><img alt="" class="size-full wp-image-1574" height="491" src="http://geobabble.files.wordpress.com/2011/03/orderwindow.png" title="Order window showing preview tiles for Maryland census tracts" width="590" /></a><div style="text-align: center;font-size: 14px">Order window showing preview tiles for Maryland census tracts<br/></div></div>


<p>Because WeoGeo chose well-known tiling schemes for their previews, most of what I needed was already there. For data sets with preview tiles in spherical mercator, there was already a BruTile schema defined for working with Google Maps that I could leverage. For tiles in WGS84, there was also a schema defined based on the work <a href="http://www.maptiler.org/google-maps-coordinates-tile-bounds-projection/">documented at the MapTiler site</a> (which is the same schema WeoGeo uses for WGS84 tiles).</p>

<p>The primary customization that was required was to create custom request classes that formatted tile request URLs for WeoGeo. To get a tile from WeoGeo, you need to know two pieces of information in addition to the Z, Y and X positions of the tile: you also need to know the data set (identified by a GUID) for which you want tiles and the file format (JPG or PNG) of those tiles. So you end up with a URL that looks like this:</p>

<p><em>http://weodata.weogeo.com/dataset_tiles/{dataset_token}/xyz/{Z}/{Y}/{X}.{format}</em></p>

<p>Beyond the request, you can fine-tune the tile schema by using information from the data set metadata to set the tile extent and remove unused scale levels. For spherical mercator tiles, for example, I defined custom tile source, tile schema and request classes that defined these additional pieces of information. The result was the ability to very easily create a TileLayer for use by the MapsUI control:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="c1">//_dataSet is deserialized from JSON and contains the data set metadata&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="c1">//Create schema based on data set format, min and max scaled and tile extent&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span>        <span class="kt">var</span> <span class="n">weoSchema</span> <span class="p">=</span> <span class="k">new</span> <span class="n">WeoGeoSchema</span><span class="p">(</span><span class="n">_dataSet</span><span class="p">.</span><span class="n">TileFileFormat</span><span class="p">,</span> <span class="n">_dataSet</span><span class="p">.</span><span class="n">Scales</span><span class="p">[</span><span class="m">0</span><span class="p">],</span> <span class="n">_dataSet</span><span class="p">.</span><span class="n">Scales</span><span class="p">[</span><span class="n">_ds</span><span class="p">.</span><span class="n">Scales</span><span class="p">.</span><span class="n">Count</span> <span class="p">-</span> <span class="m">1</span><span class="p">],</span> <span class="k">new</span> <span class="n">BruTile</span><span class="p">.</span><span class="n">Extent</span><span class="p">(</span><span class="n">_dataSet</span><span class="p">.</span><span class="n">Boundaries</span><span class="p">.</span><span class="n">Tiles</span><span class="p">.</span><span class="n">West</span><span class="p">,</span> <span class="n">_dataSet</span><span class="p">.</span><span class="n">Boundaries</span><span class="p">.</span><span class="n">Tiles</span><span class="p">.</span><span class="n">South</span><span class="p">,</span> <span class="n">_dataSet</span><span class="p">.</span><span class="n">Boundaries</span><span class="p">.</span><span class="n">Tiles</span><span class="p">.</span><span class="n">East</span><span class="p">,</span> <span class="n">_dataSet</span><span class="p">.</span><span class="n">Boundaries</span><span class="p">.</span><span class="n">Tiles</span><span class="p">.</span><span class="n">North</span><span class="p">));</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">weosource</span> <span class="p">=</span> <span class="k">new</span> <span class="n">WeoGeoTileSource</span><span class="p">(</span><span class="k">new</span> <span class="n">WeoGeoRequest</span><span class="p">(</span><span class="s">&quot;http://weodata.weogeo.com&quot;</span><span class="p">,</span> <span class="n">_dataSet</span><span class="p">.</span><span class="n">Token</span><span class="p">,</span> <span class="n">_dataSet</span><span class="p">.</span><span class="n">Scales</span><span class="p">[</span><span class="m">0</span><span class="p">],</span> <span class="n">_dataSet</span><span class="p">.</span><span class="n">Scales</span><span class="p">[</span><span class="n">_dataSet</span><span class="p">.</span><span class="n">Scales</span><span class="p">.</span><span class="n">Count</span> <span class="p">-</span> <span class="m">1</span><span class="p">],</span> <span class="n">_dataSet</span><span class="p">.</span><span class="n">TileFileFormat</span><span class="p">),</span> <span class="n">weoSchema</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">tl</span> <span class="p">=</span> <span class="k">new</span> <span class="n">TileLayer</span><span class="p">(</span><span class="n">weosource</span><span class="p">);</span> <span class="c1">//the layer to be added to the map control</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Using BruTile, this aspect of adding support for ordering went very quickly and smoothly. I like that they have native WPF UI components as I generally avoid using WinForms anymore when doing Windows desktop development. There's a lot of good work between BruTile and MapsUI and I'll be using these tools more in the future.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Me and zigGIS]]></title>
    <link href="http://blog.geomusings.com/2010/09/28/Me-and-zigGIS/"/>
    <updated>2010-09-28T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2010/09/28/Me-and-zigGIS</id>
    <content type="html"><![CDATA[<p>If you?ve been to the <a href="http://pub.obtusesoft.com">Obtuse Software</a> site recently, you may or may not have noticed a change to the ?<a href="http://pub.obtusesoft.com/who.aspx">Who We Are</a>? page. It now lists only <a href="http://abegillespie.blogspot.com">Abe Gillespie</a> and <a href="http://www.paolocorti.net/">Paolo Corti</a>. Prior to my trip to Colorado to talk about zigGIS at <a href="http://www.gisintherockies.org/GISITR2010/Home/Default.aspx">GIS in the Rockies</a>, I informed Abe and Paolo that I would be stepping back from any ?official? involvement in Obtuse.</p>

<p>This does not mean that I am stepping back from involvement in zigGIS. I plan to continue to support zigGIS as it returns to open-source but, in truth, I haven?t done much with zigGIS day-to-day in a long time. As part of the <a href="http://abegillespie.blogspot.com/2010/04/prodigal-extension.html">return of zigGIS to open-source at version 3.0</a>, Abe has been working on a plan to give the community multiple paths to support the project, including sponsorship and technical support plans. I'm sure he'll have the details out soon so I'll leave it at that (since it's not my story to tell). So, as Obtuse transitions to more of a supporting role for the zigGIS 3.0 open-source project, I felt that this was a good time to step away and become part of the community. <!--more--></p>

<p>But enough about me, this post is called ?Me and zigGIS? so I?ll address some of the key needs for zigGIS 3.0, as I see them. Abe is planning a complete rewrite in order to make zigGIS better. A certain amount of that will have to stay on his plate (with help from Paolo) but it?s a large effort. To that end, help is needed. <a href="http://abegillespie.blogspot.com/2010/06/on-to-30.html">Abe published the roadmap</a> a while back so you can take a look and see what needs to be done. zigGIS 3.0 will happen faster and better with the help of additional developers, testers, end-users, etc.</p>

<p><img alt="null" src="http://geobabble.files.wordpress.com/2007/08/ziggis_logo.jpg" /></p>

<p>Developers are the most obvious. If you have C# and/or ArcObjects experience and want to get involved in an open-source project, zigGIS can use the help. Testing has always been a big issue with zigGIS as it has lots of moving parts. Between <a href="http://www.esri.com">ArcMap</a>, .Net, <a href="http://www.postgresql.org">PostgreSQL</a> and <a href="http://www.postgis.com">PostGIS</a>, there are a lot of pieces which drive testing of zigGIS. Each new release of any of these can necessitate compatibility testing, the results of which can drive changes to the code. One of the great things about open-source is that those kinds of things can happen more fluidly. Recognizing, however, that not every user of zigGIS is a developer, it?s good to know who may want to take a compiled executable and put it through its paces or who may want to test an installer.</p>

<p>Another big thing on the roadmap is internationalization. A lot of the users of zigGIS (maybe even most of them) are from outside the United States. Supporting languages other than English would be a good thing to do. That?s something that wouldn't necessarily require any coding skill at all but would be a huge help.</p>

<p>As an aside, when zigGIS 2.0 was released, we <a href="http://code.google.com/p/ziggis/">left zigGIS 1.x (licensed under the GPL) available</a>. It is read-only and lacks many of the features that have been added to 2.x but the downloads have continued so I know there is an appetite for an open-source tool that does what zigGIS does. So I hope that some of those people who have continued to use 1.x can help build 3.0.</p>

<p>So why help? Why zigGIS? I?ll address these questions in more detail in future posts. Before I ever got involved with the project, <a href="http://geobabble.wordpress.com/2006/12/17/postgis-and-arcgis-91/">I blogged about it</a>. The use case was a little clearer back then as ArcGIS simply did not support PostgreSQL/PostGIS as a back end. That changed at 9.3 and, although it may have muddied the waters somewhat for zigGIS, it provided a good option for ArcGIS users. So zigGIS had to find its niche.</p>

<p>Over the last couple of years, I have been putting some thought into that and I think that it can provide a nice way to augment workflow in an ArcGIS environment, allowing an organization to maximize the value of its ArcView licenses. Additionally, zigGIS is a nice option for an organization that is growing into its GIS capability. Such an organization may use ArcMap and may be ready to begin managing its spatial data centrally but may not quite be ready to make down-range decisions regarding web-mapping, online GIS and the like. zigGIS can provide a nice stepping stone to help a shop get more organized while also giving it more time to decide its next steps, allowing it to make longer-range decisions about technology and resources on its own schedule. I?ll be exploring these use cases in more detail in future posts.</p>

<p>So, while I?ve stepped away from Obtuse, I don?t plan to step away from zigGIS. As I continue on with my consulting, it is a technology that has key place in my toolbox. I?m glad it will be returning to open-source and I am looking forward to seeing how it evolves. I have greatly enjoyed my association with Abe and Paolo thus far and look forward to it continuing in a new and different form.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ArcGIS 10.0 and 10.1 Deprecation Plan Released]]></title>
    <link href="http://blog.geomusings.com/2010/08/19/ArcGIS-100-and-101-Deprecation-Plan-Released/"/>
    <updated>2010-08-19T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2010/08/19/ArcGIS-100-and-101-Deprecation-Plan-Released</id>
    <content type="html"><![CDATA[<p><a href="http://twitter.com/mikehogan">Mike Hogan</a> tweeted that the Esri deprecation plan for ArcGIS 10.0 and 10.1 is now available. It can be found <a href="http://downloads2.esri.com/support/TechArticles/ArcGIS_10_and__101_Deprecation_Plan.pdf">here</a>. Much of what it contains is not new as Esri has been pretty good about getting information related to 10.x out. Some of the more interesting things (to me) include (comments in parens are mine):</p>

<blockquote>

ArcGIS Server 10.0 is the last release with support for 32-bit operating systems. The next release of ArcGIS Server (10.1) will run natively as a 64-bit application, requiring 64-bit operating systems. (I heard about the native 64-bit move at the Esri UC but I didn't know that included dropping 32-bit. It's not a big deal for me but I can imagine it'll be an impact for many.)

ArcGIS Server 10.0 is the last release supporting publishing non-optimized map documents (MXD files). The next major release will only support publishing optimized maps (MSDs) as that is the best practice for map publishing. (There you have it, no more serving from MXDs after 10.0.)

ArcGIS Server 10.1 will be the last planned release for the ArcGIS Server Web ADFs (Application Developer Framework) for both Microsoft .NET and Java. (We had a small "wake" in San Diego for the ADFs. I won't shed a tear when it's "official.")

ArcGIS Server 10.1 will no longer support local connections (DCOM connections) from Web ADF applications. ArcGIS Server 10.1 will be a web services (REST and SOAP) server only. (This is actually pretty major and the document details the impacts. <strong>If you have any ADF code doing editing and such, read this!</strong>)
</blockquote>


<p>There's a lot of good information in the document, especially pertaining to ArcGIS Server so it's definitely worth a read.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arc2Earth Supports ArcGIS Server Tile Caches]]></title>
    <link href="http://blog.geomusings.com/2010/08/02/Arc2Earth-Supports-ArcGIS-Server-Tile-Caches/"/>
    <updated>2010-08-02T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2010/08/02/Arc2Earth-Supports-ArcGIS-Server-Tile-Caches</id>
    <content type="html"><![CDATA[<p>I just got an e-mail announcement from <a href="http://www.arc2earth.com">Arc2Earth</a> (disclaimer: my <a href="http://www.zekiah.com">company</a> is a reseller) regarding some updates to version 3 that have come out since the ESRI UC. One of the updates that catches my attention is:</p>

<blockquote>
<strong>ArcGIS Server Tile Cache Format</strong> - You can now create or manage tile caches that can be used with ArcGIS Server. use Arc2Earth tile management tools (like the Change Detection Level) to dramatically reduce the time it takes to update tile caches
</blockquote>


<!--more-->


<p>Previous versions of Arc2Earth generated tiles in the Google/Bing XYZ format, using the appropriate file naming conventions and directory structures. This update now gives a user the ability to generate a cache using the ArcGIS Server naming conventions. It will still correspond to the Google/Bing zoom levels and still use web mercator but it will conform to the ArcGIS Server "exploded" cache structure.</p>

<p>This should be very handy for those organizations that may have their production ArcGIS Server in a different location than the data that they use to generate tiles.  Now the work can be done in ArcMap. This, combined with Arc2Earth's change detection feature, will save a lot of work for some of my customers.</p>

<p>The full change log is here: <a href="http://links.arc2earth.com/changelog">http://links.arc2earth.com/changelog</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GeoCommons Add-In]]></title>
    <link href="http://blog.geomusings.com/2010/07/27/GeoCommons-Add-In/"/>
    <updated>2010-07-27T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2010/07/27/GeoCommons-Add-In</id>
    <content type="html"><![CDATA[<p>Just a quick update on the <a href="http://www.geocommons.com">GeoCommons</a> importer for ArcMap <a href="http://geobabble.wordpress.com/2010/06/02/importing-data-from-geocommons-into-arcmap/">I blogged a while ago</a>:</p>

<p>There is now an ArcGIS 10.0 add-in available as a download from the Google Code site. It is available <a href="http://code.google.com/p/geocommonsbrowser/downloads/list">here</a>.</p>

<p>This should enable ArcGIS 10.0 users to also easily browse and get data from GeoCommons. Sorry, I don't have the add-in code available yet. I'm a little swamped so it'll be a while before I get to that but I wanted to make the download available.</p>
]]></content>
  </entry>
  
</feed>
