<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: arcgis server | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/arcgis-server/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2014-05-27T19:41:15-04:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ArcGIS Image Services and Leaflet]]></title>
    <link href="http://blog.geomusings.com/2012/04/17/arcgis-image-services-and-leaflet/"/>
    <updated>2012-04-17T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2012/04/17/arcgis-image-services-and-leaflet</id>
    <content type="html"><![CDATA[<p>I've become a big fan of <a href="http://leaflet.cloudmade.com/">Leaflet</a> for putting maps on the web. It gives me most of what I need without much of what I don't and is fairly easily extended, as shown by the <a href="http://geojason.info/leaflet-vector-layers/">impressive work of Jason Sanford</a>.</p>

<p>A while back, <a href="http://twitter.com/dbouwman">Dave Bouwman</a> <a href="http://blog.davebouwman.com/2011/08/04/leaflet-lean-mean-javascript-maps/">blogged about work</a> he and the team at <a href="http://www.dtsagile.com/">DTS Agile</a> had done extending Leaflet to support ArcGIS Server layers. Given that there are a lot of ArcGIS Servers out there, this is a good thing to have. Thanks to section 4(f) of the <a href="http://www.esri.com/legal/pdfs/e-800-termsofuse.pdf">Esri Web Services Terms of Use</a>, it's less useful for use with ArcGIS Online, but that's probably the topic of another post. <!--more--></p>

<p>I recently had the need to use an <a href="http://help.arcgis.com/en/arcgisserver/10.0/help/arcgis_server_dotnet_help/index.html#//009300000043000000">ArcGIS Server image service</a> with a Leaflet app. Specifically, I was using the USGS <a href="http://isse.cr.usgs.gov/ArcGIS/rest/services/Orthoimagery/USGS_EDC_Ortho_NAIP/ImageServer">NAIP image service</a>. This service is available as a WMS, which works perfectly well with Leaflet, but I needed to take advantage of some of the capabilities of the <a href="http://www.esri.com">Esri</a> service, such being able to set the interpolation method.</p>

<p>The API signature for interacting with an image service is somewhat different from that of a dynamic map service with ArcGIS Server so I took the DTS AgsDynamicLayer class and modified to an AgsImageLayer class. Because the image service does some raster operations on the fly, it can be a little slower than a standard tiled or dynamic service. As a result, I'd recommend only going this route if you need to allow your users to fiddle with some options. For most production web-mapping applications, you'll probably want to stick with tiles.</p>

<p>It seemed kind of silly to fork the <a href="https://github.com/dtsagile/Leaflet">DTS code</a> for one class so I sent it to Dave, who was gracious enough to accept it. Thanks to DTS for their work, which made my life much easier. Since they have day jobs, too, I'm not sure when it will appear so I thought I'd post it here as well in case someone may find it useful. Most of the code came over from the DTS class, with modifications I needed to work with image services. With apologies for the length, here it is:</p>

<p>{% codeblock lang:js %}
//Class for interacting with ArcGIS Server image services
//Bill Dollins - Zekiah Technologies
//Modified from AgsDynamicLayer.js by DTSAgile</p>

<p>L.AgsImageLayer = L.Class.extend({</p>

<pre><code>includes: L.Mixin.Events,

options: {
    minZoom: 0,
    maxZoom: 18,
    attribution: '',
    opacity: 1,
    format: 'PNG8',
    bandids: '',
    compressionquality: 0,
    interpolation: 'RSP_NearestNeighbor',
    pixelType: 'U8',

    unloadInvisibleTiles: L.Browser.mobileWebkit
},

initialize: function (/*String*/url, /*Object*/options) {
    L.Util.setOptions(this, options);
    this._url = url;
},

//public properties that modify the map

setInterpolation: function (interpolation) {
    this.options.interpolation = interpolation;
},

getInterpolation: function () {
    return this.options.interpolation;
},

setOpacity: function (opacity) {
    //set it immediately
    if (this._image) {
        this._image.style.opacity = opacity;
        // stupid webkit hack to force redrawing of tiles
        this._image.style.webkitTransform += ' translate(0,0)';
    }
    this.options.opacity = opacity;
},

getOpacity: function () {
    return this.options.opacity;
},

reset: function () {
    this._reset();
},

update: function () {
</code></pre>

<p>//        var topLeft = this.<em>map.latLngToLayerPoint(this.</em>map.getBounds().getNorthWest()),
//                bottomRight = this.<em>map.latLngToLayerPoint(this.</em>map.getBounds().getSouthEast()),
//                size = bottomRight.subtract(topLeft);</p>

<p>//        L.DomUtil.setPosition(this.<em>image, topLeft);
//        this.</em>image.style.width = size.x + 'px';
//        this._image.style.height = size.y + 'px';</p>

<pre><code>    this._image.updating = false;
    this._updateLayer();
},

show: function () {
    this._image.style.display = 'block';
    this._image.style.visibility = 'visible';
},

hide: function () {
    this._image.style.display = 'none';
},

isVisible: function () {
    return this._image.style.display === 'block';
},

onAdd: function (map) {
    this._map = map;

    this._reset();

    map.on('viewreset', this._reset, this);
    map.on('moveend', this._moveEnd, this);
    map.on('zoomend', this._zoomEnd, this);
},

onRemove: function (map) {
    map.getPanes().mapPane.removeChild(this._image);
    map.off('viewreset', this._reset, this);
    map.off('moveend', this._moveEnd, this);
    map.off('zoomend', this._zoomEnd, this);
},

_initImage: function () {
    this._image = L.DomUtil.create('img', 'leaflet-image-layer');

    this._image.style.visibility = 'hidden';
    this._image.style.opacity = this.options.opacity;
    this._image.style.display = 'block';
    //TODO createImage util method to remove duplication        
    L.Util.extend(this._image, {
        onselectstart: L.Util.falseFn,
        onmousemove: L.Util.falseFn,
        onload: this._onImageLoad,
        src: this._getImageUrl(),
        updating: false,
        agsLayer: this,
        map: this._map
    });
    this._map.getPanes().mapPane.appendChild(this._image);
},

_getImageUrl: function () {
    //construct the export image url
    var bnds = this._map.getBounds();
    var sz = this._map.getSize();
    //bboxsr &amp;amp; imagesr params need to be specified like so to avoid alignment problems on some map services - not sure why
    var bbox = 'bbox=' + bnds.getSouthEast().lng + '%2C' + bnds.getSouthEast().lat + '%2C' + bnds.getNorthWest().lng + '%2C' + bnds.getNorthWest().lat + '&amp;amp;bboxsr=4326&amp;amp;imageSR=3857';
    var size = '&amp;amp;size=' + sz.x + '%2C' + sz.y;
    var format = '&amp;amp;format=' + this.options.format;
    var pixeltype = '&amp;amp;pixelType=' + this.options.pixelType;
    var interpolation = '&amp;amp;interpolation=' + this.options.interpolation;
    //Some of the following parameters are supported by ArcGIS Server Image Services but not implemented here.
    //They have been included as placeholders.
    var nodata = '&amp;amp;noData=';
    var compressionquality = '&amp;amp;compressionQuality=' + this.options.compressionquality;
    var bandids = '&amp;amp;bandIds=' + this.options.bandids;
    var mosaicprops = '&amp;amp;mosaicProperties=';
    var viewpointprops = '&amp;amp;viewpointProperties=';
    var url = this._url + '/exportImage?' + bbox + size + format + pixeltype + nodata + interpolation + compressionquality + bandids + mosaicprops + viewpointprops + '&amp;amp;f=image';
    return url; // this._url + '/export?' + bbox + size + layers + format + transparent + '&amp;amp;f=image';
},

_updateLayer: function () {
    if (!this._image.updating) {
        //console.log('Updating layer NW: ' + map.getBounds().getNorthWest());            
        this._image.updating = true;

        //update the src based on the new location
        this._image.src = this._getImageUrl();
        //reset the image location on the map
        //            //hang the info on the image, we'll actually update it onload to make sure we don't reposition it before the new image comes down
        //this doesn't seem to work on mobile
        //            this._image.topLeft = this._map.latLngToLayerPoint(this._map.getBounds().getNorthWest());
        //            var bottomRight = this._map.latLngToLayerPoint(this._map.getBounds().getSouthEast());
        //            this._image.size = bottomRight.subtract(this._image.topLeft);

        var topLeft = this._map.latLngToLayerPoint(this._map.getBounds().getNorthWest()),
            bottomRight = this._map.latLngToLayerPoint(this._map.getBounds().getSouthEast()),
            size = bottomRight.subtract(topLeft);
        L.DomUtil.setPosition(this._image, topLeft);
        this._image.style.width = size.x + 'px';
        this._image.style.height = size.y + 'px';
    }
},

_moveEnd: function () {
    //console.log('in _moveEnd : NW: ' + map.getBounds().getNorthWest());
    //don't set display:none for moves - makes for smoother panning - no flicker
    //oops, that didn't work on mobile


    this._image.style.display = 'none';
    this._updateLayer();
},

_zoomEnd: function () {
    //console.log('in _moveEnd');

    //        //zoom the image...(animate it?)
    //        //L.DomUtil.setPosition(this, this.topLeft);
    //        //debugger;
    //        //it's gonna be something like this but it's not quite right - also will need to get/ calculate the correct factor (using 1.5 below) and change it for zoom out
    //        //and we need to properly calculate the new left and top - just hard coded approximate values below
    //        this._image.style.left = '-420px';
    //        this._image.style.top = '-228px';
    //        this._image.style.width = this._image.width * 1.5 + 'px';
    //        this._image.style.height = this._image.height * 1.5 + 'px';


    //for now, we'll just do this
    this._image.style.display = 'none';
    this._updateLayer();
},

_reset: function () {
    if (this._image) {
        this._map.getPanes().mapPane.removeChild(this._image);
    }
    this._initImage();
    this._updateLayer();
},

_onImageLoad: function () {
    //        //reset the image location on the map - doing it this way does not seem to work on mobile
    //        L.DomUtil.setPosition(this, this.topLeft);
    //        this.style.width = this.size.x + 'px';
    //        this.style.height = this.size.y + 'px';


    //this is the image

    //make sure it's visible and reset the updating flag
    this.style.visibility = 'visible';
    this.style.display = 'block';

    this.updating = false;
}
</code></pre>

<p>});
{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[f=geojson]]></title>
    <link href="http://blog.geomusings.com/2011/11/15/fgeojson/"/>
    <updated>2011-11-15T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2011/11/15/fgeojson</id>
    <content type="html"><![CDATA[<p>On November 11, 2011, I gave a lightning talk at the <a href="http://www.meetup.com/DevMeetUpNortheast/events/37184672/">ESRI Dev Meetup in Silver Spring, MD</a>. My talk was titled "If I Were Jack For a Day." Despite the infinite comedic potential of that title, it was a tongue-in-cheek look at some items on my wish list for the <a href="http://en.wikipedia.org/wiki/ArcGIS">ArcGIS</a> platform.</p>

<p>An increasing portion of my consulting work deals with helping users integrate their established ArcGIS infrastructures with other spatial technologies. So my talk was a semi-selfish look at things that would make my life as a consultant and integrator easier.</p>

<p><a href="http://twitter.com/geeknixta">Nick Furness</a> will post the slides but they aren't designed to stand on their own so I thought I'd address them here to provide context. I'll take them one or two per post in no particular order. With that, first up on the docket:</p>

<p><img alt="" class="aligncenter size-full wp-image-2245" height="360" src="http://geobabble.files.wordpress.com/2011/11/fgeojson.png" title="f=geojson" width="480" /></p>

<!--more-->


<p>I'd love to see <a href="http://geojson.org/">GeoJSON</a> support, where appropriate, in the <a href="http://help.arcgis.com/en/arcgisserver/10.0/apis/rest/index.html">ArcGIS Server REST API</a> (or the <a href="http://www.esri.com/industries/landing-pages/geoservices/geoservices.html">GeoServices REST Specification</a> or <a href="http://www.esri.com/news/arcnews/summer11articles/a-note-about-names.html">whatever it's called</a>). I say "where appropriate" because the scope of the REST API is wide-ranging and only potentially meshes up with GeoJSON in a few areas. (Yes, I voted for this on the <a href="http://ideas.arcgis.com/ideaView?id=0873000000088U9AAI">ArcGIS Ideas</a> site.) One such example is querying a feature layer. Take this query for instance:</p>

<p><a href="http://services.arcgisonline.com/ArcGIS/rest/services/Demographics/USA_1990-2000_Population_Change/MapServer/4/query?where=Name%3D%27Maryland%27&amp;f=json">http://services.arcgisonline.com/ArcGIS/rest/services/Demographics/USA_1990-2000_Population_Change/MapServer/4/query?where=Name%3D%27Maryland%27&amp;f=json</a></p>

<p>I envision the option to specify "f=geojson" and have the result returned as a GeoJSON FeatureCollection. Why? Because it would make it much easier to integrate outputs from ArcGIS Server into applications or APIs that support GeoJSON. At least that's my parochial view of the world. This could be added side-by-side with the current JSON capability so as not to break existing clients.</p>

<p>Frankly, I'd like to see GeoJSON support on the consumption side all up and down the stack. It would be nice if ArcMap could be pointed at a URL that emits GeoJSON and load it into a map as a fully functional layer. Of course, it would be nice if ArcGIS supported direct access to a number of other spatial data sources but that was the topic of another slide which I'll get to in another post.</p>

<p>Now I realize that GeoJSON hasn't been "formally" adopted as a standard but, then again, neither has the shapefile. In terms of adoption, the market has spoken with support across a number of platforms and an increasing number of APIs. In my opinion, GeoJSON has quickly become one of the more widely accepted de facto standards in our industry. (Don't take my word for it, <a href="http://www.google.com/search?q=geojson">ask Google</a>.)</p>

<p>This doesn't offer up too many business drivers for ESRI to do such a thing, aside from greater flexibility and utility for ArcGIS Server as a data source, but as I said before, this is my semi-selfish look at things. GeoJSON support in ArcGIS Server would make my life easier and I'm sure I'm not alone.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[So, Which Is It?]]></title>
    <link href="http://blog.geomusings.com/2011/08/17/so-which-is-it/"/>
    <updated>2011-08-17T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2011/08/17/so-which-is-it</id>
    <content type="html"><![CDATA[<p><strong>Update:</strong> I pulled this link out of the comment thread below to emphasize it. It seems to answer this question for now: <a href="http://forums.arcgis.com/threads/35676-Edit-spatial-data-with-quot-ArcGIS-for-Desktop-10.1-quot-in-non-SDE-RDBMS-systems">http://forums.arcgis.com/threads/35676-Edit-spatial-data-with-quot-ArcGIS-for-Desktop-10.1-quot-in-non-SDE-RDBMS-systems</a></p>

<p>Since my <a href="http://blog.geomusings.com/2011/08/03/ziggis-the-end-of-the-road/">previous</a> <a href="http://blog.geomusings.com/2011/08/09/taking-a-look-at-pgmap/">posts</a> about <a href="http://st-links.com/default.aspx">PgMap</a> and the shuttering of <a href="http://www.obtusesoft.com/">zigGIS</a>, the nature of the planned support for connecting directly to spatial databases from ArcGIS 10.1 has gotten somewhat muddier.</p>

<p>{% youtube zU9lv_WqK6k %}</p>

<p>One of the first indications of direct support was <a href="http://events.esri.com/uc/QandA/index.cfm?fuseaction=Answer&amp;ConferenceID=DD02CFE7-1422-2418-7F271831F47A7A31&amp;QuestionID=3949">this statement from the ESRI UC Q&amp;A</a>.</p>

<!--more-->


<p>This statement, of course, doesn't specifically say anything about editing. I followed up with some people at <a href="http://www.esri.com">ESRI</a> (who shall remain nameless) who said the intent was to support editing of spatial databases in the same manner as current simple feature editing. So there we have it, read/edit from ArcMap without the need of ArcSDE.</p>

<p>Or not...</p>

<p>Subsequently, I have gotten a direct message on Twitter (from someone outside ESRI) indicating that editing will be supported only through the Spatial Data Server (SDS) and will require an SDS license. That seems to be bolstered by this <a href="http://proceedings.esri.com/library/userconf/proc11/uc/tw-pdfs/tw_1472.pdf">PDF from the ESRI UC</a>.</p>

<p>So, at this point, I'll confess to being a little confused. There's a lot of new technology and capability being introduced at 10.1. (Hmmmm, maybe it should be 11.0?) So, given that it's all still in beta, I'll chalk it up to general churn associated with an impending release.</p>

<p>Regardless of what the exact story is, I'm not sure it'll affect any decisions related to zigGIS. If ArcMap isn't supported, PgMap is still a compelling alternative for ArcGIS Desktop users. But perhaps someone from ESRI can help clear this up so the community can know what to expect.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GeoServices REST Specification and OGC]]></title>
    <link href="http://blog.geomusings.com/2011/06/16/geoservices-rest-specification-and-ogc/"/>
    <updated>2011-06-16T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2011/06/16/geoservices-rest-specification-and-ogc</id>
    <content type="html"><![CDATA[<p>So this is what I get for missing the Ignite sessions at WhereCampDC<sup>*</sup>:</p>

<p>{% tweet http://twitter.com/spara/status/81369354746331136 %}</p>

<p><sup>*</sup>I got to dance with my daughter and help her chase fireflies so I win.</p>

<p>The worst-kept rumor/secret in recent memory is now "out there" so here are my thoughts:</p>

<!--more-->


<ol>
    
<li>It makes perfect sense for <a href="http://www.opengeospatial.org/">OGC</a>. They were caught completely flatfooted by REST and this provides an expedient (and already widely-deployed) way to catch up, if they adopt it. Esri's API works pretty well and is certainly a nice starting point for a spec.</li>

<li>It's also a no-brainer for <a href="http://www.esri.com">Esri</a>. If adopted, they are automatically OGC-compliant and may even be able to call ArcGIS Server a reference implementation. There's no way that doesn't benefit them and they would probably be the biggest winner in this. What would be nice is if Esri followed this up with some demonstration of commitment to the community such as releasing one or more of their REST API clients as open-source.</li>

<li>I assume this includes the Esri JSON syntax (my term), which is the underpinning of the GeoServices REST Specification. That leaves me wondering about <a href="http://geojson.org">GeoJSON</a>. It's a community specification that's been <a href="http://wiki.geojson.org/Users">widely adopted</a> across the industry. It wouldn't be very hard to augment the GeoServices spec with "f=geojson" on the calls that are appropriate but I can't see OGC doing that for a spec they don't own (although, by doing so, they would live into the "open" part of their name). 

For what it's worth, I like GeoJSON and find it tighter and more focused than the Esri syntax for what it does and I think it should be part of the discussion somehow. It's not entirely a 1-to-1 match as GeoJSON is designed for transmitting geometries and features. The Esri JSON syntax is broader in scope, addressing not only geometries but also other functions such as listing available endpoints and fetching endpoint metadata and such. So GeoJSON, in its current form, would not address all of the needs of the GeoServices spec but would certainly be a viable option for functions such as returning the results of feature layer queries.</li>

<li>It would be interesting to see whether the spec gets implemented across the community. It has been available for months but there hasn't been a wide uptake. The only example I am aware of is <a href="http://www.arc2earth.com/products/cloud/">Arc2Earth's cloud work</a> which <a href="http://ucdemos.appspot.com/a2e/ArcGIS/rest/services/NYC/NYC_Subways/MapServer/">implements it</a> on top of their Google-AppEngine-based services. Maybe OGC adoption would provide the kind of "top cover" that will give developers peace-of-mind. (Note: My company is an Arc2Earth reseller.)
</li>

<div style="text-align:center;"><img alt="" height="202" src="http://geobabble.files.wordpress.com/2011/06/a2e_esrisl.png" title="Arc2Earth Cloud Service in Esri Silverlight API" width="442" /><div style="text-align:center;font-size: 14px;">Arc2Earth sample in Esri Silverlight demo application<br/><br/></div></div>

<li>If the <a href="http://www.esri.com/library/whitepapers/pdfs/geoservices-rest-spec.pdf">GeoServices REST Specification</a> (Beware, PDF) is adopted by OGC, it will continue a trend begun with the adoption of KML and GeoRSS in which they formally adopt community and de facto standards that have emerged and been proven in the industry. I think that's a valid approach that can exist alongside their usual standards development process. This case is a little different than those in that it was developed by a single vendor (like KML) and has been released and documented (like KML) but hasn't really been widely implemented outside its initial vendor base prior to consideration (unlike KML). That's a subtle but important difference that bears watching.
</li>
</ol>


<p>Those were some of my initial thoughts upon hearing this. If it happens, it's obviously of immediate benefit to both OGC and Esri. The lack of any viable presence by OGC in this area has left a void that has begun to be filled by other efforts, including Esri's. It'll be interesting to see the longer-term implications. I think <a href="http://www.spatiallyadjusted.com/2011/06/16/esri-rest-api-could-be-an-ogc-standard/">James</a> is correct that we can expect to see implementations on server platforms such as <a href="http://mapserver.org/">MapServer</a> and <a href="http://geoserver.org/display/GEOS/Welcome">GeoServer</a> but I wonder how relevant it will be in the emerging environment surrounding big data and hosted (i.e. cloud) infrastructures. An end-to-end GIS interface may be less relevant than a more atomic approach that allows support for spatial types to be injected as needed into a larger framework (for example, supporting use of GeoJSON on specific calls the way Twitter does). There's room for both approaches but distinct paths are beginning to emerge.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ArcGIS 10 Service Pack 2 Is Available]]></title>
    <link href="http://blog.geomusings.com/2011/05/20/arcgis-10-service-pack-2-is-available/"/>
    <updated>2011-05-20T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2011/05/20/arcgis-10-service-pack-2-is-available</id>
    <content type="html"><![CDATA[<p>Esri announced late today that Service Pack 2 for ArcGIS 10 is available. It looks like <a href="http://downloads2.esri.com/support/downloads/other_/ArcGIS-10sp2-issues.htm">a fairly sizable list of issues</a> was addressed with this service pack.</p>

<p>Who knows, we could be witnessing history as this could potentially be the last service pack to address ArcIMS. (Well, I can dream, can't I?)</p>

<p>Anyway, if you're among those who like to wait until the second service pack before doing an Esri upgrade, you can now start putting 9.3 out to pasture. Live it up!</p>

<p><img alt="Out to pasture" src="http://www.ia.nrcs.usda.gov/news/images/Pics/pasture.gif" /></p>
]]></content>
  </entry>
  
</feed>
