<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: technology | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/technology/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2014-07-25T13:52:20-04:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Lock-In]]></title>
    <link href="http://blog.geomusings.com/2014/07/24/lock-in/"/>
    <updated>2014-07-24T09:13:00-04:00</updated>
    <id>http://blog.geomusings.com/2014/07/24/lock-in</id>
    <content type="html"><![CDATA[<p>I've been a consultant/programmer/integrator/other for over twenty years now. That's not quite long enough to say I've seen it all but long enough to notice a few patterns. Admittedly, I've spent the vast majority of that time working in the defense world so the patterns may be heavily skewed to that but I think not.</p>

<p style="text-align:center;"> <img src="http://upload.wikimedia.org/wikipedia/commons/9/93/US_Navy_080904-N-9079D-037_Operations_Specialist_3rd_Class_Sarah_M._Hernandez_stands_the_global_command_and_control_systems-maritime_watch.jpg" /></p>

<p>I've run across a number of well-entrenched government-developed systems, such as command-and-control systems, with user interfaces and experiences that many professional designers would consider abhorrent. Yet, I have watched smart, motivated men and women in uniform stand in front of working groups and committees dedicated to "improving" systems and workflows and advocate passionately for these seemingly clunky systems.</p>

<p>Why? Because they know how to use these systems inside and out to meet their missions. User experience is ultimately about comfort and confidence. A user that is comfortable with a system will have a great experience with it regardless of its appearance. DOD tackles this reality through training. For all its faults, there is still no organization better at developing procedures and thoroughly training its people in them. It results in a passionate loyalty for the tools that help them do their jobs and places a very high hurdle in front of any tools that seek to replace current ones.</p>

<!--more-->


<p>This experience has given me a different view of the concept of "lock-in." Over my career, I have heard this term used in a pejorative sense, usually proceeded by the word "vendor." Although I have used the term myself, I usually hear it levelled by a vendor's competitors. It is typically meant to refer to practices a vendor uses to establish barriers to exit for its customers, making it harder for them to choose a competing technology. Such practices can include artificial bundling of unrelated tools, license trickery, half-truths in marketing, and many more; all of which do happen.</p>

<p>Lock-in is a real thing. Lock-in can also be a responsible thing. The organizations I have worked with that make the most effective use of their technology choices are the ones that jump in with both feet and never look back. They develop workflows around their systems; they develop customizations and automation tools to streamline repetitive tasks and embed these in their technology platforms; they send their staff to beginning and advanced training from the vendor; and they document their custom tools well and train their staff on them as well. In short, they lock themselves in.</p>

<p>This is the right and responsible thing to do. An organization, once it has selected a technology, has a responsibility to master it and use it as effectively as it can. If you start applying numbers to all the activities listed above, you will quickly see that it is an investment that far outstrips the original investment in the technology itself. In fact, the cost of the technology itself is often seen as marginal to the overall lifecycle cost, which makes arguments about removing licensing costs, for example, less effective than they would appear to be.</p>

<p>This is true regardless of the provenance of the technology. The original technology has to start to become a hindrance before change is seriously considered, which I am seeing in a few cases these days. But, by and large, the very strong pattern I have seen is that the majority of lock-in originates with users. To fail to recognize that and continue to target the vendor is to miss the point and, ultimately, the target.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meanwhile, Over at Zekiah...]]></title>
    <link href="http://blog.geomusings.com/2014/02/06/meanwhile/"/>
    <updated>2014-02-06T11:34:00-05:00</updated>
    <id>http://blog.geomusings.com/2014/02/06/meanwhile</id>
    <content type="html"><![CDATA[<p>I don't usually cross-pollinate between this, my personal blog, and the company blog over at <a href="http://www.zekiah.com">Zekiah</a>. One of the great things about working at a place like Zekiah, however, is the opportunity to work with smart people and see what they are doing. At times, my colleagues will share components of their work on the company blog. We encourage this, and the experimentation that leads to the posts, as a way to keep our technical capabilities fresh and to also showcase what we do in a way that goes beyond the typical capabilities statements that exist on every site. My colleagues have been pretty busy but have managed to take some time to write a few posts about their work:</p>

<ul>
<li><a href="http://www.zekiah.com/index.php?q=blog/2014/02/04/esri-cityengine-unity-40-and-oculus-rift">Esri CityEngine, Unity 4.0 and the Oculus Rift</a> - My colleague, <a href="http://twitter.com/DanEntzian">Dan Entzian</a>, is an avid gamer, a great developer, and a smart GIS guy. This post combines those interests by showing how to bring cities created in Esri's <a href="http://www.esri.com/software/cityengine/">CityEngine</a> into gaming environments like <a href="http://unity3d.com/">Unity</a> and integrate them with the <a href="http://www.oculusvr.com/">Oculus Rift</a> virtual reality display. It's a quick, but detailed, read that shows the interactions possible between geospatial tools and games.</li>
</ul>


<!--more-->


<p style="text-align:center;"> <img src="http://blog.geomusings.com/images/posts/unity_ide.png" /></p>

<ul>
<li><p><a href="http://www.zekiah.com/index.php?q=blog/2014/01/23/using-awk-ease-your-csv-manipulation">Using AWK to ease your CSV manipulation</a> - <a href="http://twitter.com/hugoestr">Hugo Estrada</a> shows how to use an old, but still effective, tool, <a href="http://www.grymoire.com/Unix/Awk.html">AWK</a>, to process GPS data for use in GIS software. This post is a great reminder that the best tool for the job may already be sitting there at our command prompt waiting for us.</p></li>
<li><p><a href="http://www.zekiah.com/index.php?q=blog/2013/12/18/exporting-esri-silverlight-graphic-layer-google-earth-part-2">Exporting ESRI Silverlight Graphic Layer to Google Earth, Part 2</a> - While Silverlight is, politely speaking, passe, we have a few customers that are still attached to it. Generally, the systems that are using it are accredited systems of record so a rip-and-replace of Silverlight (or any other component) is simply not feasible without a significant paperwork drill. So we try to help our customers keep those systems as useful for their end users as possible. This post, also by Dan Entzian, illustrates how we did that in one case. A follow up to <a href="http://www.zekiah.com/index.php?q=blog/2011/10/11/exporting-esri-silverlight-graphic-layer-google-earth">an older post</a>, this post was done in response to an e-mail inquiry from a reader of the previous post.</p></li>
<li><p><a href="http://www.zekiah.com/index.php?q=blog/2013/12/17/overview-clojure">An Overview of Clojure</a> - In this post, Hugo Estrada takes a look a <a href="http://clojure.org/">Clojure</a>, a variant of the Lisp programming language, and reports on his experience at Clojure Con. I found this particularly interesting since, as a lifelong programmer, I am always interested in new languages (even if it is getting harder to find the time to tinker with them myself).</p></li>
<li><p><a href="http://www.zekiah.com/index.php?q=blog/2014/01/02/generating-physical-schemas-pim">Generating Physical Schemas From a PIM</a> - Okay, this one was written by me, but the work is pretty interesting and involved the efforts of a few co-workers, including Barry Schimpf and Dan Entzian. This post describes a tool that we developed as part of our overall approach to geospatial data model management. This script generator produces SQL scripts for either <a href="http://postgis.net/">PostGIS</a> or <a href="http://www.gaia-gis.it/gaia-sins/">SpatiaLite</a> that enable a user to create spatial databases that are compliant with a data model. The information for the data model (which is always user-defined, not proscribed by us) is stored in what we call the platform independent model, or <a href="http://www.zekiah.com/index.php?q=blog/topics/pim">PIM</a>. We've used the PIM, its encapsulating API, and tools to good effect for a couple of customers now. This post attempts to provide a concrete picture of what can be an abstract concept.</p></li>
</ul>


<p>Since Zekiah is a services company, rather than a platform company, we get to work with a broad range of technologies in support of our customers, in addition to our own internal research. This makes each day pretty interesting and can also make for lively conversation at company events. As the posts above showcase, my colleagues are working on some interesting things and it's a pleasure to work them each day.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Of Predictions and (Geo)Hipsters]]></title>
    <link href="http://blog.geomusings.com/2014/01/07/predictions/"/>
    <updated>2014-01-07T20:09:00-05:00</updated>
    <id>http://blog.geomusings.com/2014/01/07/predictions</id>
    <content type="html"><![CDATA[<p>"Never make predictions, especially about the future." - Casey Stengel</p>

<p>A few days ago, my friend <a href="http://www.linkedin.com/profile/view?id=8637855">Atanas Entchev</a> asked me for <a href="http://geohipster.com/2013/12/31/what-will-be-hot-in-geo-in-2014-predictions-from-the-geohipster-crowd/">my thoughts on coming trends in 2014</a> for a feature he was preparing for his <a href="http://geohipster.com/">GeoHipster</a> site. Being the obliging sort that I am, I provided a couple and I've been attempting to explain one ever since. This has mostly been back-channel via private messages and such but, today, the GeoHipster piece was the subject of the "#geowebchat" on Twitter. Twitter is very effective for some types of communication but quickly goes off the rails where nuance or anything long-form is required. So, it was time for a post. My prediction went like this:</p>

<blockquote><p>I think 2014 will be the year Javascript takes over mapping and visualization in the geospatial world.</p></blockquote>

<p>It was followed by an apparently too brief explanation that I will attempt to expand here.</p>

<!--more-->


<p>I am very fortunate that, in my professional circle, I am connected to a number of people who are doing very cutting-edge things with a lot of technologies. These people have been doing very impressive things with various web technologies for a number of years. So much so that these technologies are somewhat mundane in those circles. As a person who makes my living supporting Federal contracts for a number of agencies, I also have a foot in another camp that has not been as far along with these tools.</p>

<p>Before I get too far into this, I will state that there are many people building very cutting-edge systems in and for the Federal government, but the penetration of modern web tools and techniques is very uneven for a number of reasons. The reasons range from procurement inefficiencies to byzantine information security requirements to workforce training issues and so on. This is generally a reflection of process, not people. As a result, there are still many shops operating on platforms such as Windows XP and Internet Explorer 8, which does not allow for advanced web development.</p>

<p>My observation over on GeoHipster was not targeted at the cutting-edge developers but rather a reflection of changing trends I am seeing across the vast middle of the technology sector represented by large teams of developers working in the bullpens of various government buildings and large system integrators. Initiatives are under way to begin swapping out antiquated technologies for more modern, if still slightly behind the curve, versions that allow for more modern approaches. These initiatives happen to coincide with a push by major vendors away from older technologies, such as browser plug-ins, to more standard development tools such as Javascript, and its supporting ecosystem.</p>

<p>This community is made up of a vast number of very talented developers who have been working with middle of the road technologies for all of the reasons discussed above. The maturation of tools and processes in the Javascript ecosystem lends itself to wider adoption going forward and I see that accelerating in 2014. Dave Bouwman's <a href="http://blog.davebouwman.com/2014/01/04/javascript-fu/">excellent post on Javascript tools</a> is exactly the kind of resource that shows developers used to working with heavy IDEs and other tools that provide a lot of hand-holding how to achieve the productivity they expect with the next generation of development tools. Dave, of course, is also well-versed is the life these developers lead so I am certain he had an eye on that community with his post.</p>

<p>All of this leads to great opportunity. For as much great work that has already been done, there is an army of smart, talented developers who have yet to be turned loose with modern web tools. This is a community that implemented geofencing, "geotriggers," location-based alerting and other concepts using older languages and architectures at least a decade before they appeared in the current marketplace.</p>

<p>So, ultimately, my prediction had very little to do with Javascript and modern web technologies and much more to do with the talents of a large developer community that has been waiting to make use of them. Overly optimistic? Perhaps, but it beats the alternative.</p>
]]></content>
  </entry>
  
</feed>
