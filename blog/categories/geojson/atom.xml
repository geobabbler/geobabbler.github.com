<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: GeoJSON | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/geojson/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2013-09-20T06:11:06-04:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GeoJSON on GitHub: Now What?]]></title>
    <link href="http://blog.geomusings.com/2013/06/18/geojson-on-github-now-what/"/>
    <updated>2013-06-18T16:04:00-04:00</updated>
    <id>http://blog.geomusings.com/2013/06/18/geojson-on-github-now-what</id>
    <content type="html"><![CDATA[<p>So <a href="http://github.com">GitHub</a> <a href="https://github.com/blog/1528-there-s-a-map-for-that">announced</a> that you can now automatically view any <a href="http://geojson.org">GeoJSON</a> files that may be in a repository inside an interactive map driven by <a href="http://www.mapbox.com/">MapBox</a> technology. This simple enhancement to GitHub is probably one of the most significant developments in the geospatial industry in years. I'll explain a little later in this post. It's also important to view this new capability as a great, but limited, first step. I'll discuss that a little later as well.</p>

<p>While it's cool to click on a link and just see a map, it doesn't take long to wonder about how you can use this capability beyond viewing data in GitHub. What follows are three ways to capitalize on GeoJSON in GitHub. Not all are directly related to the new mapping capability, and two have been possible for a long time. That said, the GitHub announcement may draw interest from users who have not previously considered either GitHub or GeoJSON, so I hope these approaches will be useful.</p>

<h3>Embed the GitHub map.</h3>

<p><del>If you click on a GeoJSON file and view the new map in GitHub, a quick view of the page source will show that this map is embedded in an IFRAME object.</del> GitHub provides a <a href="https://help.github.com/articles/mapping-geojson-files-on-github#embedding-your-map-elsewhere">simple embedding method</a> to display the GitHub map in any page. (Thanks to <a href="https://github.com/benbalter">Ben Balter</a> for this update.) It's a great way to quickly publish a data set while also providing access to download the raw data.</p>

<p style="text-align:center;"><script src="https://embed.github.com/view/geojson/geobabbler/geodata/master/geojson/leonardtown_bldgs.geojson"></script></p>

<!--more-->


<h3>Stream the data into your own web map.</h3>

<p>This is not a new capability; if you've had GeoJSON in a repo, you've always been able to do this. That said, if you're checking out GitHub or GeoJSON for the first time as a result of the new mapping capability, this is something you may want to try. I have had a page up for a while showing the <a href="http://blog.geomusings.com/assets/demos/mdq6/">county-by-bounty breakdown of Maryland's marriage equality question from the 2012 election</a> that uses this approach to load the data into a <a href="http://leafletjs.com/">Leaflet</a> map from GitHub and style it. (Incidentally, the tiles in the map are also hosted on GitHub.)</p>

<h3>Stream the data into your desktop.</h3>

<p>A third option is to stream the GeoJSON data directly into desktop GIS software such as QGIS for further analysis. In QGIS, simply need to add a vector, specifying "Protocol" and entering the URL to your GitHub-hosted GeoJSON file. Make sure you use the "raw" URL that looks something like this: https://raw.github.com/geobabbler/geodata/master/geojson/leonardtown_bldgs.geojson .</p>

<p style="text-align:center;"><img src="http://blog.geomusings.com/images/posts/add_geojson_layer.png" /></p>

<p>After a few seconds (or more depending on the file size), it should load into QGIS like this:</p>

<p style="text-align:center;"><img src="http://blog.geomusings.com/images/posts/qgis_github_geojson.png" /></p>

<p>Additionally, the <a href="https://github.com/RBURHUM/arcgis-ogr/">GDAL/OGR plug-in for ArcGIS</a> by <a href="http://www.amigocloud.com/homepage/index.html">AmigoCloud</a> provides a way to get GeoJSON into ArcMap, though you may need to download the data first.</p>

<p>UPDATE: Dane Springmeyer pointed out that TileMill supports remote URLs as well.</p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p><a href="https://twitter.com/geomusingsblog">@geomusingsblog</a> <a href="https://twitter.com/billdollins">@billdollins</a> - very cool, had no idea QGIS supported remote urls. TileMill does also: <a href="http://t.co/o3wxv2VkEv">http://t.co/o3wxv2VkEv</a></p>&mdash; Dane Springmeyer (@springmeyer) <a href="https://twitter.com/springmeyer/statuses/347483526171594753">June 19, 2013</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p>Those are three (or so) quick ways to capitalize on GeoJSON data in GitHub now. So what next?</p>

<p>I stated earlier that I think the GitHub announcement was one of the most significant developments in years. I think it is best explained by <a href="http://feomike.github.io/post/thoughts-on-disruption.html">feoMike in his recent post</a>. As he points out, GitHub has made it easy to communicate spatial information in a way that is fully consistent with the web. Now that simple mapping is available to a large community of developers, it will be interesting to see where they take it. feoMike offered up a few early examples in his post. It's worth a read.</p>

<p>The GitHub move is great for GeoJSON as a format. I've said in the past that the search for the next shapefile ends with GeoJSON. If the web is this generation's dominant computing platform (it is), then GeoJSON provides a simple, elegant solution for geographic data transport in a manner that the shapefile did for the desktop. Support by GitHub is one more example of the community voting with its code as to what it prefers.</p>

<p>I also said it was a great first step, but limited. The mapping capability is understandably basic, though the documentation shows how you can customize styling somewhat. There is also a point at which the data seems to become too big to render (in either the map or in raw form). Bill Morris has identified this limit to be in the ballpark of 4.5MB, which can be easy to hit with GeoJSON.</p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p><a href="https://twitter.com/byrne_tweets">@byrne_tweets</a> <a href="https://twitter.com/BenBalter">@BenBalter</a> <a href="https://twitter.com/ericg">@ericg</a> <a href="https://twitter.com/ajturner">@ajturner</a> +1 for a solid number on max renderable filesize. 4.5MB is pushing it: <a href="https://t.co/cNTbA5Djqw">https://t.co/cNTbA5Djqw</a></p>&mdash; Bill Morris (@vtcraghead) <a href="https://twitter.com/vtcraghead/statuses/346825523521019904">June 18, 2013</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p>So this means that enterprises won't be dumping terabytes of vectors to GeoJSON and loading them into GitHub. That's a good thing in my book. It is, however, an acceptable solution for small data sets and quick turn-around data sharing. As with all things, you have to go in with the right set of expectations.</p>

<p>The thing I'm probably least worried about is how this affects <a href="http://www.esri.com">Esri</a>. Without any specific inside knowledge of Esri's plans, I suspect some form of official support for GeoJSON isn't far off. There are too many people inside Esri who get GeoJSON for it not to happen. If anything, the GitHub announcement may provide a bit of a push by providing a potentially rich source of data sets to consume. The real question is what form the support will take. In any event, Esri provides enough APIs to enable us to develop our own support for GeoJSON if we need it.</p>

<p>The addition of GeoJSON mapping to GitHub is a very small change in the scheme of that platform, but such small changes can sometimes lead to big shifts. It has been possible for a long time to use GitHub to host geospatial data for applications. The main benefit of this latest change, in my opinion, is its potential to get people thinking about the platform in a different way. With such a visible (and visual) change on a platform targeted at developers, I hope that it will motivate that community to begin experimenting with how far it can be pushed. If a hosted platform with an already-baked-in workflow for change management and version control begins to be viewed as a viable home for spatial data, it has the potential to change how the geospatial community thinks about how it does business.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GeoJSON from ArcGIS Server]]></title>
    <link href="http://blog.geomusings.com/2013/06/10/geojson-from-arcgis-server/"/>
    <updated>2013-06-10T09:54:00-04:00</updated>
    <id>http://blog.geomusings.com/2013/06/10/geojson-from-arcgis-server</id>
    <content type="html"><![CDATA[<p>A while back, I posted about <a href="http://blog.geomusings.com/2011/11/15/fgeojson/">my desire to see GeoJSON supported as an output format from ArcGIS Server</a>. I found myself needing that capability so I recently completed, <a href="https://github.com/geobabbler/AGSOpenFormats">and posted to GitHub</a>, a first cut at a server object extension (SOE) for ArcGIS Server 10.1 that enables output of <a href="http://geojson.org/">GeoJSON</a> via an HTTP GET.</p>

<p>Using the SOE is fairly straightforward. If you download the code and build it (ensuring you have installed the ArcObjects SDK for .Net), you can simply move the project outputs to your target machine and use the ArcGIS Server manager to install the SOE. Once you log into the manager application, click "Site" at the top of the page and then "Extensions" on the left. Click "Add Extension" and browse to the .soe file. You should end up seeing something like this:</p>

<p style="text-align:center;"> <img src="http://blog.geomusings.com/images/posts/geojsonserver1.png" /></p>

<!--more-->


<p>After, that you can go back to "Services," choose a map service, select "Capabilities," and you should see "Open Data Formats" as a choice to select. At that point, you should be ready to go.</p>

<p style="text-align:center;"> <img src="http://blog.geomusings.com/images/posts/geojsonserver2.png" /></p>

<p>That's all meat-and-potatoes configuration workflow that <a href="http://www.esri.com">Esri</a> has made very easy at 10.1. Once you've been through all of that, you should be able to go to your map service properties using a URL like this:</p>

<p>http://localhost/arcgis/rest/services/SampleWorldCities/MapServer</p>

<p>...and you should see be able to scroll to the bottom and see "GeoJSONServer" (which will change in a future version) as a supported extension.</p>

<p style="text-align:center;"> <img src="http://blog.geomusings.com/images/posts/geojsonserver4.png" /></p>

<p>Following that link should take you to a page that shows "GeoJSON" as a supported operation. From there, you should be taken to a page that allows you to enter in a layer number (required) or a query (optional). The layer number is the layer's ordinal shown in the map service properties above. The query parameter can be a SQL WHERE clause that is valid for the layer in question (leaving off the word "WHERE"). This is consistent with how definition queries are handled elsewhere in the Esri REST API. At this point, GET and POST do the same thing though that may change in the future. You can use this form (which is generated by default) to test the SOE and get examples of valid URLs. For example, this URL returns GeoJSON for the continent of Asia from my sample map service:</p>

<p>http://localhost/arcgis/rest/services/SampleWorldCities/MapServer/exts/GeoJSONServer/GeoJSON?query=CONTINENT%3D%27Asia%27&amp;layer=1&amp;f=json</p>

<p>In the process of developing the SOE, I tested the outputs using <a href="http://geojsonlint.com/">geojsonlint.com</a> and the <a href="http://openlayers.org/dev/examples/vector-formats.html">OpenLayers vector format example</a> page (see the following screen shot).</p>

<p style="text-align:center;"> <img src="http://blog.geomusings.com/images/posts/geojsonserver5.png" /></p>

<p>A few nuts and bolts:</p>

<ol>
<li>I refactored my previous <a href="http://blog.geomusings.com/2012/08/24/togeojson-and-towkt-for-the-esri-fgdb-api/">extension methods for the File Geodatabase API</a> to work with ArcObjects for this SOE. The code is functional but I'd call the conversion about 75% complete. A close examination by an experienced ArcObjects developer may lead to some head-scratching as there are some artifacts from the FGDB API oriented code that I'll be cleaning up over the next couple of weeks.</li>
<li>The SOE is currently output-only and only supports attribute queries. I plan to work on the ability to pass in a GeoJSON geometry to do a spatial filter as well but my GeoJSON code currently only persists Esri geometries to GeoJSON but does not yet de-persist. For the sake of consistency, I don't want to mix JSON syntax, so I want to add in de-persistence before implementing spatial filters.</li>
<li>The SOE always transforms geometries to WGS84 for GeoJSON output. The GeoJSON spec doesn't specifically require this; it was just my call.</li>
<li>The SOE has been tested with ArcGIS Server 10.1 only. I don't know if the current code will present any issues with previous versions but I really have no plans to go back and test them. The actual GeoJSON generation shouldn't be much of an issue but I can't speak for the SOE interface itself. Forks are welcome.</li>
</ol>


<p>As can be seen, the code is still under active development but it works in its current configuration. It's actually performed pretty well on a very modest Amazon instance so I'm somewhat encouraged. I'll post some issues to GitHub as a nominal road map.</p>

<p>In a semi-related note, it looks like Marten Hogeweg of Esri is working on integrating GeoJSON support into Esri's portal server project, so users of that tool may want to hold on for that.</p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p>So... looking at adding <a href="https://twitter.com/search?q=%23geojson&amp;src=hash">#geojson</a> to <a href="https://twitter.com/search?q=%23esri&amp;src=hash">#esri</a> <a href="https://twitter.com/search?q=%23opensource&amp;src=hash">#opensource</a> <a href="https://twitter.com/search?q=%23geoportal&amp;src=hash">#geoportal</a> server. What do I see... There&#39;s multiple flavors of it? <a href="https://twitter.com/search?q=%23whatsupwiththat&amp;src=hash">#whatsupwiththat</a></p>&mdash; Marten Hogeweg (@martenhogeweg) <a href="https://twitter.com/martenhogeweg/statuses/343190756271464448">June 8, 2013</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p>I'm looking forward to checking out Marten's work and am glad to see Esri taking greater notice of GeoJSON.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OGC Abandons the Web]]></title>
    <link href="http://blog.geomusings.com/2013/05/30/ogc-abandons-the-web/"/>
    <updated>2013-05-30T10:52:00-04:00</updated>
    <id>http://blog.geomusings.com/2013/05/30/ogc-abandons-the-web</id>
    <content type="html"><![CDATA[<p>Those are my words, not theirs.</p>

<p>It came to light today that <a href="http://www.opengeospatial.org/">OGC</a> has decided to <a href="http://lists.osgeo.org/pipermail/discuss/2013-May/011789.html">withdraw the GeoServices REST Specification</a>, also known as the "ESRI REST API," as a proposed standard. I will not take up the relative merits of the specification or the implications of OGC potentially adopting an industry-developed specification that has so much implied workflow embedded in it. With this decision, three facts remain unaltered:</p>

<ol>
<li>The ESRI REST API will continue forward as a widely-used de facto standard in the form of ArcGIS Server installs and other emulations, such as that in <a href="http://www.arc2earth.com/">Arc2Earth</a>.</li>
<li>GeoJSON will continue forward as a widely-used de facto standard in the form of numerous open-source implementations.</li>
<li>OGC still has no JSON syntax.</li>
</ol>


<p>Yes, twelve years after the <a href="https://en.wikipedia.org/wiki/JSON#History">birth of JSON</a>, five years after the <a href="http://webhelp.esri.com/arcgisserver/9.3/java/index.htm#whats_new_93.htm">release of the ESRI REST API and its embedded JSON syntax</a>, and five years after the <a href="http://geojson.org/geojson-spec.html">release of GeoJSON 1.0</a>, OGC is still has no entry in the JSON space. Between Esri and GeoJSON, the utility of JSON in web mapping applications has been roundly proven. In the ESRI arena, find me anyone who willingly uses the SOAP API these days while the adoption of support for GeoJSON across the open-source GIS world speaks volumes. The industry has voted with its feet and its code as to what it prefers.</p>

<p>There's probably a lively discussion to be had about where JSON should fit into OGC's priorities. What is clear, however, is that Javascript and JSON are driving the web at large and the web-mapping space in the geospatial market. With no official stance of any kind in this area, it becomes increasingly difficult to take OGC seriously in matters of the modern web.</p>

<p>Howard Butler had a great point a while back when discussing the potential adoption of the GeoServices REST Specification:</p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p><a href="https://twitter.com/JeffHarrison">@JeffHarrison</a> I think it would be great for OGC to ratify GeoServices. It would cement their irrelevance to current and future developers.</p>&mdash; Howard Butler (@howardbutler) <a href="https://twitter.com/howardbutler/statuses/331405667837542401">May 6, 2013</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p>The irony here is that the withdrawal of the specification accomplishes the same thing. I won't go so far as to say OGC has no clue or doesn't care but, in the perception-is-reality department, they look pretty out-of-touch these days. Is this a problem with process? Maybe. Is it a problem with message? Definitely. The message I've gotten from this whole episode is that we can keep doing what we've been doing with our web mapping applications because OGC has nothing for us.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Checking out the GDAL/OGR Plugin for ArcGIS]]></title>
    <link href="http://blog.geomusings.com/2013/01/22/checking-out-the-gdal-slash-ogr-plugin-for-arcgis/"/>
    <updated>2013-01-22T13:29:00-05:00</updated>
    <id>http://blog.geomusings.com/2013/01/22/checking-out-the-gdal-slash-ogr-plugin-for-arcgis</id>
    <content type="html"><![CDATA[<p>A while back, I <a href="http://blog.geomusings.com/2012/09/18/still-jonesing-for-ziggis-try-this-ogr-plug-in-for-arcgis/">blogged</a> the availability of a <a href="http://www.gdal.org/">GDAL/OGR</a> <a href="https://github.com/RBURHUM/arcgis-ogr/">plug-in for ArcGIS</a> desktop by <a href="http://www.linkedin.com/profile/view?id=14926439&amp;locale=en_US">Ragi Burhum at AmigoCloud</a>. At the time, I was hoping to dig into it fairly quickly but that didn't happen and I'm finally getting to it. Anyone who has followed this blog for a while knows that I have had <a href="http://blog.geomusings.com/2006/12/17/postgis-and-arcgis-9.1/">more</a> than a <a href="http://blog.geomusings.com/2007/07/10/consuming-georss-in-arcmap-with-inmemoryworkspacefactory/">passing</a> <a href="http://blog.geomusings.com/2012/10/03/cutting-tiles-for-arcgis-server-using-tilemill/">interest</a> in <a href="http://blog.geomusings.com/2010/06/02/importing-data-from-geocommons-into-arcmap/">integrating</a> new <a href="http://blog.geomusings.com/2011/03/02/announcing-weogeo-tools-for-arcgis/">data</a> <a href="http://blog.geomusings.com/2012/08/24/togeojson-and-towkt-for-the-esri-fgdb-api/">sources</a> <a href="http://blog.geomusings.com/2011/08/09/taking-a-look-at-pgmap/">with</a> <a href="http://blog.geomusings.com/2011/11/15/fgeojson/">ArcGIS</a> over the years. This comes from the fact that, as a technology geek, I am fascinated by all forms of technology and enjoy the process of integration and, as a consultant providing services to the Federal Government, most of my customers have standardized on Esri tools. Integrations such as GeoRSS, PostGIS, GeoCommons and GeoJSON have directly benefitted my customers for real-world applications so I continue look for ways to remove the barriers between them and the data they seek.</p>

<div style="text-align:center;"><img src="http://images-mediawiki-sites.thefullwiki.org/07/3/6/0/1583563936968042.png" /></div>




<!--more-->


<p>The GDAL/OGR plug-in caught my attention because it purports to add support for any format supported by GDAL and OGR, similar to the way <a href="http://qgis.org">QGIS</a> leverages them for a wide variety of format support. To get going with it, I downloaded the source and built it in Visual Studio 2010. I only ran into a couple of minor issues. First, a had previously installed the Windows build of OGR on my machine using the <a href="http://www.gisinternals.com/sdk/PackageList.aspx?file=release-1600-gdal-1-9-2-mapserver-6-2-0.zip">distribution from GIS Internals</a>. The project as it came down from GitHub couldn't find the OGR and OSR bindings for C#, so I had to resolve that trivial issue. Next, the plug-in was built for use in ArcGIS 10.1 but I was using 10.0. Because some new interfaces were introduced, the <a href="https://github.com/RBURHUM/arcgis-ogr/blob/master/src/OGRPlugin/OGRPlugin/ogrplugin_utils.cs">current code</a> contains a declaration of  type ISpatialReferenceFactory4, which is a 10.1 interface. I needed to change that to ISpatialReferenceFactory3 to make it work with 10.0. That has been the only change I have needed to make so far to account for the version differences. I plan to add a compiler directive in my fork of the project to account for that and submit it back once I can test it.</p>

<p>As I said before, I previously had installed GDAL/OGR so it was already on my machine and my GDAL_DATA environment variable was set. When I built the plug-in and attempted to use it in ArcMap, it threw an error when I tried adding a GeoJSON layer (also with SpatiaLite) that it could not find my gcs.csv file, which is in my GDAL_DATA location. With a little investigation, I found that the code was resetting that variable at runtime to point to the location of the plug-in binary. I copied the files there and it worked well from then on. I'll probably try to add a way to check for the existence of that variable before setting it. None of these issues were major and I think they were reasonable design choices up front so I am not concerned by them.</p>

<p>At that point, I was able to quickly add GeoJSON and SpatiaLite layers to my data frame in ArcMap. This is pretty exciting to me since the ability to support a wide range of data types was a long-standing goal of zigGIS and I'm glad that Ragi has conquered that with this work.</p>

<p>Because the layers are added using a plug-in workspace, they are full read-only citizens inside ArcGIS. For example, I was able to wire up a couple of models using ModelBuilder and execute clips (clipping a GeoJSON layer with a SpatiaLite layer) and buffers and simple tests. I'm really not a huge ModelBuilder user but I thought it would be a good way to test things out.</p>

<div style="text-align:center;">
<img src="http://blog.geomusings.com/images/posts/buffer.png" />
<div style="text-align:center;font-size: 14px;">Model to test a simple buffer<br/><br/></div></div>


<p>The model above produced a 50-foot buffer around Amtrak rail lines from NTAD 2012 in GeoJSON format. The resultant buffer was written to a file geodatabase. As you can see from the image below, it worked like a charm.</p>

<div style="text-align:center;">
<img src="http://blog.geomusings.com/images/posts/buffer_result_small.png" />
<div style="text-align:center;font-size: 14px;">Results of the buffer model.<br/><br/></div></div>


<p>I achieved similar success with a clip operation so I'm sufficiently confident in trying to package the plug-in up and put it in the hands of some of the analysts with whom I work. All-in-all, the plug-in is a nice piece of work. It's still not fully baked but it's a very solid start and deserves a closer look if you're looking to expand the reach of your ArcGIS investment.</p>
]]></content>
  </entry>
  
</feed>
