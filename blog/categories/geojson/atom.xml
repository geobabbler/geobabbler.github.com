<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: geojson | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/geojson/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2012-12-13T06:26:00-05:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Put Planet Geospatial to Work for You]]></title>
    <link href="http://blog.geomusings.com/2012/11/27/Put-Planet-Geospatial-to-Work-for-You/"/>
    <updated>2012-11-27T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2012/11/27/Put-Planet-Geospatial-to-Work-for-You</id>
    <content type="html"><![CDATA[<p>I'm happy to see that <a href="http://www.spatiallyadjusted.com/2012/11/24/planet-geospatial-the-way-forward/" target="_blank">James has decided keep Planet Geospatial going</a>. It's been one of the more consistently valuable resources in the community since its inception and it's good that it will continue.</p>

<p>While I'm looking forward to seeing how <a href="http://twitter.com/cageyjames" target="_blank">James</a> evolves <a href="http://planetgs.com" target="_blank">Planet Geospatial</a>, there are ways to more efficiently extract value out of its current state right now. At its core, Planet Geospatial is an RSS feed. RSS can safely be called "venerable" nowadays, but it still does what it does very well.</p>

<p><img alt="" class="aligncenter size-full wp-image-3002" height="400" src="http://geobabble.files.wordpress.com/2012/11/postgis_evernote1.png" title="PostGIS items from Planet Geospatial in Evernote" width="640" /></p>

<p>Two of my favorite tools for culling down the firehose that is Planet Geospatial are <a href="http://ifttt.com" target="_blank">IFTTT</a> (the title of this post is a riff on the IFTTT motto) and <a href="http://evernote.com/" target="_blank">Evernote</a>. If you're not familiar with IFTTT, you should be. It reminds me of a more-intuitive Yahoo Pipes and it allows you to mix channels, triggers, and actions to automate processes of your choosing. It's become by preferred method of synchronizing my blog with social media and for filtering data sources. It also drives the <a href="http://twitter.com/QGISInfo" target="_blank">Unofficial QGIS Info</a> Twitter account. <!--more--></p>

<p>Evernote is becoming a key tool for me to store and access notes and other kinds of information. The fact that it runs on every device I own in addition to browsers makes it very useful for me as I move between customer locations.</p>

<p>When James first posted that he was wondering what to do with Planet Geospatial, I shared with him an IFTTT recipe that inserts posts from Planet Geospatial about <a href="http://www.postgis.org" target="_blank">PostGIS</a> into an Evernote notebook. He kindly tweeted it.</p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p>Try this IFTTT Recipe: Log PostGIS Items from Planet Geospatial to Evernote. <a href="https://t.co/z5hOxPqH" title="https://ifttt.com/recipes/67215">ifttt.com/recipes/67215</a></p>&mdash; James Fee (@cageyjames) <a href="https://twitter.com/cageyjames/status/272025049526050816" data-datetime="2012-11-23T17:13:20+00:00">November 23, 2012</a></blockquote>
<script src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p>I usually have three to four such filters running, depending upon topics that I'm watching. Currently, I'm grabbing posts about PostGIS, <a href="http://geojson.org" target="_blank">GeoJSON</a>, and <a href="http://mapbox.com/tilemill/docs/manual/carto/" target="_blank">CartoCSS</a>. These filters allow me to peruse the posts at my leisure without worrying about missing them. I can delete them from my notebook or save them as I see fit. For me, it's like having a DVR for Planet Geospatial.</p>

<p>Ultimately, Planet Geospatial is an information source. It just happens to be an information source that's based on a mature, open, well-documented, and widely adopted standard. As such, there's no need to wait for James to evolve it into something else. We can take it and transform it to meet our needs and then share it back. It's been a great community resource for a long time; it will be fun to see what the community can do with it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ToGeoJson and ToWKT for the Esri FGDB API]]></title>
    <link href="http://blog.geomusings.com/2012/08/24/ToGeoJson-and-ToWKT-for-the-Esri-FGDB-API/"/>
    <updated>2012-08-24T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2012/08/24/ToGeoJson-and-ToWKT-for-the-Esri-FGDB-API</id>
    <content type="html"><![CDATA[<p>In support of some of our ongoing <a href="http://www.zekiah.com/index.php?q=blog/topics/pim" target="_blank">PIM</a> work, we've been integrating the <a href="http://www.esri.com" target="_blank">Esri</a> <a href="http://resources.arcgis.com/content/geodatabases/10.0/file-gdb-api" target="_blank">File Geodatabase (FGDB) API</a> into some tools. Without going into a level of detail that would hijack this post, one of the many functions performed by some of the tools is to validate physical spatial databases against established data models to analyze compliance and identify differences. These databases may be in Esri or non-Esri formats and we have traditionally handled Esri geodatabases through ArcObjects since it provides a relatively uniform interface across the various flavors of geodatabase.</p>

<p><img alt="" style="text-align: center;" height="300" src="http://geobabble.files.wordpress.com/2012/08/fileapi2.png" title="FGDB API" width="287" /></p>

<p>Of course, ArcObjects requires an ArcGIS license of some sort and we are finding out that this is not always available to users in the field under many situations so the FGDB API gets past that for file geodatabases, at least. <!--more--></p>

<p>Since the PIM is really a configuration management system for spatial data models, the tools need to support a wide variety of scenarios, including data migration between platforms, versions, approved user-defined implementations, etc. in a manner that's compliant with the data model being managed. As a result, some ETL-like tools are built into the workflows, although ETL is not a primary focus of the PIM.</p>

<p>Since the PIM tools are written in .NET, I built a couple of extension methods to assist with some of the workflows in the existing tools. They enable outbound support for GeoJSON and WKT. The GeoJSON methods work on RowCollection, Row, and ShapeBuffer objects to create FeatureCollection, Feature, and Geometry types respectively. In practice, they'd be used something like this example from a very simple ASP.NET MVC sample application:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="kt">var</span> <span class="n">path</span> <span class="p">=</span> <span class="n">Server</span><span class="p">.</span><span class="n">MapPath</span><span class="p">(</span><span class="s">&quot;/App_Data/mvc_samples.gdb&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">Geodatabase</span> <span class="n">gdb</span> <span class="p">=</span> <span class="n">Geodatabase</span><span class="p">.</span><span class="n">Open</span><span class="p">(</span><span class="n">path</span><span class="p">);</span>
</span><span class='line'><span class="n">Table</span> <span class="n">statesTable</span> <span class="p">=</span> <span class="n">gdb</span><span class="p">.</span><span class="n">OpenTable</span><span class="p">(</span><span class="s">&quot;\us_states&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">RowCollection</span> <span class="n">rows</span> <span class="p">=</span> <span class="n">statesTable</span><span class="p">.</span><span class="n">Search</span><span class="p">(</span><span class="s">&quot;*&quot;</span><span class="p">,</span> <span class="s">&quot;STATE_NAME LIKE &#39;M%&#39;&quot;</span><span class="p">,</span> <span class="n">RowInstance</span><span class="p">.</span><span class="n">Recycle</span><span class="p">);</span>
</span><span class='line'><span class="kt">var</span> <span class="n">rval</span> <span class="p">=</span> <span class="n">rows</span><span class="p">.</span><span class="n">ToGeoJson</span><span class="p">();</span>
</span><span class='line'><span class="n">gdb</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'><span class="n">Response</span><span class="p">.</span><span class="n">ContentType</span> <span class="p">=</span> <span class="s">&quot;application/json&quot;</span><span class="p">;</span>
</span><span class='line'><span class="kt">object</span> <span class="n">result</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">Content</span><span class="p">(</span><span class="n">rval</span><span class="p">);</span>
</span><span class='line'><span class="k">return</span> <span class="n">result</span> <span class="k">as</span> <span class="n">ActionResult</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The WKT method only works on ShapeBuffer objects to export geometries. The code for the extension methods themselves can be found on <a href="https://github.com/geobabbler/FgdbExtensions" target="_blank">GitHub here</a>. It includes a five-minutes-or-less MVC sample from which the above code was lifted. I know I'll be doing some cleanup on the GeoJSON in the near future and I'll probably add support for EWKT to smooth our interactions with <a href="http://postgis.refractions.net/" target="_blank">PostGIS</a> and <a href="http://www.gaia-gis.it/gaia-sins/" target="_blank">SpatiaLite</a> and may also add support for WKB.</p>

<p>As I said, I developed these to support workflows in existing applications. If you're looking to just perform data conversion or ETL, you should just use <a href="http://www.gdal.org/ogr/" target="_blank">OGR</a> or <a href="http://www.safe.com/" target="_blank">FME</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CartoDB + Leaflet = Easy]]></title>
    <link href="http://blog.geomusings.com/2011/10/13/CartoDB--Leaflet--Easy/"/>
    <updated>2011-10-13T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2011/10/13/CartoDB--Leaflet--Easy</id>
    <content type="html"><![CDATA[<p>One of the biggest sources of buzz at <a href="http://2011.foss4g.org/">FOSS4G</a> was <a href="http://cartodb.com">CartoDB</a>. It is a hosted solution from <a href="http://vizzuality.com/">Vizzuality</a> that uses <a href="http://postgis.org/">PostGIS</a> to allow you to store your spatial data online. I got a beta account a couple of weeks ago but life (i.e. paying work) kept getting in the way but I finally got to play with it recently.</p>

<p>One of the things that intrigued me is that, similar to <a href="http://www.google.com/fusiontables/Home/">Google Fusion Tables</a>, CartoDB exposes a SQL interface through a RESTful API (I'm still not sure if the term "API" applies to REST but it's a convenient shorthand). Essentially, CartoDB exposes PostgreSQL SQL and the spatial SQL extensions of PostGIS. Once your data is loaded, you can query it and return the results as either CartoDB's JSON syntax, KML or <a href="http://geojson.org">GeoJSON</a>.</p>

<p>With this information, I set out to build a simple application to query property data and display the results on a map in a browser. In addition to CartoDB, I elected to use the <a href="http://leaflet.cloudmade.com/">Leaflet</a> Javascript library to accomplish the mapping (although I also experimented with OpenLayers). Displaying and styling GeoJSON in Leaflet is very straightforward and this task gave me and excuse to get a little more comfortable with it.</p>

<!--more-->


<p>For starters, I downloaded building footprints for St. Mary's County, Maryland (freely available <a href="http://www.stmarysmd.com/gis/">here</a>). The footprints themselves are countywide so I also downloaded the boundary for Leonardtown, Maryland and used <a href="http://qgis.org/">QGIS</a> to clip out just those buildings that fell within the town boundary. Once my data was prepped, I uploaded it into CartoDB.</p>

<div style="text-align: center;"><img alt="" class="size-full wp-image-2134" height="359" src="http://geobabble.files.wordpress.com/2011/10/cartodb_upload.png" title="cartodb_upload" width="590" /><div style="text-align: center; font-size: 14px">The CartoDB uploader is very easy to use.<br /></div></div>


<p>Once the data is uploaded and made public, it is as easy as a URL to pull down the GeoJSON (or even KML). Click here:</p>

<p><a href="http://geomusings.cartodb.com/api/v1/sql?q=SELECT%20*%20FROM%20leonardtown_bldgs&amp;format=geojson">http://geomusings.cartodb.com/api/v1/sql?q=SELECT%20*%20FROM%20leonardtown_bldgs&amp;format=geojson</a></p>

<p>You'll notice that some SQL is embedded in the URL. Finding the commercial properties in the data set is as simple as adding a WHERE clause:</p>

<p><a href="http://geomusings.cartodb.com/api/v1/sql?q=SELECT%20*%20FROM%20leonardtown_bldgs%20WHERE%20structure_%20=%20'Commercial'&amp;format=geojson">http://geomusings.cartodb.com/api/v1/sql?q=SELECT%20*%20FROM%20leonardtown_bldgs%20WHERE%20structure_%20=%20'Commercial'&amp;format=geojson</a></p>

<p>This became the basis of my sample application. I decided to do a simple property finder that allows a user to find buildings by property type and square footage. As I mentioned, it's very easy to use GeoJSON with Leaflet. Here is the Javascript function that fetches the buildings from CartoDB and adds them to the map. It uses jQuery to do the actual fetch and then processes the result, adding the features into a Leaflet GeoJSON layer.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">function</span> <span class="nx">getBuildings</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">bldgLayer</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">GeoJSON</span><span class="p">();</span>
</span><span class='line'>    <span class="c1">//here we also parse the attributes for the popups on the map</span>
</span><span class='line'>    <span class="nx">bldgLayer</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;featureparse&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">e</span><span class="p">.</span><span class="nx">layer</span><span class="p">.</span><span class="nx">setStyle</span><span class="p">({</span> <span class="nx">color</span><span class="o">:</span>  <span class="s1">&#39;#BDBDBD&#39;</span><span class="p">,</span> <span class="nx">weight</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">fill</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">fillColor</span><span class="o">:</span> <span class="s1">&#39;#EF6548&#39;</span><span class="p">,</span> <span class="nx">fillOpacity</span><span class="o">:</span> <span class="mf">0.85</span> <span class="p">});</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">label</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">properties</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="nx">amp</span><span class="p">;</span> <span class="nx">e</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">address</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">label</span> <span class="o">+=</span> <span class="s2">&quot;&amp;amp;lt;b&amp;amp;gt;Address:&amp;amp;lt;/b&amp;amp;gt;: &quot;</span> <span class="o">+</span> <span class="nx">e</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">address</span> <span class="o">+</span> <span class="s2">&quot;&amp;amp;lt;br/&amp;amp;gt;&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">properties</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="nx">amp</span><span class="p">;</span> <span class="nx">e</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">structure_</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">label</span> <span class="o">+=</span> <span class="s2">&quot;&amp;amp;lt;b&amp;amp;gt;Property Type:&amp;amp;lt;/b&amp;amp;gt;: &quot;</span> <span class="o">+</span> <span class="nx">e</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">structure_</span> <span class="o">+</span> <span class="s2">&quot;&amp;amp;lt;br/&amp;amp;gt;&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">properties</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="nx">amp</span><span class="p">;</span> <span class="nx">e</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">shape_area</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">label</span> <span class="o">+=</span> <span class="s2">&quot;&amp;amp;lt;b&amp;amp;gt;Square Footage:&amp;amp;lt;/b&amp;amp;gt;: &quot;</span> <span class="o">+</span> <span class="nx">e</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">shape_area</span> <span class="o">+</span> <span class="s2">&quot;&amp;amp;lt;br/&amp;amp;gt;&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">label</span> <span class="o">!=</span> <span class="s2">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>        <span class="nx">e</span><span class="p">.</span><span class="nx">layer</span><span class="p">.</span><span class="nx">bindPopup</span><span class="p">(</span><span class="nx">label</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">$</span><span class="p">.</span><span class="nx">getJSON</span><span class="p">(</span>
</span><span class='line'>        <span class="s2">&quot;http://geomusings.cartodb.com/api/v1/sql?q=SELECT%20*%20FROM%20leonardtown_bldgs&amp;amp;amp;format=geojson&amp;amp;amp;callback=?&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="kd">function</span><span class="p">(</span><span class="nx">geojson</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">geojson</span><span class="p">.</span><span class="nx">features</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">feature</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">bldgLayer</span><span class="p">.</span><span class="nx">addGeoJSON</span><span class="p">(</span><span class="nx">feature</span><span class="p">);</span>
</span><span class='line'>        <span class="p">})</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">map</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">bldgLayer</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><del datetime="2011-10-14T14:44:58+00:00">If you look closely, you'll notice the use of a proxy handler to get past the same origin restriction. This handler is written in .Net. I had been using a Python proxy but urllib2 was indicating header errors in the return from CartoDB so I fell back to this one. I'll dig into that more later.</del> (Thanks to <a href="http://twitter.com/jatorre">Javier de la Torre</a> for straightening me out with the use of a callback.) The above routine is basically the template for all the work in the app. Aside from the basemap tiles, the app loads the town boundary and the buildings from CartoDB. A similar funtion drives the query function, building and passing a WHERE clause to CartoDB. The image below shows the interface with query results in blue. The popups are performed by Leaflet.</p>

<div style="text-align: center;"><img alt="" class="size-full wp-image-2139" height="300" src="http://geobabble.files.wordpress.com/2011/10/propfinder.png" title="propfinder" width="590" /><div style="text-align: center; font-size: 14px">Selected buildings are shown in blue with popups to display the property details<br /></div></div>


<p>All told, this app took about 3 or so hours to build and deploy. This version doesn't actually make use of any spatial SQL yet but I'll add that soon. The live demo can be found here: <a href="http://demo.zekiah.com/propfinder/">http://demo.zekiah.com/propfinder/</a> (give the buildings a few seconds to load). It seems to work well in Firefox and Chrome and is functional, although clunky, in IE9. I haven't tried Safari or earlier versions of IE.</p>

<p>CartoDB is still in beta but already seems solid and is definitely powerful. As a hosted solution, there are associated costs but that's to be expected. I'll keep playing with it but it's already impressive.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Writing GeoJSON from SharpMap, Part 1.5]]></title>
    <link href="http://blog.geomusings.com/2009/01/09/Writing-GeoJSON-from-SharpMap-Part-1.5/"/>
    <updated>2009-01-09T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2009/01/09/Writing-GeoJSON-from-SharpMap-Part-1.5</id>
    <content type="html"><![CDATA[<p>Following up on my <a href="http://geobabble.wordpress.com/2008/09/25/writing-geojson-from-sharpmap-part-1/">post a few months back</a> about <a href="http://geojson.org/">GeoJSON</a> and <a href="http://www.codeplex.com/sharpmap">SharpMap</a>; here is the code to the converter as it stands so far. I have mentioned recently that things have been pretty busy at work so I have progressed on this more slowly than I had wished. I have yet to insert code to handle CRS but I thought it would be better to post something than nothing.</p>

<p>Basically, I just had to do some modifications to <a href="http://www.sharpgis.net">Morten's</a> original code for handling WKT. It was pretty straightforward owing mainly to the quality of Morten's code. So here it is. Enjoy...<!--more--></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
<span class='line-number'>419</span>
<span class='line-number'>420</span>
<span class='line-number'>421</span>
<span class='line-number'>422</span>
<span class='line-number'>423</span>
<span class='line-number'>424</span>
<span class='line-number'>425</span>
<span class='line-number'>426</span>
<span class='line-number'>427</span>
<span class='line-number'>428</span>
<span class='line-number'>429</span>
<span class='line-number'>430</span>
<span class='line-number'>431</span>
<span class='line-number'>432</span>
<span class='line-number'>433</span>
<span class='line-number'>434</span>
<span class='line-number'>435</span>
<span class='line-number'>436</span>
<span class='line-number'>437</span>
<span class='line-number'>438</span>
<span class='line-number'>439</span>
<span class='line-number'>440</span>
<span class='line-number'>441</span>
<span class='line-number'>442</span>
<span class='line-number'>443</span>
<span class='line-number'>444</span>
<span class='line-number'>445</span>
<span class='line-number'>446</span>
<span class='line-number'>447</span>
<span class='line-number'>448</span>
<span class='line-number'>449</span>
<span class='line-number'>450</span>
<span class='line-number'>451</span>
<span class='line-number'>452</span>
<span class='line-number'>453</span>
<span class='line-number'>454</span>
<span class='line-number'>455</span>
<span class='line-number'>456</span>
<span class='line-number'>457</span>
<span class='line-number'>458</span>
<span class='line-number'>459</span>
<span class='line-number'>460</span>
<span class='line-number'>461</span>
<span class='line-number'>462</span>
<span class='line-number'>463</span>
<span class='line-number'>464</span>
<span class='line-number'>465</span>
<span class='line-number'>466</span>
<span class='line-number'>467</span>
<span class='line-number'>468</span>
<span class='line-number'>469</span>
<span class='line-number'>470</span>
<span class='line-number'>471</span>
<span class='line-number'>472</span>
<span class='line-number'>473</span>
<span class='line-number'>474</span>
<span class='line-number'>475</span>
<span class='line-number'>476</span>
<span class='line-number'>477</span>
<span class='line-number'>478</span>
<span class='line-number'>479</span>
<span class='line-number'>480</span>
<span class='line-number'>481</span>
<span class='line-number'>482</span>
<span class='line-number'>483</span>
<span class='line-number'>484</span>
<span class='line-number'>485</span>
<span class='line-number'>486</span>
<span class='line-number'>487</span>
<span class='line-number'>488</span>
<span class='line-number'>489</span>
<span class='line-number'>490</span>
<span class='line-number'>491</span>
<span class='line-number'>492</span>
<span class='line-number'>493</span>
<span class='line-number'>494</span>
<span class='line-number'>495</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="c1">// Copyright 2008 - William Dollins</span>
</span><span class='line'><span class="c1">// GeometryToGeoJson converter by William Dollins (bill@zekiah.com / www.zekiah.com)</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// Date 2008-09-25</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// This file is part of SharpMap.</span>
</span><span class='line'><span class="c1">// SharpMap is free software; you can redistribute it and/or modify</span>
</span><span class='line'><span class="c1">// it under the terms of the GNU Lesser General Public License as published by</span>
</span><span class='line'><span class="c1">// the Free Software Foundation; either version 2 of the License, or</span>
</span><span class='line'><span class="c1">// (at your option) any later version.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// SharpMap is distributed in the hope that it will be useful,</span>
</span><span class='line'><span class="c1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
</span><span class='line'><span class="c1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
</span><span class='line'><span class="c1">// GNU Lesser General Public License for more details.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="c1">// You should have received a copy of the GNU Lesser General Public License</span>
</span><span class='line'><span class="c1">// along with SharpMap; if not, write to the Free Software</span>
</span><span class='line'><span class="c1">// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//SOURCECODE IS MODIFIED FROM ANOTHER WORK AND IS ORIGINALLY BASED ON THE</span>
</span><span class='line'><span class="c1">//GeometryToWKT class of SharpMap which was in turn was based on GeoTools.NET (see below):</span>
</span><span class='line'><span class="c1">// Copyright 2005, 2006 - Morten Nielsen (www.iter.dk)</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// This file is part of SharpMap.</span>
</span><span class='line'><span class="c1">// SharpMap is free software; you can redistribute it and/or modify</span>
</span><span class='line'><span class="c1">// it under the terms of the GNU Lesser General Public License as published by</span>
</span><span class='line'><span class="c1">// the Free Software Foundation; either version 2 of the License, or</span>
</span><span class='line'><span class="c1">// (at your option) any later version.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// SharpMap is distributed in the hope that it will be useful,</span>
</span><span class='line'><span class="c1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
</span><span class='line'><span class="c1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
</span><span class='line'><span class="c1">// GNU Lesser General Public License for more details.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="c1">// You should have received a copy of the GNU Lesser General Public License</span>
</span><span class='line'><span class="c1">// along with SharpMap; if not, write to the Free Software</span>
</span><span class='line'><span class="c1">// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="c1">// SOURCECODE IS MODIFIED FROM ANOTHER WORK AND IS ORIGINALLY BASED ON GeoTools.NET:</span>
</span><span class='line'><span class="p">/&lt;</span><span class="n">em</span><span class="p">&gt;</span>
</span><span class='line'> <span class="p">*</span>  <span class="n">Copyright</span> <span class="p">(</span><span class="n">C</span><span class="p">)</span> <span class="m">2002</span> <span class="n">Urban</span> <span class="n">Science</span> <span class="n">Applications</span><span class="p">,</span> <span class="n">Inc</span><span class="p">.</span>
</span><span class='line'> <span class="p">*</span>
</span><span class='line'> <span class="p">*</span>  <span class="n">This</span> <span class="n">library</span> <span class="k">is</span> <span class="n">free</span> <span class="n">software</span><span class="p">;</span> <span class="n">you</span> <span class="n">can</span> <span class="n">redistribute</span> <span class="n">it</span> <span class="n">and</span><span class="p">/</span><span class="n">or</span>
</span><span class='line'> <span class="p">*</span>  <span class="n">modify</span> <span class="n">it</span> <span class="n">under</span> <span class="n">the</span> <span class="n">terms</span> <span class="n">of</span> <span class="n">the</span> <span class="n">GNU</span> <span class="n">Lesser</span> <span class="n">General</span> <span class="n">Public</span>
</span><span class='line'> <span class="p">*</span>  <span class="n">License</span> <span class="k">as</span> <span class="n">published</span> <span class="n">by</span> <span class="n">the</span> <span class="n">Free</span> <span class="n">Software</span> <span class="n">Foundation</span><span class="p">;</span> <span class="n">either</span>
</span><span class='line'> <span class="p">*</span>  <span class="n">version</span> <span class="m">2.1</span> <span class="n">of</span> <span class="n">the</span> <span class="n">License</span><span class="p">,</span> <span class="n">or</span> <span class="p">(</span><span class="n">at</span> <span class="n">your</span> <span class="n">option</span><span class="p">)</span> <span class="n">any</span> <span class="n">later</span> <span class="n">version</span><span class="p">.</span>
</span><span class='line'> <span class="p">*</span>
</span><span class='line'> <span class="p">*</span>  <span class="n">This</span> <span class="n">library</span> <span class="k">is</span> <span class="n">distributed</span> <span class="k">in</span> <span class="n">the</span> <span class="n">hope</span> <span class="n">that</span> <span class="n">it</span> <span class="n">will</span> <span class="n">be</span> <span class="n">useful</span><span class="p">,</span>
</span><span class='line'> <span class="p">*</span>  <span class="n">but</span> <span class="n">WITHOUT</span> <span class="n">ANY</span> <span class="n">WARRANTY</span><span class="p">;</span> <span class="n">without</span> <span class="n">even</span> <span class="n">the</span> <span class="n">implied</span> <span class="n">warranty</span> <span class="n">of</span>
</span><span class='line'> <span class="p">*</span>  <span class="n">MERCHANTABILITY</span> <span class="n">or</span> <span class="n">FITNESS</span> <span class="n">FOR</span> <span class="n">A</span> <span class="n">PARTICULAR</span> <span class="n">PURPOSE</span><span class="p">.</span>  <span class="n">See</span> <span class="n">the</span> <span class="n">GNU</span>
</span><span class='line'> <span class="p">*</span>  <span class="n">Lesser</span> <span class="n">General</span> <span class="n">Public</span> <span class="n">License</span> <span class="k">for</span> <span class="n">more</span> <span class="n">details</span><span class="p">.</span>
</span><span class='line'> <span class="p">*</span>
</span><span class='line'> <span class="p">*</span>  <span class="n">You</span> <span class="n">should</span> <span class="n">have</span> <span class="n">received</span> <span class="n">a</span> <span class="n">copy</span> <span class="n">of</span> <span class="n">the</span> <span class="n">GNU</span> <span class="n">Lesser</span> <span class="n">General</span> <span class="n">Public</span>
</span><span class='line'> <span class="p">*</span>  <span class="n">License</span> <span class="n">along</span> <span class="n">with</span> <span class="k">this</span> <span class="n">library</span><span class="p">;</span> <span class="k">if</span> <span class="n">not</span><span class="p">,</span> <span class="n">write</span> <span class="n">to</span> <span class="n">the</span> <span class="n">Free</span> <span class="n">Software</span>
</span><span class='line'> <span class="p">*</span>  <span class="n">Foundation</span><span class="p">,</span> <span class="n">Inc</span><span class="p">.,</span> <span class="m">59</span> <span class="n">Temple</span> <span class="n">Place</span><span class="p">,</span> <span class="n">Suite</span> <span class="m">330</span><span class="p">,</span> <span class="n">Boston</span><span class="p">,</span> <span class="n">MA</span>  <span class="m">02111</span><span class="p">-</span><span class="m">1307</span>  <span class="n">USA</span>
</span><span class='line'> <span class="p">*</span>
</span><span class='line'> <span class="p">&lt;/</span><span class="n">em</span><span class="p">&gt;/&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">SharpMap.Geometries</span><span class="p">;&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="k">namespace</span> <span class="nn">SharpMap.Converters.GeoJson</span>
</span><span class='line'><span class="p">{&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="c1">/// </span>
</span><span class='line'><span class="c1">/// Outputs the GeoJSON representation of a  instance.</span>
</span><span class='line'><span class="c1">/// </span>
</span><span class='line'><span class="c1">/// </span>
</span><span class='line'><span class="c1">/// The GeoJSON representation of Geometry is designed to exchange geometry data in a form</span>
</span><span class='line'><span class="c1">/// sutiable for use my Javascript mapping clients that support GeoJSON, such as OpenLayers.</span>
</span><span class='line'><span class="c1">/// Examples of GeoJSON representations of geometry objects can be found in the comments for individual</span>
</span><span class='line'><span class="c1">/// conversion routines. These examples are originally from the geojson.org site and were used for testing.</span>
</span><span class='line'><span class="c1">/// </span>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">GeometryToGeoJson</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="cp">#region Methods</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a Geometry to GeoJSON representation.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// A Geometry to write.</span>
</span><span class='line'>    <span class="c1">/// A GeoJSON geometry string (see the GeoJSON</span>
</span><span class='line'>    <span class="c1">/// Specification)</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="kt">string</span> <span class="nf">Write</span><span class="p">(</span><span class="n">IGeometry</span> <span class="n">geometry</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">StringWriter</span> <span class="n">sw</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StringWriter</span><span class="p">();</span>
</span><span class='line'>        <span class="n">Write</span><span class="p">(</span><span class="n">geometry</span><span class="p">,</span> <span class="n">sw</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">sw</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a Geometry to its GeoJSON representation.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// A geometry to process.</span>
</span><span class='line'>    <span class="c1">/// Stream to write out the geometry&#39;s text representation.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Geometry is written to the output stream as a GeoJSON geometry string (see the GeoJSON</span>
</span><span class='line'>    <span class="c1">/// Specification).</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">Write</span><span class="p">(</span><span class="n">IGeometry</span> <span class="n">geometry</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">AppendGeometryTaggedText</span><span class="p">(</span><span class="n">geometry</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a Geometry to GeoJSON format, then Appends it to the writer.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The Geometry to process.</span>
</span><span class='line'>    <span class="c1">/// The output stream to Append to.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendGeometryTaggedText</span><span class="p">(</span><span class="n">IGeometry</span> <span class="n">geometry</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">geometry</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">NullReferenceException</span><span class="p">(</span><span class="s">&quot;Cannot write GeoJSON: geometry was null&quot;</span><span class="p">);</span> <span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">geometry</span> <span class="k">is</span> <span class="n">Point</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">Point</span> <span class="n">point</span> <span class="p">=</span> <span class="n">geometry</span> <span class="k">as</span> <span class="n">Point</span><span class="p">;</span>
</span><span class='line'>            <span class="n">AppendPointTaggedText</span><span class="p">(</span><span class="n">point</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">geometry</span> <span class="k">is</span> <span class="n">LineString</span><span class="p">)</span>
</span><span class='line'>            <span class="n">AppendLineStringTaggedText</span><span class="p">(</span><span class="n">geometry</span> <span class="k">as</span> <span class="n">LineString</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">geometry</span> <span class="k">is</span> <span class="n">Polygon</span><span class="p">)</span>
</span><span class='line'>            <span class="n">AppendPolygonTaggedText</span><span class="p">(</span><span class="n">geometry</span> <span class="k">as</span> <span class="n">Polygon</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">geometry</span> <span class="k">is</span> <span class="n">MultiPoint</span><span class="p">)</span>
</span><span class='line'>            <span class="n">AppendMultiPointTaggedText</span><span class="p">(</span><span class="n">geometry</span> <span class="k">as</span> <span class="n">MultiPoint</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">geometry</span> <span class="k">is</span> <span class="n">MultiLineString</span><span class="p">)</span>
</span><span class='line'>            <span class="n">AppendMultiLineStringTaggedText</span><span class="p">(</span><span class="n">geometry</span> <span class="k">as</span> <span class="n">MultiLineString</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">geometry</span> <span class="k">is</span> <span class="n">MultiPolygon</span><span class="p">)</span>
</span><span class='line'>            <span class="n">AppendMultiPolygonTaggedText</span><span class="p">(</span><span class="n">geometry</span> <span class="k">as</span> <span class="n">MultiPolygon</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">geometry</span> <span class="k">is</span> <span class="n">GeometryCollection</span><span class="p">)</span>
</span><span class='line'>            <span class="n">AppendGeometryCollectionTaggedText</span><span class="p">(</span><span class="n">geometry</span> <span class="k">as</span> <span class="n">GeometryCollection</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">NotSupportedException</span><span class="p">(</span><span class="s">&quot;Unsupported Geometry implementation:&quot;</span> <span class="p">+</span> <span class="n">geometry</span><span class="p">.</span><span class="n">GetType</span><span class="p">().</span><span class="n">Name</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a Coordinate to GeoJSON point format,</span>
</span><span class='line'>    <span class="c1">/// then Appends it to the writer.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// the &amp;lt;code&amp;gt;Coordinate&amp;lt;/code&amp;gt; to process</span>
</span><span class='line'>    <span class="c1">/// the output writer to Append to</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendPointTaggedText</span><span class="p">(</span><span class="n">Point</span> <span class="n">coordinate</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\&quot;type\&quot;: \&quot;Point\&quot;,&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;\&quot;coordinates\&quot;: &quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">AppendPointText</span><span class="p">(</span><span class="n">coordinate</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a LineString to GeoJSON LineString format, </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The LineString to process.</span>
</span><span class='line'>    <span class="c1">/// The output stream writer to Append to.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendLineStringTaggedText</span><span class="p">(</span><span class="n">LineString</span> <span class="n">lineString</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\&quot;type\&quot;: \&quot;LineString\&quot;,&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\&quot;coordinates\&quot;: &quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">AppendLineStringText</span><span class="p">(</span><span class="n">lineString</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">//writer.WriteLine(&quot;]&quot;);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">///  Converts a Polygon to GeoJSON Polygon format,</span>
</span><span class='line'>    <span class="c1">///  then Appends it to the writer.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Th Polygon to process.</span>
</span><span class='line'>    <span class="c1">/// The stream writer to Append to.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendPolygonTaggedText</span><span class="p">(</span><span class="n">Polygon</span> <span class="n">polygon</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>    <span class="c1">//{</span>
</span><span class='line'>    <span class="c1">//   &quot;type&quot;: &quot;Polygon&quot;,</span>
</span><span class='line'>    <span class="c1">//   &quot;coordinates&quot;: [</span>
</span><span class='line'>    <span class="c1">//       [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0] ]</span>
</span><span class='line'>    <span class="c1">//   ]</span>
</span><span class='line'>    <span class="c1">//}</span>
</span><span class='line'>    <span class="c1">// with holes (inner rings)</span>
</span><span class='line'>    <span class="c1">//{</span>
</span><span class='line'>    <span class="c1">//   &quot;type&quot;: &quot;Polygon&quot;,</span>
</span><span class='line'>    <span class="c1">//   &quot;coordinates&quot;: [</span>
</span><span class='line'>    <span class="c1">//       [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0] ],</span>
</span><span class='line'>    <span class="c1">//       [ [100.2, 0.2], [100.8, 0.2], [100.8, 0.8], [100.2, 0.8], [100.2, 0.2] ]</span>
</span><span class='line'>    <span class="c1">//   ]</span>
</span><span class='line'>    <span class="c1">//}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//{</span>
</span><span class='line'>    <span class="c1">//&quot;type&quot;: &quot;Polygon&quot;,</span>
</span><span class='line'>    <span class="c1">//&quot;coordinates&quot;: </span>
</span><span class='line'>    <span class="c1">//[ [[[0, 0], [10, 0], [10, 10], [0, 10], [0, 0]], [[5, 5], [7, 5], [7, 7], [5, 7], [5, 5]]] ]</span>
</span><span class='line'>    <span class="c1">//}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\&quot;type\&quot;: \&quot;Polygon\&quot;,&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\&quot;coordinates\&quot;: &quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">//writer.Write(&quot;[ &quot;);</span>
</span><span class='line'>        <span class="n">AppendPolygonText</span><span class="p">(</span><span class="n">polygon</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">//writer.WriteLine(&quot; ]&quot;);</span>
</span><span class='line'>        <span class="c1">//writer.WriteLine(&quot;]&quot;);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a MultiPoint to &amp;amp;lt;MultiPoint Tagged Text&amp;amp;gt;</span>
</span><span class='line'>    <span class="c1">/// format, then Appends it to the writer.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The MultiPoint to process.</span>
</span><span class='line'>    <span class="c1">/// The output writer to Append to.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendMultiPointTaggedText</span><span class="p">(</span><span class="n">MultiPoint</span> <span class="n">multipoint</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>    <span class="c1">//{</span>
</span><span class='line'>    <span class="c1">//   &quot;type&quot;: &quot;MultiPoint&quot;,</span>
</span><span class='line'>    <span class="c1">//   &quot;coordinates&quot;: [</span>
</span><span class='line'>    <span class="c1">//       [100.0, 0.0], [101.0, 1.0]</span>
</span><span class='line'>    <span class="c1">//   ]</span>
</span><span class='line'>    <span class="c1">//}</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\&quot;type\&quot;: \&quot;MultiPoint\&quot;,&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\&quot;coordinates\&quot;: &quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">AppendMultiPointText</span><span class="p">(</span><span class="n">multipoint</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a MultiLineString to &amp;amp;lt;MultiLineString Tagged</span>
</span><span class='line'>    <span class="c1">/// Text&amp;amp;gt; format, then Appends it to the writer.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The MultiLineString to process</span>
</span><span class='line'>    <span class="c1">/// The output stream writer to Append to.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendMultiLineStringTaggedText</span><span class="p">(</span><span class="n">MultiLineString</span> <span class="n">multiLineString</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>    <span class="c1">//{</span>
</span><span class='line'>    <span class="c1">//   &quot;type&quot;: &quot;MultiLineString&quot;,</span>
</span><span class='line'>    <span class="c1">//   &quot;coordinates&quot;: [</span>
</span><span class='line'>    <span class="c1">//       [ [100.0, 0.0], [101.0, 1.0] ],</span>
</span><span class='line'>    <span class="c1">//       [ [102.0, 2.0], [103.0, 3.0] ]</span>
</span><span class='line'>    <span class="c1">//   ]</span>
</span><span class='line'>    <span class="c1">//}</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\&quot;type\&quot;: \&quot;MultiLineString\&quot;,&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\&quot;coordinates\&quot;: &quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">AppendMultiLineStringText</span><span class="p">(</span><span class="n">multiLineString</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a MultiPolygon to &amp;amp;lt;MultiPolygon Tagged</span>
</span><span class='line'>    <span class="c1">/// Text&amp;amp;gt; format, then Appends it to the writer.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The MultiPolygon to process</span>
</span><span class='line'>    <span class="c1">/// The output stream writer to Append to.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendMultiPolygonTaggedText</span><span class="p">(</span><span class="n">MultiPolygon</span> <span class="n">multiPolygon</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>    <span class="c1">//{</span>
</span><span class='line'>    <span class="c1">//   &quot;type&quot;: &quot;MultiPolygon&quot;,</span>
</span><span class='line'>    <span class="c1">//   &quot;coordinates&quot;: [</span>
</span><span class='line'>    <span class="c1">//       [</span>
</span><span class='line'>    <span class="c1">//           [ [102.0, 2.0], [103.0, 2.0], [103.0, 3.0], [102.0, 3.0], [102.0, 2.0] ]</span>
</span><span class='line'>    <span class="c1">//       ],</span>
</span><span class='line'>    <span class="c1">//       [</span>
</span><span class='line'>    <span class="c1">//           [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0] ],</span>
</span><span class='line'>    <span class="c1">//           [ [100.2, 0.2], [100.8, 0.2], [100.8, 0.8], [100.2, 0.8], [100.2, 0.2] ]</span>
</span><span class='line'>    <span class="c1">//       ]</span>
</span><span class='line'>    <span class="c1">//   ]</span>
</span><span class='line'>    <span class="c1">//}</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\&quot;type\&quot;: \&quot;MultiPolygon\&quot;,&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\&quot;coordinates\&quot;: &quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">AppendMultiPolygonText</span><span class="p">(</span><span class="n">multiPolygon</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a GeometryCollection to &amp;amp;lt;GeometryCollection Tagged</span>
</span><span class='line'>    <span class="c1">/// Text&amp;amp;gt; format, then Appends it to the writer.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The GeometryCollection to process</span>
</span><span class='line'>    <span class="c1">/// The output stream writer to Append to.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendGeometryCollectionTaggedText</span><span class="p">(</span><span class="n">GeometryCollection</span> <span class="n">geometryCollection</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>    <span class="c1">//{</span>
</span><span class='line'>    <span class="c1">//   &quot;type&quot;: &quot;GeometryCollection&quot;,</span>
</span><span class='line'>    <span class="c1">//   &quot;members&quot;: [</span>
</span><span class='line'>    <span class="c1">//       {</span>
</span><span class='line'>    <span class="c1">//           &quot;type&quot;: &quot;Point&quot;,</span>
</span><span class='line'>    <span class="c1">//           &quot;coordinates&quot;: [100.0, 0.0]</span>
</span><span class='line'>    <span class="c1">//       },</span>
</span><span class='line'>    <span class="c1">//       {</span>
</span><span class='line'>    <span class="c1">//           &quot;type&quot;: &quot;LineString&quot;,</span>
</span><span class='line'>    <span class="c1">//           &quot;coordinates&quot;: [</span>
</span><span class='line'>    <span class="c1">//               [101.0, 0.0], [102.0, 1.0]</span>
</span><span class='line'>    <span class="c1">//           ]</span>
</span><span class='line'>    <span class="c1">//       }</span>
</span><span class='line'>    <span class="c1">//   ]</span>
</span><span class='line'>    <span class="c1">//}</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\&quot;type\&quot;: \&quot;GeometryCollection\&quot;,&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\&quot;geometries\&quot;: &quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">AppendGeometryCollectionText</span><span class="p">(</span><span class="n">geometryCollection</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>        <span class="n">writer</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a Coordinate to Point Text format then Appends it to the writer.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The Coordinate to process.</span>
</span><span class='line'>    <span class="c1">/// The output stream writer to Append to.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendPointText</span><span class="p">(</span><span class="n">Point</span> <span class="n">coordinate</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">coordinate</span> <span class="p">==</span> <span class="k">null</span> <span class="p">||</span> <span class="n">coordinate</span><span class="p">.</span><span class="n">IsEmpty</span><span class="p">())</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;EMPTY&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;[&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="n">AppendCoordinate</span><span class="p">(</span><span class="n">coordinate</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;]&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a Coordinate to &amp;amp;lt;Point&amp;amp;gt; format, then Appends</span>
</span><span class='line'>    <span class="c1">/// it to the writer. </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The Coordinate to process.</span>
</span><span class='line'>    <span class="c1">/// The output writer to Append to.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendCoordinate</span><span class="p">(</span><span class="n">Point</span> <span class="n">coordinate</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kt">uint</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">coordinate</span><span class="p">.</span><span class="n">NumOrdinates</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="n">WriteNumber</span><span class="p">(</span><span class="n">coordinate</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="p">+</span> <span class="p">(</span><span class="n">i</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">coordinate</span><span class="p">.</span><span class="n">NumOrdinates</span> <span class="p">-</span> <span class="m">1</span> <span class="p">?</span> <span class="s">&quot;, &quot;</span> <span class="p">:</span> <span class="s">&quot;&quot;</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a double to a string, not in scientific notation.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The double to convert.</span>
</span><span class='line'>    <span class="c1">/// The double as a string, not in scientific notation.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="nf">WriteNumber</span><span class="p">(</span><span class="kt">double</span> <span class="n">d</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">d</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">SharpMap</span><span class="p">.</span><span class="n">Map</span><span class="p">.</span><span class="n">numberFormat_EnUS</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a LineString to &amp;amp;lt;LineString Text&amp;amp;gt; format, then</span>
</span><span class='line'>    <span class="c1">/// Appends it to the writer.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The LineString to process.</span>
</span><span class='line'>    <span class="c1">/// The output stream to Append to.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendLineStringText</span><span class="p">(</span><span class="n">LineString</span> <span class="n">lineString</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">lineString</span> <span class="p">==</span> <span class="k">null</span> <span class="p">||</span> <span class="n">lineString</span><span class="p">.</span><span class="n">IsEmpty</span><span class="p">())</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;EMPTY&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;[&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">lineString</span><span class="p">.</span><span class="n">NumPoints</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;, &quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;[&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="n">AppendCoordinate</span><span class="p">(</span><span class="n">lineString</span><span class="p">.</span><span class="n">Vertices</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>                <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;]&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;]&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a Polygon to &amp;amp;lt;Polygon Text&amp;amp;gt; format, then</span>
</span><span class='line'>    <span class="c1">/// Appends it to the writer.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The Polygon to process.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendPolygonText</span><span class="p">(</span><span class="n">Polygon</span> <span class="n">polygon</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">polygon</span> <span class="p">==</span> <span class="k">null</span> <span class="p">||</span> <span class="n">polygon</span><span class="p">.</span><span class="n">IsEmpty</span><span class="p">())</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;EMPTY&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;[&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="n">AppendLineStringText</span><span class="p">(</span><span class="n">polygon</span><span class="p">.</span><span class="n">ExteriorRing</span><span class="p">,</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">polygon</span><span class="p">.</span><span class="n">InteriorRings</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;, &quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="n">AppendLineStringText</span><span class="p">(</span><span class="n">polygon</span><span class="p">.</span><span class="n">InteriorRings</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;]&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a MultiPoint to &amp;amp;lt;MultiPoint Text&amp;amp;gt; format, then</span>
</span><span class='line'>    <span class="c1">/// Appends it to the writer.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The MultiPoint to process.</span>
</span><span class='line'>    <span class="c1">/// The output stream writer to Append to.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendMultiPointText</span><span class="p">(</span><span class="n">MultiPoint</span> <span class="n">multiPoint</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">multiPoint</span> <span class="p">==</span> <span class="k">null</span> <span class="p">||</span> <span class="n">multiPoint</span><span class="p">.</span><span class="n">IsEmpty</span><span class="p">())</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;EMPTY&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;[&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">multiPoint</span><span class="p">.</span><span class="n">Points</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;, &quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;[&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="n">AppendCoordinate</span><span class="p">(</span><span class="n">multiPoint</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>                <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;]&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;]&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a MultiLineString to &amp;amp;lt;MultiLineString Text&amp;amp;gt;</span>
</span><span class='line'>    <span class="c1">/// format, then Appends it to the writer.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The MultiLineString to process.</span>
</span><span class='line'>    <span class="c1">/// The output stream writer to Append to.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendMultiLineStringText</span><span class="p">(</span><span class="n">MultiLineString</span> <span class="n">multiLineString</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">multiLineString</span> <span class="p">==</span> <span class="k">null</span> <span class="p">||</span> <span class="n">multiLineString</span><span class="p">.</span><span class="n">IsEmpty</span><span class="p">())</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;EMPTY&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;[&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">multiLineString</span><span class="p">.</span><span class="n">LineStrings</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;, &quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="n">AppendLineStringText</span><span class="p">(</span><span class="n">multiLineString</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;]&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a MultiPolygon to &amp;amp;lt;MultiPolygon Text&amp;amp;gt; format, then Appends to it to the writer.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The MultiPolygon to process.</span>
</span><span class='line'>    <span class="c1">/// The output stream to Append to.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendMultiPolygonText</span><span class="p">(</span><span class="n">MultiPolygon</span> <span class="n">multiPolygon</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">multiPolygon</span> <span class="p">==</span> <span class="k">null</span> <span class="p">||</span> <span class="n">multiPolygon</span><span class="p">.</span><span class="n">IsEmpty</span><span class="p">())</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;EMPTY&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;[&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">multiPolygon</span><span class="p">.</span><span class="n">Polygons</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;, &quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="n">AppendPolygonText</span><span class="p">(</span><span class="n">multiPolygon</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;]&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Converts a GeometryCollection to &amp;amp;lt;GeometryCollection Text &amp;amp;gt; format, then Appends it to the writer.</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// The GeometryCollection to process.</span>
</span><span class='line'>    <span class="c1">/// The output stream writer to Append to.</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendGeometryCollectionText</span><span class="p">(</span><span class="n">GeometryCollection</span> <span class="n">geometryCollection</span><span class="p">,</span> <span class="n">StringWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">geometryCollection</span> <span class="p">==</span> <span class="k">null</span> <span class="p">||</span> <span class="n">geometryCollection</span><span class="p">.</span><span class="n">IsEmpty</span><span class="p">())</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;EMPTY&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;[&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">geometryCollection</span><span class="p">.</span><span class="n">Collection</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;, &quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="n">AppendGeometryTaggedText</span><span class="p">(</span><span class="n">geometryCollection</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">writer</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;]&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cp">#endregion</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Writing GeoJSON from SharpMap, Part 1]]></title>
    <link href="http://blog.geomusings.com/2008/09/25/Writing-GeoJSON-from-SharpMap-Part-1/"/>
    <updated>2008-09-25T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2008/09/25/Writing-GeoJSON-from-SharpMap-Part-1</id>
    <content type="html"><![CDATA[<p>In between proposals, white papers and the like, I?ve been able to do a little coding to keep myself sane. Recently, I have been playing with <a href="http://www.codeplex.com/sharpmap">SharpMap</a>, <a href="http://wiki.geojson.org/Main_Page">GeoJSON</a> and <a href="http://openlayers.org">OpenLayers</a>. But not necessarily in that order. Originally, I was looking over the GeoJSON spec to get more of a feel for it and decided that it would be fun (I know) to write an exporter for SharpMap. There is already a converter to write SharpMap geometries as WKT so I went ahead and built another one to convert to GeoJSON. In order to test it, I decided to use OpenLayers.<!--more--></p>

<p>Developing the exporter was pretty straightforward. I used the SharpMap.Converters.WellKnownText.GeometryToWKT class as a template. I created a GeoJson namespace and put a GeometryToGeoJson class in it. I then set about replacing the logic in the WKT with logic that generates GeoJSON. This should result in a class that behaves in the same way as its WKT counterpart but emits GeoJSON instead.</p>

<p>At this point, I am only dealing with geometry and geometry collections. I plan to move on to exporting feature collections in the near future. Also, I still need to persist the CRS information into the GeoJSON output.</p>

<p><strong>Step 1: Building the GeoJSON Writer</strong></p>

<p>As I mentioned, building the converter was pretty straightforward. I really just had to modify the logic of the existing WKT writer. I based the output on GeoJSON 1.0 RC1. The writer currently outputs points, linestrings, polygons, the various ?multi? flavors of those and geometry collections. As mentioned above, I haven?t gotten to features or CRS information yet.</p>

<p><strong>Step 2: Testing the Output</strong></p>

<p>I used the <a href="http://openlayers.org/dev/examples/vector-formats.html">OpenLayers ?Vector Formats? example</a> as a testbed. I built a simple WinForms GUI in which I could paste a WKT string, convert that to a SharpMap geometry and then write out GeoJSON from that. I then pasted the output into the OpenLayers demo and tried to render it. That process validated the outputs for each of the geometry types pretty quickly.</p>

<div style="text-align: center;"><a href="http://geobabble.files.wordpress.com/2008/09/sharpmap_geojson_bootstarp.png"><img alt="A lovely test GUI..." class="size-medium wp-image-324" height="144" src="http://geobabble.files.wordpress.com/2008/09/sharpmap_geojson_bootstarp.png" title="sharpmap_geojson_bootstarp" width="230" /></a><div style="text-align: center;font-size: 14px;">A lovely test GUI...</div></div>


<p><strong>Step 3: Generate Output From a Data Set</strong></p>

<p>Next, I modified the <a href="http://openlayers.org/dev/examples/geojson.html">existing OpenLayers GeoJSON demo </a> to make a call back to a server to retrieve GeoJSON from a SharpMap application. The existing demo has a GeoJSON string hard-coded into the JavaScript. I merely replaced this with an AJAX call that retrieves it from the server.</p>

<p>Next, I built an ASP.NET handler (thanks <a href="http://twitter.com/TheSteve0">@TheSteve0</a>) to receive the call from the client, access the data (PostGIS in this case, served from that data I?ve been using for my ArcSDE work), write the geometries into a GeoJSON geometry collection and return it back to the client. Currently, the client passes a query string to tell the server what data is being requested. I plan to implement that in a RESTful manner in a future iteration but this works for now.</p>

<p><strong>Step 4: Running the Code and Displaying the Data</strong></p>

<p>I changed the OpenLayers demo page only minimally to make a call to retrieve the GeoJSON. I implemented an asynchronous call so the basemap would display without waiting for the GeoJSON data to come back. The data set I used contained 408 military installation polygons stored in PostGIS. SharpMap seems to persist the data fairly quickly but it bogged down on the client side on my first run. In both IE and FireFox, the browser would hang and eventually display a message that a script was causing the browser to run slowly. In each case, I had to terminate the script.</p>

<div style="text-align: center;"><a href="http://geobabble.files.wordpress.com/2008/09/sharpmap_geojson_output.png"><img alt="The orange blobs with the outlines are mine." class="size-medium wp-image-324" height="255" src="http://geobabble.files.wordpress.com/2008/09/sharpmap_geojson_output.png?w=300" title="sharpmap_geojson_output" width="300" /></a><div style="text-align: center;font-size: 14px;">The orange blobs with the outlines are mine.</div></div>


<p>On my second pass, I throttled the server-side code back to return only the first ten records. In this case, it returned and displayed almost instantaneously. There were my installation polygons!</p>

<p>On each successive pass, I increased the number of polygons and the client side slowed down down accordingly. Somewhere around 300 polygons, it ground to a halt. I put an alert box in before this call in the client-side javascript:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">vector_layer</span><span class="p">.</span><span class="nx">addFeatures</span><span class="p">(</span><span class="nx">geojson_format</span><span class="p">.</span><span class="nx">read</span><span class="p">(</span><span class="nx">gj</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>That alert always displays very quickly so there seems to be something inefficient about the geojson_format.read call. <del datetime="00">I?d dig into that more but I upgraded to FireFox 3, which has my FireBug broken (grrrrr).</del> I?ll look into that more later (I have the additional problem of being javascript-challenged). Anyway, OpenLayers was more of a visualization tool for the SharpMap effort so I?m less concerned with that issue at the moment.</p>

<p>As the title of the post implies, I?ll circle back around and update things as I progress. I need to clean up the code for the writer (all of the comments are still the ones from the WKT writer). Additionally, I need to now look at extending to write features, not just geometry. I also want to make the server-side app RESTful. Eventually, I?ll also deploy the app to a demo location where anyone can hit it. As you can see, I have my work cut out for me.</p>

<p>BTW, here are the versions involved on this pass:
OpenLayers: 2.6
SharpMap: 0.9 build 34320
Visual Studio: 2008
PostGIS: 1.3.3</p>
]]></content>
  </entry>
  
</feed>
