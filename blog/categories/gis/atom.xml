<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: GIS | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/gis/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2013-02-28T06:40:24-05:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Arc2Earth: Choose Your 'Cloud']]></title>
    <link href="http://blog.geomusings.com/2013/02/28/arc2earth-choose-your-cloud/"/>
    <updated>2013-02-28T06:22:00-05:00</updated>
    <id>http://blog.geomusings.com/2013/02/28/arc2earth-choose-your-cloud</id>
    <content type="html"><![CDATA[<p>For various reasons, I can't attend today's inaugural <a href="http://fedgeoday.com/">FedGeoDay</a> at the Woolly Mammoth Theatre in Washington, DC, though I'll be watching the hashtag with great interest. Jack Flood of <a href="http://www.arc2earth.com/">Arc2Earth</a>, however, has already posted his slides to SlideShare:</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/16811994" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen webkitallowfullscreen mozallowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="http://www.slideshare.net/jflood3/fedgeodays-022013" title="Fedgeodays 022013" target="_blank">Fedgeodays 022013</a> </strong> from <strong><a href="http://www.slideshare.net/jflood3" target="_blank">Jack Flood</a></strong> </div></p>

<!--more-->


<p>While neither <a href="http://www.esri.com">ArcMap</a> nor Arc2Earth are open-source themselves, Jack points out that Arc2Earth acts as a bridge between ArcMap and several geospatial hosting platforms that are built on open-source technology but, also just as important, are successful at making data more openly available. These platforms include <a href="http://cartodb.com/">CartoDB</a> and <a href="http://mapbox.com/">MapBox</a>, among many others.</p>

<p>Many people use, and prerfer, ArcMap has their desktop cartography and analysis tool. I view Arc2Earth as an enabling technology that allows users to continue to be productive with ArcMap while also allowing them to retain control of they direct their GIS investments in terms of publishing and hosting their maps and data.</p>

<p>Disclaimer: <a href="http://www.zekiah.com">My company</a> is an Arc2Earth reseller.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yes, You Need to Code]]></title>
    <link href="http://blog.geomusings.com/2013/01/30/yes-you-need-to-code/"/>
    <updated>2013-01-30T14:26:00-05:00</updated>
    <id>http://blog.geomusings.com/2013/01/30/yes-you-need-to-code</id>
    <content type="html"><![CDATA[<p>Over the past year, I've been involved in searching for GIS analysts a number of times. As a result, I've noticed a few patterns:</p>

<ol>
<li>There are a lot of analysts out there looking for jobs. Every time I run an ad, I get at least 100 resumes from people of various levels of experience and education.</li>
<li>The vast majority of those that I call to pre-screen have not done any meaningful coding of any kind. This includes Python, which has been shipping with ArcGIS for several versions now.</li>
<li>Of those that do have some coding experience, many do not show it on their resumes. I find this particularly interesting as I can't imagine why a person would choose not to list all relevant skills or experience.</li>
</ol>


<p>I am very publicly on the record that I think some form of coding skill is essential for any GIS analyst entering the workforce today. My reasoning here is fairly straightforward.</p>

<ol>
<li>The "IS" in "GIS" stands for "information system." This means "computers." Actually, according to one of my professors in the late '80s, an information system doesn't technically have to involve computers but this is 2013 and even brewing a cup of coffee involves a computer.</li>
<li>The "G" in "GIS" stands for "geography." (Don't worry, the revelations will keep coming.) Geography is intensely mathematical. I suppose, in the interest of accuracy, I should state that some segments of geography are less mathematical than others but I think it's safe to say that the elements of the science that are addressed by GIS involve a lot of math. Take, for instance, coordinate reference systems. That one small but important part of geography can separate the wheat from the chaff quickly.</li>
<li>Computers use code to do math.</li>
</ol>


<p>Modern GIS software is complicated and comes with a lot of capability by default. Just look at the default UI for ArcMap or QGIS and you'll see a lot of tools at your fingertips. In other words, there are a lot of buttons to push. This is fine but I'd wager that these software tools expose less than 10% of their full capability through their default interfaces.</p>

<!--more-->


<p>The reason for that is that there are simply too many use cases in geography to design into a piece of software by default. That is why these tools, and most other GIS software, ship with APIs. ("Ship" is a loose concept with open-source but please grant me license.) These APIs expose the full capability of the software so that users may customize it to their needs. That means coding. For both <a href="http://www.esri.com">ArcGIS</a> and <a href="http://qgis.org">QGIS</a>, that can mean Python but there are lots of other choices as well.</p>

<div style="text-align:center;">
<img src="http://blog.geomusings.com/images/posts/globalmaptiles.png" />
</div>


<br/><br/>


<p>If you choose to get by with just using the GUI tools, you are doing yourself two disservices:</p>

<ol>
<li>You are placing yourself at the mercy of others who can code to get around to building the customizations you need.</li>
<li>You are allowing your skills to erode by not using a significant amount of capability.</li>
</ol>


<p>So you need to code to some extent. You need to in order to automate complicated tasks you do regularly, or read in data that's in some oddball format, or use some capability of your GIS-du-jour that isn't exposed out of the box, or to make that web map sing, or for any of a number of other reasons. Luckily, you have a wealth of information at your fingertips. It is called open-source geospatial software. I can already hear the protests: You learned on ArcGIS in school. You are comfortable with ArcGIS and you like it. Fine, keep using it.</p>

<p>But while you're using ArcGIS, also check out the source code for open-source libraries like <a href="https://github.com/sgillies/shapely">Shapely</a> or <a href="http://trac.osgeo.org/geos/">GEOS</a> or <a href="http://www.gdal.org/">GDAL</a> or other commonly used (even under the hood of ArcGIS) tools. You learned the math in school. You toughed out these concepts and you understand them. Now look at the compiled knowledge of a lot of smart programmers to see how the concepts are concretely implemented in code. The process will, at a minimum, make you a better ArcGIS user because you'll understand what's going on under the hood. The truth is, even if ArcGIS isn't directly using one of those open-source libraries, it's probably using an ESRI-developed implementation of a standard algorithm. It's similar enough that you'll be able to understand the behavior and that will help you better bind your own customizations to their closed-source API.</p>

<p>I say this because it worked for me. I am a programmer by training and passion. I heard the phrase "GIS" once, in passing, during a lecture in college. Yet, my first job was in the GIS field. Needless to say, I had a lot of learning to do. Most of it came at the hands of some very patient geographers. The first tools I was exposed to were the proprietary tools of MapInfo and ESRI (with a smattering of Intergraph). I was able to soak in what the geographers were telling me and bang against those APIs to build some useful tools but the light bulb really came on for me when I began reading the source code of open-source projects. There, laid out before me, was what the software was <em>really</em> doing.</p>

<p>Today, I work with a mixture of open-source and proprietary tools but the majority of my paying work is still in the Esri realm. My exposure to open-source has, however, made me better with it because it has deepened my understanding.</p>

<p>Not everyone can be a professional software developer as it takes a certain mindset to do it all of the time. But, in the GIS market of 2013, everyone needs to have some understanding of some kind of coding, whether <a href="http://python.org/">Python</a> or <a href="http://www.r-project.org/">R</a> or <a href="http://d3js.org/">Javascript</a> or something else.</p>

<p>One other side note: Over the past year, I have also advertised for software developers with results that are opposite of what I see with analysts. There are very few applicants and many that I see have been out of work for a while, have no GIS background and spent a lot of years working with older tools. These are "blue bird" applicants hoping to catch on. In short, there is a gulf between the high demand for GIS-literate programmers and the miniscule supply. Having the ability to code, and showing it on your resume, can be what separates you from the pack of 100 other analysts applying for the same position.</p>

<p>So, yes, you need to code.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[js.geo Day One]]></title>
    <link href="http://blog.geomusings.com/2013/01/14/js-dot-geo-day-one/"/>
    <updated>2013-01-14T18:04:00-05:00</updated>
    <id>http://blog.geomusings.com/2013/01/14/js-dot-geo-day-one</id>
    <content type="html"><![CDATA[<p>Yesterday, I attended the <a href="http://geojs.eventbrite.com/">JS.geo</a> conference at the Colorado University Denver campus. It looked like about 100 or so came out for the event. I was able to catch up with <a href="http://twitter.com/cwhelm">Chris Helm</a> and <a href="http://twitter.com/briantimoney">Brian Timoney</a> the night before and they told me the event took off faster than they had originally expected. I think this speaks to two things: 1) the level of interest in Javascript as a solution for geospatial applications and 2) the fast pace of innovation in the Javascript community that has a lot of people looking for ways to stay abreast of the latest developments.</p>

<p>What follows is an overview based on some of the notes I took. I wasn't always writing as I sometimes just stopped to listen and I'll probably follow up with more details later.</p>

<div style="text-align:center;"><img src="http://blog.geomusings.com/images/posts/jsgeo13.png" /></div>


<p>Data reduction was strong current running under the day. With the rise of newer libraries that enable more sophisticated capabilities in the browser, there is increased recognition of the need to reduce the amount of data passing over the wire. For geometry, <a href="https://github.com/mbostock/topojson">TopoJSON</a> is getting a lot of attention here. It delivers topologically correct data which reduces data by removing redundant geometry such coincident arcs between polygons and such. The output reminds me of an old <a href="http://www.gdal.org/ogr/drv_avcbin.html">ARC/INFO coverage</a> and is providing stunning results in reducing the size of geometries when compared to <a href="http://geojson.org">GeoJSON</a> or Esri JSON. <a href="http://twitter.com/andrewxhill">Andrew Hill</a> of <a href="http://vizzuality.com">Vizzuality</a> mentioned that <a href="http://cartodb.com">CartoDB</a> currently has support for TopoJSON in staging. He also discussed strategies they use to reduce the size of feature and attribute data. This "data cubing" strategy turns out to similar to approaches that are commonplace in the financial industry. This serves as a reminder to look around and see what others are doing to solve similar problems.</p>

<!--more-->


<p>One a related note, the reduction of application code being delivered to the browser is also a focus. This was probably best illustrated by <a href="http://twitter.com/mattpriour">Matt Priour's</a> talk on <a href="http://openlayers.org">OpenLayers</a>. The fact that there are now three builds (full, mobile, light) as well as a focus on being more modular in version 3. <a href="http://twitter.com/pmbatty">Peter Batty</a>, in his demo of <a href="http://www.ubisense.net/en/">Ubisense</a>, made a good case for intelligent balance between server-side and client-side processing to achieve good performance.</p>

<p><a href="https://www.khronos.org/webgl/">WebGL</a> got a lot of attention from a number of speakers, with <a href="http://twitter.com/brendankenny">Brendan Kenny</a> of Google showing work he has done, including a Javascript port of GLUTessellation. Jeremy Bartley of Esri gave a lightning talk about <a href="http://www.esri.com/software/cityengine">CityEngine</a>, which is based on WebGL. WebGL is widely seen as the open solution to graphics performance that may finally kill the need for plug-ins. In side discussions, Jeremy talked about how WebGL will figure more into the previously discussed data reduction problem. The reality is that both servers and clients are getting much better at handling large data sets but the same can't necessarily be said for the wires that connect them.</p>

<p>GeoJSON continues to get a lot of love. It continues to be, in my opinion, the motor oil for the engine that is web mapping. It will be interesting see how the separation of concerns between GeoJSON and TopoJSON evolves, but I think GeoJSON will continue to be an important syntax.</p>

<p>While the majority of the discussion focused on browsers, <a href="http://nodejs.org/">Node.js</a> got significant attention. <a href="http://twitter.com/willwhitedc">Will White</a> of <a href="http://mapbox.com">MapBox</a> gave a good talk about the evolution of Node and the advantages of its non-blocking I/O model. One statistic he gave was surprising: he said 6 of the top 12 contributors on GitHub are Node contributors. That speaks loudly to the rapid evolution of Node as well as the interest in Javascript. Will put out a call to the geospatial community to build out the geospatial capabilities of Node. Later in the day, we saw a good lightning talk that showed Node processing real-time data and feeding a number of D3 visualizations.</p>

<p>While Matt Priour and <a href="https://twitter.com/atogle">Aaron Ogle</a> opened with great talks on OpenLayers and <a href="http://leafletjs.com/">Leaflet</a>, respectively, the clear star of the client-side show was <a href="http://d3js.org/">D3</a> (although Aaron's walkshed analysis in Leaflet was cool). There were lots of great visualizations (as well as nods to TopoJSON). While the D3's support for projections is getting a lot of attention from geospatial developers, I am more interested in its holistic approach to data visualization. In D3, geo is one way to look at data, but not the central way. Because of this, D3 provides an integrated capability to have multiple data visualizations in an application without overloading with a ton of libraries.</p>

<p>I am already well past tl;dr on this post and I have to catch a plane. Many of the URL talks were great but I'll follow up with some more details. All-in-all, I think the event was quite a success and I'm glad I came.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Comment Period Open for GeoPackage Specification Draft]]></title>
    <link href="http://blog.geomusings.com/2013/01/09/comment-period-open-for-geopackage-specification-draft/"/>
    <updated>2013-01-09T06:15:00-05:00</updated>
    <id>http://blog.geomusings.com/2013/01/09/comment-period-open-for-geopackage-specification-draft</id>
    <content type="html"><![CDATA[<p>The Open Geospatial Consortium (OGC) has <a href="http://www.opengeospatial.org/pressroom/pressreleases/1756">published a draft GeoPackage specification for comment</a>. The GeoPackage specification attempts to create a non-proprietary means for packaging and exchanging all geospatial data in all its forms (vector, raster, and tiles). A couple of things that jump out at me:</p>

<ul>
<li>It calls out <a href="https://sqlite.org/">SQLite</a> as the reference implementation of a GeoPackage container</li>
<li>It calls out <a href="http://www.gaia-gis.it/gaia-sins/">SpatiaLite</a> 4 as the reference implementation of a vector feature store</li>
<li>It does not call out a reference implementation for rasters or tiles</li>
<li>It does not mention exchange of cartography.</li>
</ul>


<!--more-->


<p>Although the draft references the <a href="http://mapbox.com/developers/mbtiles/">MBTiles</a> specification and uses it as an example of a pure SQL method of storing tiles, it does not call out MBTiles as the chosen storage approach nor does it mention MBTiles as a reference implementation. The draft should not be read as "SpatiaLite + MBTiles."</p>

<div style="text-align:center;"><a href="http://www.publicdomainpictures.net/view-image.php?image=9097&picture=empty-cardboard-boxes"><img src="http://blog.geomusings.com/images/posts/boxes.png" /></a></div>


<p>I think, in 2013, anything that attempts to do what GeoPackage sets out to do should have some provision for cartography. I would prefer CSS-like approach (such as <a href="http://mapbox.com/tilemill/docs/manual/carto/">CartoCSS</a>) and will say so when I submit comments but I would suspect that future discussion of cartography, if any, will probably start with SLD. For now, tiles can fill the gap.</p>

<p>So comments are open, give it a look and tell OGC what you think.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Ready for JS.geo]]></title>
    <link href="http://blog.geomusings.com/2013/01/08/getting-ready-for-js-dot-geo/"/>
    <updated>2013-01-08T15:50:00-05:00</updated>
    <id>http://blog.geomusings.com/2013/01/08/getting-ready-for-js-dot-geo</id>
    <content type="html"><![CDATA[<p>I'm looking forward to next week's <a href="http://geojs.eventbrite.com/">JS.geo</a> event in Denver. It is a small event, spearheaded by <a href="http://twitter.com/cwhelm">Chris Helm</a> of <a href="http://www.esri.com">Esri</a>, that focuses on the use of Javascript in geospatial applications. Although I have been more vocal in my <a href="http://blog.geomusings.com/blog/categories/python/">recent explorations with Python</a>, I've probably done as much, if not more, work with Javascript over the past 18 months.</p>

<div style="text-align:center;"><img src="http://mapbrief.com/wp-content/uploads/2012/11/no_plugin.jpg" /></div>


<p>The pace of innovation with Javascript in the geospatial area has been staggering. It seems like only a short time ago that the options for working with geospatial applications were <a href="http://openlayers.org/">OpenLayers</a> and the <a href="http://help.arcgis.com/en/webapi/javascript/arcgis/">Esri Javascript API</a>. The rapid advent of tools such as <a href="http://www.geoext.org/">GeoExt</a>, <a href="http://leafletjs.com/">Leaflet</a>, and many others has really lead to a explosion of capability. Of course, the recent buzz has been about <a href="http://d3js.org/">D3</a>, which tackles a wide range of data visualization problems, including geo. D3 is of particular interest because it is tackling the issue of projection in the browser, freeing applications from the dominance of Web Mercator.</p>

<p>Of course, it's not been all about the browser, either as <a href="http://nodejs.org/">Node.js</a> has made abundantly clear. One of the most effective desktop applications for cartographic design, <a href="http://mapbox.com/tilemill/">TileMill</a>, is built with Node, among other tools.</p>

<p>The maturity of Javascript as a tool for geospatial development is such that I am at the point that, if it weren't for government customers that are <a href="http://mapbrief.com/2011/10/13/web-mapping-continues-to-pay-for-the-sins-of-internet-explorer/">still standardized on Internet Explorer 8</a> or older, a plug-in-based environment would not be my first choice for a new application.</p>

<p>As for the JS.geo event itself, I am intrigued by its small, focused nature. It doesn't seem to be as informal as an unconference but may be easier to digest than the typical geo event. It will also be great to catch up with the Front Range crowd.</p>
]]></content>
  </entry>
  
</feed>
