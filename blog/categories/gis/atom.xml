<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: GIS | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/gis/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2013-09-20T06:11:06-04:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Random Geospatial Stuff]]></title>
    <link href="http://blog.geomusings.com/2013/09/10/random-geospatial-grab-bag/"/>
    <updated>2013-09-10T10:16:00-04:00</updated>
    <id>http://blog.geomusings.com/2013/09/10/random-geospatial-grab-bag</id>
    <content type="html"><![CDATA[<p>It's been a while since I've posted as the usual wind-down of summer and wind-up of the school year has had me otherwise engaged. What follows are few developments over the past few months that have floated through the transom of my geo-awareness.</p>

<p style="text-align:center;"><img src="http://daylightdonutsstier.com/assets/images/slideshow/CakeDonuts.jpg" height="50%" width="50%"/></p>

<p><a href="http://geojson.io/">geojson.io</a> - Remember all of the attention given to the ability to render GitHub-hosted GeoJSON files as maps? Well, <a href="http://twitter.com/tmcw">Tom MacWright</a> of <a href="http://mapbox.com">MapBox</a> has, in fairly rapid fashion, given us this tool to edit GeoJSON in the browser and publish to either a GitHub repo or a gist. It's an easy-to-use tool with an interface consistent with other MapBox tools. It's definitely worth checking out and adds an important piece of workflow to the GeoJSON-on-GitHub concept.</p>

<!--more-->


<p><a href="http://gitspatial.com/">GitSpatial</a> - Continuing with the theme of being more productive with GeoJSON on GitHub, <a href="http://twitter.com/JCSanford">Jason Sanford</a> has developed GitSpatial to wrap a spatial API around your hosted GeoJSON. It actually works using a 'sync' approach so it pulls the GeoJSON into its own infrastructure and watchs the data on GitHub for changes. Jason has also updated his <a href="http://geojason.info/leaflet-vector-layers/">Leaflet Vector Layers</a> project to support GitSpatial. This project is in its early stages and Jason has been very open to feedback. I encourage you to check it out and help him make it better.</p>

<p><a href="https://www.gaia-gis.it/fossil/virtualpg/index">VirtualPG</a> - This extension to SQLite/SpatiaLite was released in August and it is intended to facilitate data exchange between those platforms and PostgreSQL/PostGIS. I have yet to kick the tires on it but I plan to soon.</p>

<p><a href="http://www.dhs.gov/infrastructure-information-partnerships#2">HSIP 2013</a> - For the first time in quite a while, I attended a <a href="https://www.hifldwg.org/">HIFLD</a> meeting. The theme of the meeting was HSIP Feedback, to which about one HIFLD per year is dedicated. While HSIP has never been perfect, it has managed to evolve to provide value across numerous communities. The meeting featured a parade of users articulating the essential nature of HSIP to their missions. With HSIP 2013, the distribution expands to 6 DVDs. In my opinion, this distribution method is one of its biggest, and most solvable, problems. With a plethora of <a href="http://www.weogeo.com">technologies</a> to choose from, streamlining and tailoring the delivery of HSIP to its users should be low-hanging fruit for HSIP's custodians.</p>

<p>As for me, I've been spending my days writing interfaces for custom message formats to synchronize locations with video frames. It's much lower-level development than I've done in a while but it's been very fun. I've also been making some updates to my <a href="https://github.com/geobabbler/AGSOpenFormats">GeoJSON extension for ArcGIS Server</a> but I'll post about that in more detail soon.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Do I Blog?]]></title>
    <link href="http://blog.geomusings.com/2013/08/12/why-do-i-blog/"/>
    <updated>2013-08-12T12:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2013/08/12/why-do-i-blog</id>
    <content type="html"><![CDATA[<h2>TL;DR:</h2>

<p>In which, as a result of a <a href="http://blog.entchev.com/2013/08/08/gis-blogging-in-decline.aspx">post by Atanas Entchev</a>, I postulate on why I continue to do this blog thing. This is a departure from my typical subject matter and you can be forgiven for not reading any further.</p>

<hr />

<p>My friend <a href="http://twitter.com/atanas">Atanas Entchev's</a> <a href="http://blog.entchev.com/2013/08/08/gis-blogging-in-decline.aspx">latest post</a> on a possible decline in GIS blogging got me looking at my own output. After and initial surge, I have held steady at 40 to 45 posts per year. The discussion around Atanas' post, both in his blog comments and on his <a href="https://plus.google.com/110319601981109631300/posts/A3twyjrs8yL">Google+ stream</a>, got me thinking about why I continue to do this. So, at the risk of being accused of engaging in philosophical navel-gazing, here it goes.</p>

<p style="text-align:center;"><img src="http://blog.geomusings.com/images/posts/posts.png" /></p>

<p>This blog was not my first attempt at blogging. I originally had an <a href="http://www.esri.com">ESRI</a>-development focused blog on Blogger in about 2004. I think I made four or five posts, let it languish for a bit, and then killed it off. The main reason for that is that I wasn't really sure what I was trying to accomplish with a blog. I never even backed it up so whatever was there is lost to the ages.</p>

<!--more-->


<p>Fast-forward to 2006 when I was at a stage in my career where I was working at a fairly cloistered customer site, building a human resources management system...in VB.NET no less. It was the first time since the beginning of my career that I was away from the GIS industry and I wasn't interested in letting my skills soften. Up until that point, I had been primarily an ESRI developer but I was now using evenings at home to do experimental stuff to keep current. My company machine had ArcMap on it but I wasn't going to swing an SDE license at home so I started looking at <a href="http://www.postgis.org">PostGIS</a>. That's when I ran across <a href="https://code.google.com/p/ziggis/">zigGIS</a> and used it to extend out of my ESRI comfort zone into the world of open-source GIS.</p>

<p>All of that lead me to start blogging. Initially, I was doing web searches to find out how to do things I was trying to with ArcObjects and PostGIS. I would occasionally find a post that provided a good overview of a coding techniques or an in-depth discussion of how a piece of software behaved, but they were few and far between. That's when I finally had a concept for a blog: to write the kind of blog that I was looking for and would want to read. So my early posts featured a lot of code snippets and such (this was in the pre- <a href="https://gist.github.com/">Gist</a> days when sites like <a href="http://sourceforge.net/">SourceForge</a>, <a href="https://code.google.com/">Google Code</a> and <a href="https://www.codeplex.com/">CodePlex</a> were overkill for snippets). It also generally tracked my growing personal explorations with open-source tools.</p>

<p>So that's how I got into blogging but the title of this post is really looking for the reasons why I keep doing it. I'll summarize:</p>

<ol>
<li><p>To give back - Over the years, the snippets have gotten more sporadic but I still try to post some outputs of my work from time to time. I can't really devote the time to jump into an open-source project with both feet so my hope is that my blog can be an avenue to contribute back some of the knowledge I derive from my work.</p></li>
<li><p>To engage - I am a consultant after all. I am able to continue to ply my trade by being known and my blog is one component of building the track record of my work. Due to vagaries of Federal contracts, much of my work remains behind firewalls so my blog is a way to demonstrate some of what I can do outside the standard Federal procurement process. I would also be remiss if I didn't acknowledge that my blog has been an avenue by which I have met a number of people that I now consider friends. For fear of leaving someone out, I won't enumerate them here but the act of writing my blog, and reading others, has helped me connect with a lot of people I am glad to know.</p></li>
<li><p>To act as my own resource - I have often gone back to mine old posts to find a technique I implemented in the past and bring it forward to my current work. So, while my blog is out there for the public to see, it has become something of my own personal archive as well. It remains to be seen whether <a href="https://github.com">GitHub</a> and Gist will put a dent in that use case.</p></li>
<li><p>To tidy up my own mind - It actually takes a lot of work to prepare a post, or at least it does for me. Oftentimes, I have a lot of "bit and pieces" floating around in my head and on various notepads and such. One of the attributes of working at multiple locations is that various pieces of related information can become scattered across separate e-mail systems, content management systems, notepads, post-its and the like. I can't always have my smartphone with me or access my GMail, so some fragmentation can set in. Taking the time to write a post is an excellent way for me to pull together all of those disparate bits, organize them into a cohesive approach, and document that approach for others and for me (see item 3).</p></li>
<li><p>I am a writer - I used to write a lot of fiction and poetry. One day I may do so again. Until then, my blog scratches the itch for stringing some words together into something coherent.</p></li>
</ol>


<p>I remain committed to the idea of writing the kind of blog that I would want to read and I have tried to be consistent about that over the years. I am actually quite humbled that it seems to have found an audience, that anyone other than me reads it, and that others find value in it.</p>

<p>I can completely understand <a href="http://www.jonathancrowe.net/">Jonathan Crowe's</a> decision to end his long-running, and excellent, blog <a href="http://www.maproomblog.com/2011/06/the_end.php">The Map Room</a>. Sometimes things just run their course. This much I can say: I won't be ending mine in the near future. Late last year, I took the step of migrating my blog from Wordpress.com to a Jekyll/Octopress site hosted on GitHub pages. Extracting six years of content from Wordpress was no small task (thanks for the help, <a href="http://twitter.com/cageyjames">James</a>) so I did a gut check before moving forward. I decided that taking that step was a commitment to keep the blog going for the foreseeable future.</p>

<p>So back to Atanas' post: I do think GIS blogging, in the form it took when I started, is in decline. There were a lot of personal GIS blogs in 2006, many of which have fallen by the wayside. That's probably true of blogs in general as social media platforms have eaten away at them. I don't know that it's a loss; I don't know that it's important at all. Human communication evolves over time. We just happen to be in a period where that process seems to be moving rapidly.</p>

<p>That said, some good individual blogs have popped up but I think blogging in general is becoming more polished and corporate. I think some of the better original content these days comes from multiple authors contributing to organizational blogs. In the geospatial industry, the <a href="http://www.mapbox.com/blog/">MapBox blog</a> stands out as this type of blog. Yes, the blog forwards the ends of MapBox but its content is genuinely useful to those trying to put MapBox to use. The same can be said of some of <a href="http://blogs.esri.com/esri/arcgis/">Esri's blogs</a>, the content of which has shown marked improvement over the last 24 months or so.</p>

<p>Blogs can also help small companies establish their identity. At <a href="http://www.zekiah.com">my company</a>, we started a <a href="http://www.zekiah.com/index.php?q=blog">blog</a> a while back as a means to add fresh insights into our capabilities beyond the standard representation that most company web sites provide. Blogs are a nice long-form enhancement for organizations and I think they are safer because they minimize the risk misinterpretation that comes with a 140-character limit.</p>

<p>So that's it. This is about as "meta" as I ever want to get on my blog. I don't think I'll do anything like this again because it smacks of philosophical navel-gazing. (I am usually my own harshest critic in that area.)  Thank you, as always, for stopping by.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DevOps for Geospatial Data]]></title>
    <link href="http://blog.geomusings.com/2013/07/28/devops-for-geospatial-data/"/>
    <updated>2013-07-28T10:54:00-04:00</updated>
    <id>http://blog.geomusings.com/2013/07/28/devops-for-geospatial-data</id>
    <content type="html"><![CDATA[<p>There has been a bit of buzz the past couple of weeks over the <a href="https://github.com/blog/1541-geojson-rendering-improvements">ability of GitHub to render GeoJSON and TopoJSON files</a> automatically using  and embedded <a href="http://leafletjs.com/">Leaflet</a> map and <a href="http://www.mapbox.com/">MapBox</a> technology. This buzz is quite justified as it presents an easy way to simply publish and visualize vector data sets. In the weeks since the initial announcement, the community has begun exploring the limits of GitHub's capability. Probably the two biggest limiting factors are individual file size limits and API rate limits. Some, including myself, are exploring strategies for maximizing the ability to store, disseminate, and visualize data within these confines. For the near term, <a href="https://github.com/">GitHub</a> will probably not be the place to store terabytes of data or act as the CDN for a high-volume mapping application. That is perfectly fine and there is still a great deal of value to be found within GitHub's current generous constraints.</p>

<p style="text-align:center;"><img src="http://blog.geomusings.com/images/posts/geodata-git.png" /></p>

<p>One aspect of GitHub (really, its underlying <a href="http://git-scm.com/">git</a> engine) that is of great interest to me is the ability to perform version control and configuration management on data itself. With GitHub, that currently takes the form of text-based formats such as JSON but it's a start. In my experience supporting various customers over the years, configuration management of data has been a common gap in information operations. The most common, and inadequate, approach to this problem has been through the use of metadata. Almost two decades of viewing out-of-date, incomplete, and inaccurate metadata has given the lie to this approach. Metadata represents a separate maintenance workflow for which many organizations simply do not dedicate resources. Data-set-level metadata is also inadequate for volatile data sets in which individual records are updated frequently.</p>

<!--more-->


<p>I have worked with many organizations that had excellent DevOps processes for managing and deploying application code that simply had no corresponding processes for the data that the code was utilizing. We are long past time for addressing the importance of configuration management for data itself.</p>

<p>That is not to say there have not been approaches to addressing this issue. Since version 8.0, <a href="http://www.esri.com">Esri</a> has had a means of <a href="http://www.esri.com/software/arcgis/geodatabase/multi-user-functionality">versioning enterprise geodatabases</a> that are stored in an RDBMS. This approach does have the ability to track feature-level changes and manages their inclusion in the master version of the data set. Quite frankly, I've never loved the Esri approach to versioning. I think it gives too much responsibility to middleware when it should be the database's sole responsibility to keep itself intact. Also, I have always felt the workflow is a bit too proscribed and takes too much business process decision ability from the data owner. That said, it has been the only real game in town for a long time so I have implemented it many times.</p>

<p><a href="http://www.openstreetmap.org/">OpenStreetMap</a> (OSM) has also been a success story for tracking feature-level version history. Its approach has successfully managed millions of edits to a worldwide database so its utility is certainly proven. Organizations that need to maintain their own data behind their firewalls cannot really make use of OSM itself but the OSM approach is solid.</p>

<p><a href="http://www.zekiah.com">At my own company</a>, we have been working with customers to implement <a href="http://blog.geomusings.com/2012/03/27/configuration-management-for-geospatial-data-models/">configuration management of data models</a> (logical and physical) but we are not really addressing CM of the data managed by those models. Even so, working at the model/schema level has still helped our customers improve their data management workflows by being able to identify versions of data models supported by deployed applications and helping to migrate between versions as needed.</p>

<p>The recent move by GitHub to support visualization of spatial data files actually introduces no new capability in terms of configuration management of data files. Users have always had the ability to store and manage JSON, text, XML and other formats in GitHub and git. My hope is that the visualization capability, and the inevitable exploration it will generate, will shine more light on the issue of data configuration management. In my opinion, this is the most powerful aspect the platform brings.</p>

<p>I'm also encouraged by <a href="http://opengeo.org/">OpenGeo's</a> <a href="https://github.com/opengeo/GeoGit">GeoGit</a> initiative. I have not personally experimented with it yet so I will not speculate on the specifics of its implementation, but I am happy to see OpenGeo recognizing the need for a more open approach to feature-level version control. Since, however, it will be open-source, my hope is that proprietary GIS vendors, or their supporting integrators, will eventually support it as well.</p>

<p>Ultimately, I am happy to see both GitHub and OpenGeo addressing this issue. Although their approaches are different, they offer, in addition to the Esri approach, choices for organizations in terms of workflow. Many data managers, whether for legal, strategic, or other reasons, recognize the importance of maintaining version history of geospatial data records. It is important for everything from parcel mapping to critical infrastructure protection and many other use cases. Historically, there have been very few tools available to address this problem effectively but I am hoping that is starting to change.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Focus]]></title>
    <link href="http://blog.geomusings.com/2013/07/19/focus/"/>
    <updated>2013-07-19T00:02:00-04:00</updated>
    <id>http://blog.geomusings.com/2013/07/19/focus</id>
    <content type="html"><![CDATA[<p>While the majority of the geospatial world was at the Esri International User Conference in San Diego last week, I was at a different conference in Orlando, Florida. This was my third time attending the Children with Diabetes (CWD) <a href="http://www.childrenwithdiabetes.com/activities/orlando2013/">Friends for Life</a> (FFL) conference and I'll be there as often as I can for the foreseeable future. It's beneficial in many obvious ways; enabling us to keep up with the latest developments in diabetes research and technologies as well as keeping us refreshed in terms of diabetes management best practices.</p>

<p>The unexpected thing for me over the years has been how the lessons I've learned at FFL have begun to translate into other aspects of life outside of diabetes. (I do not have diabetes myself but I am a parent of a person who does.)  This year, perhaps because the ongoing Esri UC was somewhere in the back of my mind, it provided a different lens through which to view my approach to my professional activities.</p>

<p>The content at FFL is varied. Some touches on leading edge work in the field of biological treatments such as the <a href="http://www.diabetesresearch.org/BioHub">Diabetes Research Institute's BioHub</a> as well as mechanical/electronic treatments such as the <a href="http://artificialpancreasproject.com/">Artificial Pancreas Project</a>. Other content touches upon achieving more effective day-to-day management using current techniques such as insulin pumps, shots, carbohydrate counting and the like.</p>

<p>The conference includes many pharmaceutical companies offering competing products, differing lines of research that stand a chance of superseding one another, representatives of government agencies, insurance companies and advocacy groups that can have very adversarial relationships. Yet FFL has an overwhelmingly positive tone. This because everyone is focused on one goal: the elimination of diabetes. Any approach that represents a step toward that goal is cheered by all, as is any technique that eases the burden of living with diabetes in the meantime. Ultimately, the various technologies showcased at the conference help facilitate progress toward this goal but the technologies are not the point.</p>

<p>Let me say that again.</p>

<p><strong>The technologies are not the point.</strong></p>

<!--more-->


<p>This is the lesson that I am reminded of and am bringing back to my professional existence in the geospatial industry. Our industry has seen a lot of innovation from a number of players in recent years. The flowering of mature capability in the open-source world has, in my opinion, pushed proprietary vendors such as Esri offer improvements to their products and better solutions to their users. It can be easy to get caught up in the petty intrigues of the industry. What are Esri's real motivations behind their latest acquisition? What mapping library is that government system using? Is that API really RESTful? And so on...</p>

<p>All of the geospatial tools in the marketplace, regardless of provenance, serve to facilitate solutions to a myriad of real-world problems. And those problems are the point. As a consultant in the geospatial industry, my job is to help my customers find the tools that best solve their problems and help implement them. My responsibility is to keep an open mind about all of the tools that are available.</p>

<div style="text-align: center;">
<iframe width="560" height="420" src="http://www.youtube.com/embed/A8W8GGdD6pc?color=white&theme=light"></iframe>
(May be considered NSFW by some)
</div>


<br/>


<p>That doesn't mean that I don't have my preferences. I believe that open systems are better than closed. I believe that open-source licenses are inherently better at facilitating both enterprise scalability and grass-roots innovation. I believe that there's a lot of really good proprietary, closed-source software. I believe that the greatest asset of any organization is its data. I believe that any tool that restricts an organization's access to its data and its ability to share its data how it sees fit should be strongly discouraged. I believe that users bear the ultimate responsibility for understanding the technologies that they choose. I believe there is nothing more interoperable than a URL. I believe lots of other things learned through patience, experience, and collaboration.</p>

<p>If I were employed by a vendor or a vendor-like organization, I may take a slightly more partisan view. I also don't begrudge such organizations their own biases. I expect them to be loyal to their tools and to want to see them used and improved through that use. I would be suspect of them if they weren't.</p>

<p>That, however, is not the case with me. So, believing that open is better than closed, my responsibility is to ensure that my own thinking and my own mind are kept open. That's something that I always know, but it is good to be reminded of it by being immersed in a community that is strongly focused on a goal.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GeoJSON on GitHub: Now What?]]></title>
    <link href="http://blog.geomusings.com/2013/06/18/geojson-on-github-now-what/"/>
    <updated>2013-06-18T16:04:00-04:00</updated>
    <id>http://blog.geomusings.com/2013/06/18/geojson-on-github-now-what</id>
    <content type="html"><![CDATA[<p>So <a href="http://github.com">GitHub</a> <a href="https://github.com/blog/1528-there-s-a-map-for-that">announced</a> that you can now automatically view any <a href="http://geojson.org">GeoJSON</a> files that may be in a repository inside an interactive map driven by <a href="http://www.mapbox.com/">MapBox</a> technology. This simple enhancement to GitHub is probably one of the most significant developments in the geospatial industry in years. I'll explain a little later in this post. It's also important to view this new capability as a great, but limited, first step. I'll discuss that a little later as well.</p>

<p>While it's cool to click on a link and just see a map, it doesn't take long to wonder about how you can use this capability beyond viewing data in GitHub. What follows are three ways to capitalize on GeoJSON in GitHub. Not all are directly related to the new mapping capability, and two have been possible for a long time. That said, the GitHub announcement may draw interest from users who have not previously considered either GitHub or GeoJSON, so I hope these approaches will be useful.</p>

<h3>Embed the GitHub map.</h3>

<p><del>If you click on a GeoJSON file and view the new map in GitHub, a quick view of the page source will show that this map is embedded in an IFRAME object.</del> GitHub provides a <a href="https://help.github.com/articles/mapping-geojson-files-on-github#embedding-your-map-elsewhere">simple embedding method</a> to display the GitHub map in any page. (Thanks to <a href="https://github.com/benbalter">Ben Balter</a> for this update.) It's a great way to quickly publish a data set while also providing access to download the raw data.</p>

<p style="text-align:center;"><script src="https://embed.github.com/view/geojson/geobabbler/geodata/master/geojson/leonardtown_bldgs.geojson"></script></p>

<!--more-->


<h3>Stream the data into your own web map.</h3>

<p>This is not a new capability; if you've had GeoJSON in a repo, you've always been able to do this. That said, if you're checking out GitHub or GeoJSON for the first time as a result of the new mapping capability, this is something you may want to try. I have had a page up for a while showing the <a href="http://blog.geomusings.com/assets/demos/mdq6/">county-by-bounty breakdown of Maryland's marriage equality question from the 2012 election</a> that uses this approach to load the data into a <a href="http://leafletjs.com/">Leaflet</a> map from GitHub and style it. (Incidentally, the tiles in the map are also hosted on GitHub.)</p>

<h3>Stream the data into your desktop.</h3>

<p>A third option is to stream the GeoJSON data directly into desktop GIS software such as QGIS for further analysis. In QGIS, simply need to add a vector, specifying "Protocol" and entering the URL to your GitHub-hosted GeoJSON file. Make sure you use the "raw" URL that looks something like this: https://raw.github.com/geobabbler/geodata/master/geojson/leonardtown_bldgs.geojson .</p>

<p style="text-align:center;"><img src="http://blog.geomusings.com/images/posts/add_geojson_layer.png" /></p>

<p>After a few seconds (or more depending on the file size), it should load into QGIS like this:</p>

<p style="text-align:center;"><img src="http://blog.geomusings.com/images/posts/qgis_github_geojson.png" /></p>

<p>Additionally, the <a href="https://github.com/RBURHUM/arcgis-ogr/">GDAL/OGR plug-in for ArcGIS</a> by <a href="http://www.amigocloud.com/homepage/index.html">AmigoCloud</a> provides a way to get GeoJSON into ArcMap, though you may need to download the data first.</p>

<p>UPDATE: Dane Springmeyer pointed out that TileMill supports remote URLs as well.</p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p><a href="https://twitter.com/geomusingsblog">@geomusingsblog</a> <a href="https://twitter.com/billdollins">@billdollins</a> - very cool, had no idea QGIS supported remote urls. TileMill does also: <a href="http://t.co/o3wxv2VkEv">http://t.co/o3wxv2VkEv</a></p>&mdash; Dane Springmeyer (@springmeyer) <a href="https://twitter.com/springmeyer/statuses/347483526171594753">June 19, 2013</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p>Those are three (or so) quick ways to capitalize on GeoJSON data in GitHub now. So what next?</p>

<p>I stated earlier that I think the GitHub announcement was one of the most significant developments in years. I think it is best explained by <a href="http://feomike.github.io/post/thoughts-on-disruption.html">feoMike in his recent post</a>. As he points out, GitHub has made it easy to communicate spatial information in a way that is fully consistent with the web. Now that simple mapping is available to a large community of developers, it will be interesting to see where they take it. feoMike offered up a few early examples in his post. It's worth a read.</p>

<p>The GitHub move is great for GeoJSON as a format. I've said in the past that the search for the next shapefile ends with GeoJSON. If the web is this generation's dominant computing platform (it is), then GeoJSON provides a simple, elegant solution for geographic data transport in a manner that the shapefile did for the desktop. Support by GitHub is one more example of the community voting with its code as to what it prefers.</p>

<p>I also said it was a great first step, but limited. The mapping capability is understandably basic, though the documentation shows how you can customize styling somewhat. There is also a point at which the data seems to become too big to render (in either the map or in raw form). Bill Morris has identified this limit to be in the ballpark of 4.5MB, which can be easy to hit with GeoJSON.</p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p><a href="https://twitter.com/byrne_tweets">@byrne_tweets</a> <a href="https://twitter.com/BenBalter">@BenBalter</a> <a href="https://twitter.com/ericg">@ericg</a> <a href="https://twitter.com/ajturner">@ajturner</a> +1 for a solid number on max renderable filesize. 4.5MB is pushing it: <a href="https://t.co/cNTbA5Djqw">https://t.co/cNTbA5Djqw</a></p>&mdash; Bill Morris (@vtcraghead) <a href="https://twitter.com/vtcraghead/statuses/346825523521019904">June 18, 2013</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p>So this means that enterprises won't be dumping terabytes of vectors to GeoJSON and loading them into GitHub. That's a good thing in my book. It is, however, an acceptable solution for small data sets and quick turn-around data sharing. As with all things, you have to go in with the right set of expectations.</p>

<p>The thing I'm probably least worried about is how this affects <a href="http://www.esri.com">Esri</a>. Without any specific inside knowledge of Esri's plans, I suspect some form of official support for GeoJSON isn't far off. There are too many people inside Esri who get GeoJSON for it not to happen. If anything, the GitHub announcement may provide a bit of a push by providing a potentially rich source of data sets to consume. The real question is what form the support will take. In any event, Esri provides enough APIs to enable us to develop our own support for GeoJSON if we need it.</p>

<p>The addition of GeoJSON mapping to GitHub is a very small change in the scheme of that platform, but such small changes can sometimes lead to big shifts. It has been possible for a long time to use GitHub to host geospatial data for applications. The main benefit of this latest change, in my opinion, is its potential to get people thinking about the platform in a different way. With such a visible (and visual) change on a platform targeted at developers, I hope that it will motivate that community to begin experimenting with how far it can be pushed. If a hosted platform with an already-baked-in workflow for change management and version control begins to be viewed as a viable home for spatial data, it has the potential to change how the geospatial community thinks about how it does business.</p>
]]></content>
  </entry>
  
</feed>
