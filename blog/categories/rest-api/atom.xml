<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: REST API | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/rest-api/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2013-05-20T12:42:58-04:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GeoServices REST Specification and OGC]]></title>
    <link href="http://blog.geomusings.com/2011/06/16/geoservices-rest-specification-and-ogc/"/>
    <updated>2011-06-16T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2011/06/16/geoservices-rest-specification-and-ogc</id>
    <content type="html"><![CDATA[<p>So this is what I get for missing the Ignite sessions at WhereCampDC<sup>*</sup>:</p>

<p><div class='embed tweet'>Sorry, you are not authorized to see this status.</div></p>

<p><sup>*</sup>I got to dance with my daughter and help her chase fireflies so I win.</p>

<p>The worst-kept rumor/secret in recent memory is now "out there" so here are my thoughts:</p>

<!--more-->


<ol>
    
<li>It makes perfect sense for <a href="http://www.opengeospatial.org/">OGC</a>. They were caught completely flatfooted by REST and this provides an expedient (and already widely-deployed) way to catch up, if they adopt it. Esri's API works pretty well and is certainly a nice starting point for a spec.</li>

<li>It's also a no-brainer for <a href="http://www.esri.com">Esri</a>. If adopted, they are automatically OGC-compliant and may even be able to call ArcGIS Server a reference implementation. There's no way that doesn't benefit them and they would probably be the biggest winner in this. What would be nice is if Esri followed this up with some demonstration of commitment to the community such as releasing one or more of their REST API clients as open-source.</li>

<li>I assume this includes the Esri JSON syntax (my term), which is the underpinning of the GeoServices REST Specification. That leaves me wondering about <a href="http://geojson.org">GeoJSON</a>. It's a community specification that's been <a href="http://wiki.geojson.org/Users">widely adopted</a> across the industry. It wouldn't be very hard to augment the GeoServices spec with "f=geojson" on the calls that are appropriate but I can't see OGC doing that for a spec they don't own (although, by doing so, they would live into the "open" part of their name). 

For what it's worth, I like GeoJSON and find it tighter and more focused than the Esri syntax for what it does and I think it should be part of the discussion somehow. It's not entirely a 1-to-1 match as GeoJSON is designed for transmitting geometries and features. The Esri JSON syntax is broader in scope, addressing not only geometries but also other functions such as listing available endpoints and fetching endpoint metadata and such. So GeoJSON, in its current form, would not address all of the needs of the GeoServices spec but would certainly be a viable option for functions such as returning the results of feature layer queries.</li>

<li>It would be interesting to see whether the spec gets implemented across the community. It has been available for months but there hasn't been a wide uptake. The only example I am aware of is <a href="http://www.arc2earth.com/products/cloud/">Arc2Earth's cloud work</a> which <a href="http://ucdemos.appspot.com/a2e/ArcGIS/rest/services/NYC/NYC_Subways/MapServer/">implements it</a> on top of their Google-AppEngine-based services. Maybe OGC adoption would provide the kind of "top cover" that will give developers peace-of-mind. (Note: My company is an Arc2Earth reseller.)
</li>

<div style="text-align:center;"><img alt="" height="202" src="http://geobabble.files.wordpress.com/2011/06/a2e_esrisl.png" title="Arc2Earth Cloud Service in Esri Silverlight API" width="442" /><div style="text-align:center;font-size: 14px;">Arc2Earth sample in Esri Silverlight demo application<br/><br/></div></div>

<li>If the <a href="http://www.esri.com/library/whitepapers/pdfs/geoservices-rest-spec.pdf">GeoServices REST Specification</a> (Beware, PDF) is adopted by OGC, it will continue a trend begun with the adoption of KML and GeoRSS in which they formally adopt community and de facto standards that have emerged and been proven in the industry. I think that's a valid approach that can exist alongside their usual standards development process. This case is a little different than those in that it was developed by a single vendor (like KML) and has been released and documented (like KML) but hasn't really been widely implemented outside its initial vendor base prior to consideration (unlike KML). That's a subtle but important difference that bears watching.
</li>
</ol>


<p>Those were some of my initial thoughts upon hearing this. If it happens, it's obviously of immediate benefit to both OGC and Esri. The lack of any viable presence by OGC in this area has left a void that has begun to be filled by other efforts, including Esri's. It'll be interesting to see the longer-term implications. I think <a href="http://www.spatiallyadjusted.com/2011/06/16/esri-rest-api-could-be-an-ogc-standard/">James</a> is correct that we can expect to see implementations on server platforms such as <a href="http://mapserver.org/">MapServer</a> and <a href="http://geoserver.org/display/GEOS/Welcome">GeoServer</a> but I wonder how relevant it will be in the emerging environment surrounding big data and hosted (i.e. cloud) infrastructures. An end-to-end GIS interface may be less relevant than a more atomic approach that allows support for spatial types to be injected as needed into a larger framework (for example, supporting use of GeoJSON on specific calls the way Twitter does). There's room for both approaches but distinct paths are beginning to emerge.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Crazy Times - Coming Up For Air]]></title>
    <link href="http://blog.geomusings.com/2009/06/26/crazy-times-coming-up-for-air/"/>
    <updated>2009-06-26T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2009/06/26/crazy-times-coming-up-for-air</id>
    <content type="html"><![CDATA[<p>It's been an extremely busy few months, as evidenced by the pace (or lack thereof) of blogging. I have been hopping between customer sites, mainly helping with ArcGIS Server implementations. We're also re-hosting an ArcIMS site for someone. I expect that to eventually transition as well but we have to get it moved first. I'm also working a pro-bono implementation of PostGIS/GeoServer/OpenLayers for the town of Green Mountain Falls, Colorado. That's been fun. It's great to see how a small town can marshall it resources (Boys Scouts with GPS collected trails as an Eagle Scout project) to get things done. The initial implementation will be simple as they are more interested in getting their data out there but then we'll circle back around to address public-service-type applications after that.</p>

<p>Significant changes are coming for <a href="http://pub.obtusesoft.com">zigGIS</a>. Abe, Paolo and I have been laying out a roadmap for its way ahead. Look for an announcement soon via <a href="http://twitter.com/zigGIS">zigGIS on Twitter</a>.</p>

<p>I have been having a lot of fun with the REST-based APIs from ESRI (Javascript, Flex, Silverlight/WPF). In particular, I've been happy with how extensible they are in terms of being able to support new data sources.
<a href="http://openlayers.org/pipermail/users/2009-June/012414.html">OpenLayers 2.8</a> and <a href="http://blog.opengeo.org/2009/06/17/geoexplorer-preview/">GeoExplorer</a> are also on my radar but that radar screen is getting pretty crowded.</p>

<p>All of this with less than a week to go before vacation. Whew!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dev Summit - Ahhhh, the APIs (and Security)]]></title>
    <link href="http://blog.geomusings.com/2008/03/21/dev-summit-ahhhh-the-apis-and-security/"/>
    <updated>2008-03-21T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2008/03/21/dev-summit-ahhhh-the-apis-and-security</id>
    <content type="html"><![CDATA[<p>ArcGIS 9.3 looks really good all the way around. ESRI seems to have really put a lot of work into making this a quality release. Basically, it's all about consolidating the vision of 9.2 while also improving the execution of that vision. To be sure, there are some new capabilities (PostgreSQL support, Javascript API, REST API, etc.) but there has been a huge effort on shoring up the quality of the product. The ESRI developers themselves seem really excited as well. It seems as if they can't wait for the beta to get in our collective hands. But, this being the Dev Summit, the real star of the show was the APIs.</p>

<p>I didn't attend anything on the Java ADF or the Flex API. Neither of those are things I'll be using anytime soon so I didn't check them out but <a href="http://fantomplanet.wordpress.com/">Fantom Planet</a> did attend the Flex API session and seemed duly impressed. So, if you want details on that, you should probably nag him.  ;)</p>

<p>I sat in on a session about the .Net Web ADF. I've already read <a href="http://blog.davebouwman.net/2008/03/20/ArcGISServerNETADFSession.aspx">Dave's post</a> on the same session and his notes read almost exactly like the ones I have in my notebook so, rather than retype my notes (which would essentially duplicate Dave's post), I'll refer you there. BTW, congrats Dave!</p>

<p>The .Net Web ADF definitely seems to have a lot of improvements. The things I'm most excited about are a) all of the web controls being scriptable, b) the client-side JavaScript now being exposed, documented and supported, c) the re-engineering to use ASP.NET AJAX and d) resource-level tiling. ESRI put a lot of focus on reducing the number of server round-trips and reducing the need to execute the full page life-cycle. This will speed things up a lot. All of the items I just listed will have direct, immediate benefits on our Server projects. Oh yeah, using JSON to serialize their objects is cool as well. Additionally, the ADF is designed to use .Net 3.5 but you can toggle back to 2.0 if you need to. I see SilverLight in my future.</p>

<p>I've already talked a little about the REST API. I think that one is going to be huge. It really expands the scope of potential clients for ArcGIS Server services to just about anything. As I said, they even hit services from Ruby and Python during the session. "Everything is a URL" was the big take-away from that session. So, pretty much anything that can call a URL and understand the response can be a client. A lot of my clients have standardized on SOAP web services (didn't get to anything about the SOAP API but I'll catch up on that during the beta) but I plan on leveraging the REST API as much as I can outside of those areas.</p>

<p>The JavaScript API looks pretty good too. Using this, developers will be able to integrate ArcGIS Server services into Virtual Earth and Google Maps and other mashups. <a href="http://mandown.co.nz/events/day-1-building-mashups-using-the-arcgis-javascript-api-s-at-the-esri-developer-summit-2008/">Mandown</a> has an good summary of the session. Most of my customers will not be able to take advantage of ESRI hosting the API but that shouldn't be a huge issue. However, it (along with the SOAP and REST APIs) fit in well with the mobile code policies we have to adhere to.</p>

<p>When I went to the FedUC, Jack articulated a vision of ArcGIS providing advanced GIS analysis to whatever client you wanted to use. The Dev Summit really brought that home in a way that you could see it. The various APIs give lots of options that should fit into any environment.</p>

<p>Lastly, I attended the session on securing .Net web applications. The security model is essentially an extension of what we did at 9.2 but a whole lot easier to administer. They generally follow the ASP.NET model (OS security, Forms, custom provider). That'll make it easier to to get systems accredited. However, with regard to AGS web services, they've made one significant change for the better (IMHO). Security for web services is now managed by the SOM rather than being defined in the web.config. This has one huge advantage in that security is now applied consistently to web services regardless of which API you are using to access the services. This means that whether you use the Java ADF, .NET ADF, REST API, JavaScript API, SOAP API or whatever, web service security will be the same. I'll need to educate some of the security types I deal with on the SOM (and they'll want to red-team it, I'm sure) but I think it'll end up being an easy sell.</p>

<p>So, this'll be an exciting release for developers. I think it could be as significant as when we were all introduced to ArcObjects at 8.0. Now, I've just got to get into the office and set up the beta....</p>

<p>UPDATE: <a href="http://www.spatiallyadjusted.com/2008/03/21/reflection-on-the-2008-esri-developer-summit/">James raises a good point</a> about the demos. They do make it look like you can do really cool stuff with just a little bit of code. It's important to remember that calling the service from the API is just one part. You'll still need to implement your complex logic in the service. Also, more sophisticated behaviors on the client will require more code there. It's important not to get caught up in the sales hype. 9.3 will offer some powerful options but it's important to keep the total level of effort in mind. The new APIs give you more options for developing your applications, but they don't obviate the need to actually write the code.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dev Summit REST API Session]]></title>
    <link href="http://blog.geomusings.com/2008/03/18/dev-summit-rest-api-session/"/>
    <updated>2008-03-18T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2008/03/18/dev-summit-rest-api-session</id>
    <content type="html"><![CDATA[<p>I just sat through the first REST API session at the Dev Summit. They had it in a pretty big room and it was packed. There is a lot of interest in it here. Generally, you can walk up to just about any random person and they'll say they want to learn more about the REST API. The other web APIs (JavaScript, SOAP, etc.) are also generating a lot of interest.</p>

<p>To sum up the REST API in one word: impressive. ESRI is definitely on the right track here. I think this API could end up overshadowing the others over time. After sitting through the session, I have my doubts about whether the API holds up to the strictest definition of REST but I came away unconcerned by that. The simplicity and the power of this API cannot be understated.</p>

<p>All resources (requests, layers, services, etc.) are represented as URLs. This provides the ability to very simply call powerful geoprocessing and analysis services running in ArcGIS Server. The API also supports a myraid of output formats. They demonstrated using Google Earth, Google Maps and Virtual Earth as clients. Also shown was the use of Python and Ruby scripts to call AGS services through the REST API as well as Yahoo Pipes. The output formats specifically discussed were HTML (default), (geo)JSON, KML/KMZ, image, layer (for use by ArcMap clients), NMF (for AGX), Google Maps and Virtual Earth. There's enough there to pretty much do what you need.</p>

<p>Before anyone asks, no they did not specifically mention OpenLayers nor was it shown but there were numerous examples of GeoJSON output. Based on what I saw, I think it would trivial to integrate with OpenLayers.</p>

<p>The REST API makes diligent use of caching in order to optimize performance. One aspect I was interested in was security. During the plenary, it was mentioned that AGS security can be managed using industry standards such as LDAP and others. While this is not specific to the REST API, it is worth noting that, once security settings are defined, they automatically apply across all of AGS's supported web interfaces. This will be a huge thing for many of my customers. In addition, security is role-based and can be applied to folders or individual services.</p>

<p>From a developer standpoint, 9.3 could end up being the most important release of ArcGIS in a long time. The JavaScript, SOAP and REST APIs will open up development to a lot of new developers. I think that these APIs will be critical to achieving the goal for ArcGIS articulated at the FedUC for AGS to be the geospatial analysis engine that can feed the visualization client of your choice.</p>

<p>A couple of other minor notes: AGS 9.3 introduces a geometry service that's not bound to any specific data but exposes geometric opertations to clients. Currently, the REST API only supports simple geometries so parametric types such as arcs and circles are converted to densified lines or polygons.</p>

<p>This was an impressive session. It looks like ESRI is putting a lot of effort into getting the REST API as right as they can this first time out. This session made me eager to get home and get the 9.3 beta running.</p>
]]></content>
  </entry>
  
</feed>
