<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: sql server spatial | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/sql-server-spatial/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2012-12-17T11:50:48-05:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Upgrading to SQL Server 2008 February CTP]]></title>
    <link href="http://blog.geomusings.com/2008/02/25/Upgrading-to-SQL-Server-2008-February-CTP/"/>
    <updated>2008-02-25T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2008/02/25/Upgrading-to-SQL-Server-2008-February-CTP</id>
    <content type="html"><![CDATA[<p>There is no direct upgrade yet so you need to remove the November CTP. Apparently, the uninstall doesn't always work well (hey, it's beta). Luckily, <a href="http://dotnettim.spaces.live.com/blog/cns!4B800EB59FAEDC2A!152.entry">Tim's post</a> straightened me out. This worked for me. More accurately, the guidance in Michael's comment worked for me.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL Server 2008 and 2005 Side-By-Side]]></title>
    <link href="http://blog.geomusings.com/2008/02/01/SQL-Server-2008-and-2005-Side-By-Side/"/>
    <updated>2008-02-01T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2008/02/01/SQL-Server-2008-and-2005-Side-By-Side</id>
    <content type="html"><![CDATA[<p>Installing the the SQL Server 2008 November CTP side-by-side with SQL Server 2005 is very straightforward. On the previous build of my machine, I had them both running just fine. After my system crash, I began setting things up again. Because I had been working with 2008 before the crash, I installed that first and then got around to 2005 later.</p>

<p>It should have been obvious to me before I did that but installing them in that order seems to break a lot of stuff in 2008. Kinda makes sense. I was a little flustered at having to rebuild in the first place and perhaps rushing things a bit but here it is for the record: If you are installing both of them on a new box, put on 2005 first.</p>

<p>Generally the database engine worked well. Most of the issues I had came up in the management studio. After installing 2005, many of the dialogs and property pages in the Katmai management studio would no longer display. Attempting to invoke them usually resulted in a "class not registered" exception.</p>

<p>In order to fix that, I had to remove and then re-install 2008. Before doing that, I detached my databases and then re-attached them after I was done. Everything works fine now.</p>

<p>This probably says more about me than it does SQL Server ;) but I thought I'd share.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL Server 2008 Spatial - One Month Later]]></title>
    <link href="http://blog.geomusings.com/2007/12/28/SQL-Server-2008-Spatial-One-Month-Later/"/>
    <updated>2007-12-28T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2007/12/28/SQL-Server-2008-Spatial-One-Month-Later</id>
    <content type="html"><![CDATA[<p>So it's been about a month since the release of the SQL Server 2008 November CTP. I've been dabbling with it and have made several posts about it. I still have a lot more digging to do with it but here are my impressions after a month:<!--more--></p>

<ol>
<li><p>Geography - I was a little dubious about the use of two different spatial data types when I first cracked it open but have gradually begun to come around to this concept. I like the idea of a data type dedicated to spherical data. I'm sure that's in there to meet requirement of Virtual Earth but I can think of a number of uses. Specifically, certain types of signals modeling/simulation and over-the-horizon visibility analysis could benefit from it. I will admit that I haven't dug into the geography data type as much as I'd like to, but I plan to focus more on that after the first of the year.</p></li>
<li><p>Spatial References - From a GIS perspective, support for spatial references could be seen as a little thin. Oracle, PostGIS and ArcSDE have spoiled me into expecting the database to do it all for me but MSFT seems to be taking a different view here. They've provided the geometry data type and you can specify an SRID but it's pretty much left to the application to know what to do with it. Taking the long view, there is an opportunity here for a third-party or open-source solution to provide the capability that the GIS community has come to expect. It's not a stretch to imagine something like <a href="http://www.codeplex.com/Wiki/View.aspx?ProjectName=MsSqlSpatial">MsSqlSpatial</a> modified to use the SQL2008 geometry type. So, I've decided to keep my mind open here.</p></li>
<li><p><del datetime="2007-12-28T00:12:11+00:00">WKT - The X/Y switching issue is the only thing I've seen so far that really needs to be addressed and changed. I think this will be a can of worms.</del> Microsoft listened. <a href="http://www.sharpgis.net/2007/12/27/TheCommunityWorks.aspx">Morten</a> said it best: the community works!</p></li>
<li><p>Buzz - No denying it, there was a huge amount of pent-up demand for spatial support in SQL Server. In addition to the commercial support (slightly unprecedented for a CTP, I think), there's been quite a bit of activity among independent developers. It's important to remember that this is the first CTP in which spatial support has been included (although commercial partners had earlier access) so I would expect things to grow from here.</p></li>
<li><p>Spatial Indexing - I haven't dug into this too deeply except to note that a spatial index does (unsurprisingly) increase performance. I need to benchmark it more (like at all) from this standpoint. I'm also curious about behavior of spatial indices across table partitions. There were some deficiencies (IMHO) with spatial indices and partitioning with Oracle Spatial so I'm curious here.</p></li>
<li><p>Data Loading tools - There aren't any included that support spatial data. There is always <a href="http://www.safe.com/">FME</a> but I think there should at least be support for importing from a shapefile (and maybe GML or KML) in the 'SQL Server Import and Export Wizard' so that you have something to get going with. That may come in a later CTP but there's nothing there now.</p></li>
<li><p>Oh yeah, the rest of SQL Server. Kinda lost in all of the spatial discussion is that SQL 2008 is already pretty solid. As a whole, it's close to production quality now.</p></li>
</ol>


<p>In summation, I come away fairly impressed so far. I think that those of us who've been working with GIS (and spatial DB's) for a while will definitely need to change our mindsets when working with SQL Server. There are definitely some different viewpoints at work with it. Out of the box, it does less than you may be used to. That'll force your DBA's to get up to snuff with a lot of new concepts but it'll also present an opportunity in the 3rd party market.</p>

<p>So there's my two cents so far. This and $4.50 will get you...</p>

<p><img alt="You'll need it after staying up till 3:00 AM playing with SQL Server 2008" src="http://bigmarketing.files.wordpress.com/2007/05/starbucks_cup.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL Server 2008 WKT X/Y Switching Illustrated]]></title>
    <link href="http://blog.geomusings.com/2007/12/18/SQL-Server-2008-WKT-XY-Switching-Illustrated/"/>
    <updated>2007-12-18T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2007/12/18/SQL-Server-2008-WKT-XY-Switching-Illustrated</id>
    <content type="html"><![CDATA[<p><strong>UPDATE:</strong> Microsoft has <a href="http://blogs.msdn.com/isaac/archive/2007/12/27/latitude-longitude-ordering.aspx">announced</a> that they will address this issue in an upcoming CTP. They plan to implement longitude-latitude ordering in WKB and WKT for both the geography and geometry types.</p>

<p>In a response to my <a href="http://geobabble.wordpress.com/2007/12/18/inserting-sql-2008-geometry-with-a-sqlcommand/">previous post</a>, <a href="http://www.spatialdatalogic.com/cs/blogs/brian_flood/default.aspx">Brian Flood</a> mentioned the ongoing discussion about <a href="http://www.microsoft.com/sql/2008/technologies/spatial.mspx">SQL Server 2008</a> and the "switching" of X and Y values in <a href="http://en.wikipedia.org/wiki/Well-known_text">WKT</a> strings depending upon which spatial data type, geometry or geography, is being used. The SQL snippet below boils the issue down to a simple example:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">DECLARE</span> <span class="o">@</span><span class="k">g</span> <span class="n">geometry</span><span class="p">;</span>
</span><span class='line'><span class="k">SET</span> <span class="o">@</span><span class="k">g</span> <span class="o">=</span> <span class="n">geometry</span><span class="p">::</span><span class="n">STGeomFromText</span><span class="p">(</span><span class="s1">&#39;POINT(3 8)&#39;</span><span class="p">,</span> <span class="mi">4326</span><span class="p">);</span>
</span><span class='line'><span class="k">SELECT</span> <span class="o">@</span><span class="k">g</span><span class="p">.</span><span class="n">STX</span> <span class="k">as</span> <span class="n">geomX</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">DECLARE</span> <span class="o">@</span><span class="n">h</span> <span class="n">geography</span><span class="p">;</span>
</span><span class='line'><span class="k">SET</span> <span class="o">@</span><span class="n">h</span> <span class="o">=</span> <span class="n">geography</span><span class="p">::</span><span class="n">STGeomFromText</span><span class="p">(</span><span class="s1">&#39;POINT(3 8)&#39;</span><span class="p">,</span> <span class="mi">4326</span><span class="p">);</span>
</span><span class='line'><span class="k">SELECT</span> <span class="o">@</span><span class="n">h</span><span class="p">.</span><span class="n">Lat</span> <span class="k">as</span> <span class="n">geogLat</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In both cases, the value returned is 3. As can be seen, the same WKT string is being used in both cases. The main difference is that one example queries the X value of a GEOMETRY object and the other queries the Lat (Latitude, or Y) value of a GEOGRAPHY object. So, depending on the data type, the same ordinal can be X or Y. You can check out the debate on this topic <a href="http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=2431933&amp;SiteID=1">here</a>. It is a great discussion that covers a lot of ground and I highly recommend checking it out.</p>

<p>For me, the issue is consistency. Regardless of the mindsets of professionals vs. non-professionals or the imprecision of the OGC spec, the bottom line is that the same call behaves differently for two related data types. Admittedly GEOGRAPHY and GEOMETRY do different things. GEOGRAPHY is for geodetic (spherical) data and GEOMETRY is for planar data. This fact, however, has no bearing on how WKT is parsed. The current situation is analagous to having a rounding function that by default rounds up for doubles and rounds down for singles.</p>

<p>At this point, I would normally say pick a method and run with it for both data types but I do have a preference here. I think that WKT should be parsed as X,Y consistently in order to provide better interoperability with a wider variety of client software. The simple fact is that most products out there do X,Y. For instance, I am working with SharpMap and it generates WKT in X,Y order and assumes X,Y order when parsing. Other database platforms such as Oracle, PostGIS and MySQL do the same but it's the client software that matters most in this case. I'm sure that others can chime in with more examples.</p>

<p>I am intrigued by the use of a separate data type to handle geodetic data but the X,Y order of WKT has no bearing here. To my way of thinking, the best approach would be to commit to X,Y order for both GEOMETRY and GEOGRAPHY.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MSDN Article on Mapping with WPF]]></title>
    <link href="http://blog.geomusings.com/2007/12/18/MSDN-Article-on-Mapping-with-WPF/"/>
    <updated>2007-12-18T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2007/12/18/MSDN-Article-on-Mapping-with-WPF</id>
    <content type="html"><![CDATA[<p>I found <a href="http://msdn.microsoft.com/msdnmag/issues/07/12/Maps/default.aspx">this article</a> today about using <a href="http://www.microsoft.com/express/vb/default.aspx">VB9</a> and <a href="http://windowsclient.net/Default.aspx">WPF</a> to draw thematic maps. It's a good walk-through of how to do it. The article admits that the coordinate transformation used is not terribly accurate but that can be rectified. This article is a good example of how to build a mapping application without any third-party components. The author converts Census boundary files to XML for this app. It shouldn't be a stretch to use <a href="http://www.microsoft.com/sql/2008/technologies/spatial.mspx">SQL 2008</a>, <a href="http://postgis.refractions.net">PostGIS</a> or some other database that can emit GML and has an OLEDB provider as a data source.</p>

<p>I've been using WPF with <a href="http://codeplex.com/SharpMap">SharpMap</a> on a project <a href="http://geobabble.wordpress.com/2007/08/14/sharpmap-and-wpf/">for a while</a> but my mapping code is about 5% of the overall project and I haven't had a chance to extract what I've done into something digestable to provide an example. I had to fit into the rendering paradigm of a previously developed GUI so it deviates from how it's shaping up in SharpMap 2.0.</p>

<p>So, if you're looking for an example of how to render spatial data in WPF, this is a good one.</p>
]]></content>
  </entry>
  
</feed>
