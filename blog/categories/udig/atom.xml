<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: udig | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/udig/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2013-03-27T14:00:10-04:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using ArcSDE 9.3 with PostgreSQL, Part 3.5]]></title>
    <link href="http://blog.geomusings.com/2008/08/21/using-arcsde-93-with-postgresql-part-35/"/>
    <updated>2008-08-21T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2008/08/21/using-arcsde-93-with-postgresql-part-35</id>
    <content type="html"><![CDATA[<p>I thought I was done with the series a while back but I've been getting a steady stream of questions through other channels so I thought I'd wrap up a lot of the common stuff in another post. Most of the inquiries come from people trying to integrate <a href="http://www.esri.com/software/arcgis/arcsde/index.html">ArcSDE</a> for <a href="http://www.postgresql.org">PostgreSQL</a> with open-source tools in one way or another. Here are a few notes:<!--more--></p>

<ol type="1">
    <li>If you plan to load data into PostgreSQL with ArcCatalog but plan to edit it with tools such as <a href="http://udig.refractions.net/">uDig</a>, <a href="http://www.gvsig.gva.es/index.php?id=gvsig&amp;L=2">gvSIG</a> or <a href="http://pub.obtusesoft.com/">zigGIS</a>, then you want to do the following:
             <ol type="a">
                  <li>Always load your data with the PG_GEOMETRY configuration keyword. This will cause your spatial objects to be stored in the <a href="http://postgis.refractions.net/">PostGIS</a> format. None of the open-source tools I've used can understand ST_GEOMETRY.</li>
                  <li>Don't version your data. uDig, gvSIG and zigGIS (what I've used) only "see" the DEFAULT version anyway. They can't take advantage of versioning.</li>
                  <li>Although ArcCatalog does put an entry in the PostGIS geometry_columns table, it lists the geometry type as GEOMETRY. gvSIG edits this fine but it seems to monkey with uDig a little. It's not a bad idea to update this with the actual geometry type. These will be string values such as "POLYGON", "MULTIPOLYGON", etc. You'll need to do this if you plan to edit your data with zigGIS from an ArcView desktop.</li>
                  <li>Related to the previous item. If you were to load data using shp2pgsql or any other method that calls the PostGIS <a href="http://postgis.refractions.net/documentation/manual-1.3/ch06.html#id3059786">AddGeometryColumn</a> function, you would end up with constraints on your table limiting the geometry column to a homogenous geometry type (e.g only polygons) and a homogenous SRID. Loading via ArcCatalog doesn't do this (and I've run into other tools that don't as well). Quite frankly ArcSDE manages all of that for itself so it doesn't need such constraints. Without them, however, you can use other tools and mix your geometry types and SRIDs in the table. It's a good idea to add these constraints and I have noticed no ill effects on ArcGIS if you do.</li>
                   <li>As we discovered with zigGIS, there is a difference between the spatial references that are defined by default on the PostGIS spatial_ref_sys table and the ArcSDE sde_spatial_references table. This makes it possible to load data via ArcCatalog that doesn't have a corresponding SRID in the PostGIS table. This would effect your ability to add the previously discussed constraint. It will also throw off open-source tools that look at the spatial_ref_sys table. It's a good idea to update spatial_ref_sys to include those from ArcGIS that are not already supported.</li>
                    <li>ArcCatalog doesn't define a primary key on your spatial table. uDig really doesn't like this so it's best to add a primary key on the objectid column (this has no effect on ArcGIS that I can tell) using the following syntax:
{% codeblock lang:postgres %}
ALTER TABLE myTable
ADD CONSTRAINT mytable_pkey PRIMARY KEY(objectid);
{% endcodeblock %}
gvSIG additionally expects the column with the PK to "auto-number" so you may want to experiment with adding a sequence to the column. The syntax I used to do this is:

 {% codeblock lang:postgres %}
CREATE SEQUENCE mytable_gid_seq
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 408
CACHE 1;
ALTER TABLE mytable_gid_seq OWNER TO postgres;
ALTER TABLE myTable ALTER COLUMN objectid SET DEFAULT nextval(?mytable_gid_seq?::regclass);
{% endcodeblock %}                 
If you're experienced with ArcSDE, you get nervous mucking with the objectid column. I have made both the of the above changes to several data sets and made edits in uDig, gvSIG and ArcMap with no ill effect.</li>
</ol>
<li>If you plan to edit/manage your data using ArcGIS but serve it out using an open-source application like GeoServer or MapServer then there are a few considerations:
            <ol type="a">
            <li>If you plan to use versioning, then be diligent about posting and reconciling with DEFAULT so that any changes want to have show up will. Of course, this assumes you would just be connecting to the PostGIS data. If you connect through ArcSDE, this <em>may</em> be unnecessary.</li>
            <li>Again, use the PG_GEOMETRY keyword.</li>
            <li>The SRID issue discussed in item 1e above <em>may</em> be relevant here as well.</li>
            </ol>
</li>
<li>The implementation of ArcSDE on the PostgreSQL platform is pretty solid. I have been able to do everything I could do on other platforms. So, if you plan to stay in the ESRI environment, go forth an conquer. I think you'll be pleased with PostgreSQL. You may want to bone up on PostgreSQL database administration, though.</li>

Ultimately, support for PostgreSQL by ArcGIS opens up the possibility of numerous technology mixes. It's somewhat uncharted territory and it's not a bad idea, as with any system integration task, to do a little testing and experimentation before moving on with an implementation.

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using ArcSDE 9.3 with PostgreSQL, Part 3]]></title>
    <link href="http://blog.geomusings.com/2008/07/01/using-arcsde-93-with-postgresql-part-3/"/>
    <updated>2008-07-01T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2008/07/01/using-arcsde-93-with-postgresql-part-3</id>
    <content type="html"><![CDATA[<p>Well, 9.3 is now shipping so the sun is setting on my time with the release candidate. One update from my first post: I posted the problem I was having with sdelayer -o register not calculate a default extent on the Beta forum and I got a reply that it shouldn't work that way and they would look at it. I'll probably see shortly whether a fix made it in this time or if I have to wait for a service pack.</p>

<p>The last piece I wanted to cover was working with the layer that I loaded in from a shapefile using ArcCatalog. As I indicated before, I used the PG_GEOMETRY keyword to force the use of PostGIS geometry.</p>

<p>I first left the layer as a simple feature. Within ArcGIS everything behaved as would be expected. I could note no difference in behavior versus what I would expect dealing with any other ArcSDE layer. I was also able to add the layer into uDig, but with a little anomalous behavior.</p>

<p>The layer I was working with was a polygon layer. When I loaded the layer into uDig, it displayed as a polygon layer but the uDig TOC showed a line symbol:</p>

<p><a href="http://geobabble.files.wordpress.com/2008/07/udig_arcsde_layer.png"><img alt="ArcSDE PostgreSQL layers in uDig" class="alignnone size-medium wp-image-205" height="218" src="http://geobabble.files.wordpress.com/2008/07/udig_arcsde_layer.png?w=300" width="300" /></a></p>

<p>Additionally, the fema_regions layer was not editable in uDig. The other layer editable but had the same display issues. To be fair, I had similar behavior with some layers I had loaded into PostGIS from shapefiles using FWTools. In that case, it didn't happen with all of the layers I loaded. In this case, I have not experimented with enough data sets to determine if the behavior is consistent or intermittent. I would also need to test whether it's the loader, PostGIS or uDig. Time has not been a friend here.</p>

<p>Next, I did some experimentation with versioning. I versioned my milbases layer, created a test version, added a feature and save the edit. As expected, when I connected in uDig, it connected to the DEFAULT version and I did not see my edit. Since this layer was editable in uDig, I added a feature here and refreshed my ArcMap display. In this case, I was able to see the uDig-created feature (in DEFAULT) in both versions (again, as expected).</p>

<p>My previous posts have brought a few questions about raster catalogs and the like. I have been able to load raster data and create raster catalogs. This is not, however, raster data in PostGIS. This is ArcSDE raster data next to PostGIS. PostGIS has no idea the raster data is there (although the raster footprints display in uDig as rectangles).</p>

<p>So, depending on how you implement it, ArcSDE for PostgreSQL can provide interoperability between ArcGIS and an open-source stack. uDig can be leveraged in a pinch to edit data loaded into ArcSDE using the PostGIS geometry type, allowing you to expand to meet demand. Additionally, ESRI has implemented the full geodatabase capability within PostgreSQL, providing a great alternative to shops that was GIS but not necessarily Oracle/DB2/SQL Server.</p>

<p>In future posts, I examine different technology mixes that can be used to build some compelling hybrid stacks.</p>

<p>Now, where's my 9.3 shipment?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Little Open-Source Stack]]></title>
    <link href="http://blog.geomusings.com/2007/06/19/my-little-open-source-stack/"/>
    <updated>2007-06-19T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2007/06/19/my-little-open-source-stack</id>
    <content type="html"><![CDATA[<p>It's been a while since I've posted and things have been busy. Soccer season has ended, the kids have finished school and I've finished up at my client site and moved back to the office. Among the many things I've been working on, I've started building an open-source GIS stack. It's not entirely open-source since it's installed on a Windows server but the purists will have to get over that.</p>

<p>So far, I've got <a href="http://www.postgresql.org/">PostgreSQL</a>/<a href="http://postgis.refractions.net/">PostGIS</a> and <a href="http://docs.codehaus.org/display/GEOS/Home">GeoServer 1.5.1</a> installed. I've got GeoServer running as a Windows service and I've loaded a couple of data sets into PostGIS, serving one out through GeoServer for now. I've been able to successfully connect to the <a href="http://www.opengeospatial.org/standards/wms">WMS</a> and <a href="http://www.opengeospatial.org/standards/wfs">WFS</a> remotely using <a href="http://udig.refractions.net/confluence/display/UDIG/Home">uDig</a> as a client. <a href="http://code.google.com/apis/kml/documentation/">KML</a> seems to work fine for the sample data sets that install with GeoServer but my test layer doesn't work correctly. That's not as much of an issue for us right now because we'll probably focus on <a href="http://worldwind.arc.nasa.gov/">World Wind</a> for the spinny globe component. Basically, I'm at the infrastructure-building stage. My next step is to set up <a href="http://www.codeplex.com/SharpMap">SharpMap</a> and start writing some apps.</p>

<p>The only hiccup I've had so far dealt with getting GeoServer to run as a service. Every time I logged out, the service would stop (not a great feature in a service). It turns out that I had the DLL and JARs for the <a href="http://wrapper.tanukisoftware.org/doc/english/introduction.html">Java Service Wrapper</a> in the wrong place. Now it works fine.</p>

<p>So far, I'm impressed with how smoothly it's going. We'll see how long that keeps up once I start slinging code. ;)</p>

<p><img alt="The road less traveled?" src="http://geobabble.files.wordpress.com/2007/06/road.jpg" /></p>
]]></content>
  </entry>
  
</feed>
