<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: database | geoMusings]]></title>
  <link href="http://blog.geomusings.com/blog/categories/database/atom.xml" rel="self"/>
  <link href="http://blog.geomusings.com/"/>
  <updated>2012-12-13T10:18:39-05:00</updated>
  <id>http://blog.geomusings.com/</id>
  <author>
    <name><![CDATA[Bill Dollins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SpatiaLite for Android Available]]></title>
    <link href="http://blog.geomusings.com/2012/11/26/SpatiaLite-for-Android-Available/"/>
    <updated>2012-11-26T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2012/11/26/SpatiaLite-for-Android-Available</id>
    <content type="html"><![CDATA[<p>On what seems to be turning into <a href="http://www.gaia-gis.it/gaia-sins/" target="_blank">SpatiaLite</a> Monday, Sandro Furieri also announced on the <a href="https://groups.google.com/group/spatialite-users?pli=1" target="_blank">SpatiaLite Google Group</a> the availability of a stable version of SpatiaLite for Android.</p>

<p>I am happy to see that this version was developed and contributed back by the <a href="http://www.agc.army.mil/" target="_blank">US Army Geospatial Center</a>. The fact that they contributed back to the project under a standard open-source license is a nice step from a DoD organization.</p>

<p>The message is quoted below:</p>

<blockquote>
Hi List,

I'm really proud to announce you all that finally a rock solid stable and really easy-to-be-deployed binary porting of SpatiaLite for the Android platform is now available for download [1].

[1] <a href="https://www.gaia-gis.it/fossil/libspatialite/wiki?name=splite-android" target="_blank">https://www.gaia-gis.it/fossil/libspatialite/wiki?name=splite-android</a>

Many thanks to the U.S. Army Geospatial Center [2] who very generously contributed this highly appreciated and really useful resource under a genuine free software license (LGPLv3).

[2] <a href="http://www.agc.army.mil/" target="_blank">http://www.agc.army.mil/</a>

A detailed tutorial [3] explaining how-to deploy and use SpatiaLite on Android platforms has been kindly contributed by Andrea Antonello, who spent many long hours during the last week while performing a thorough testing of SpatiaLite-Android, then deciding to publicly share his experiences with the SpatiaLite community. Feel absolutely free to pay a beer to Andrea; he'll surely appreciate ;-)

[3] <a href="https://www.gaia-gis.it/fossil/libspatialite/wiki?name=spatialite-android-tutorial" target="_blank">https://www.gaia-gis.it/fossil/libspatialite/wiki?name=spatialite-android-tutorial</a>

enjoy, Sandro
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SpatiaLite 4.0 Released]]></title>
    <link href="http://blog.geomusings.com/2012/11/26/SpatiaLite-4.0-Released/"/>
    <updated>2012-11-26T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2012/11/26/SpatiaLite-4.0-Released</id>
    <content type="html"><![CDATA[<p>It looks like it was a busy weekend for Sandro Furieri and the rest of the <a href="https://www.gaia-gis.it/fossil/libspatialite/index" target="_blank">SpatiaLite</a> team as version 4.0 was announced on Sunday. There are a number of changes, so it's best to <a href="https://www.gaia-gis.it/fossil/libspatialite/wiki?name=switching-to-4.0" target="_blank">catch up on them</a> before switching over.</p>

<div style="text-align: center;"><a href="http://www.manningltg.com/fixture_show.php?f_id=GCQ-164&amp;f_desc=Spatialite%20(Quartz%20Halogen)"><img alt="" height="300" src="http://www.manningltg.com/product_imgs/web/GCQ-164_1.jpg" title="Not this SpatiaLite" width="490" /></a><div style="text-align: center;font-size: 14px;">Not this SpatiaLite</div></div>


<p>I have a couple of Federal customers that are integrating SpatiaLite into their workflows so I'll need to take a day or so to assess impacts any impacts there. Looks like the perfect way to slide back into work after a long weekend.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Triggered Notifications Using PostGIS]]></title>
    <link href="http://blog.geomusings.com/2011/08/01/Triggered-Notifications-Using-PostGIS/"/>
    <updated>2011-08-01T00:00:00-04:00</updated>
    <id>http://blog.geomusings.com/2011/08/01/Triggered-Notifications-Using-PostGIS</id>
    <content type="html"><![CDATA[<p>My project work the last few months has kept me away from a lot of my favorite open-source tools and I was starting to get hives. Specifically, it had been a while since I had worked with <a href="http://www.postgresql.org">PostgreSQL</a> and <a href="http://postgis.refractions.net">PostGIS</a> and I was missing the experience, so I dreamed up something to do.</p>

<p><img alt="" class="aligncenter size-full wp-image-1898" height="307" src="http://geobabble.files.wordpress.com/2011/08/elephant.png" title="Elephant" width="461" /></p>

<p>I do a lot of work implementing situational awareness systems for my customers and one common requirement is automated notification of events. I decided that I wanted to roll a completely FOSS approach to sending an SMS notification based upon the results of a spatial query. This post will discuss the basic wiring to make it all work. I'll probably add more advanced features in subsequent posts but I'll be sticking to the basics for now.</p>

<!--more-->


<p>I decided to keep my first pass relatively simple in order to work out the core logic and workflow. To get started, I really only needed a few things:</p>

<ol>
    <li>PostgreSQL with PostGIS installed. I simply used the <a href="http://www.opengeo.org">OpenGeo</a> Community Edition.</li>
    <li><a href="http://developer.postgresql.org/pgdocs/postgres/plpython.html">plpython</a> - support for writing PostgreSQL functions in <a href="http://www.python.org">Python</a></li>
    <li>Python - I used version 2.7 for this</li>
    <li>Some spatial data - I loaded a data set of the US counties to test with</li>
</ol>


<p>Using these tools, I set out to create a core workflow that would use a trigger function attached to a point data set to test, whenever a record was inserted or updated, whether the point geometry fell within a specific US county (St. Mary's County, Maryland in this case). If so, the system would send an SMS message to me. In order to do this, I had to create the following:</p>

<ol>
    <li>An empty table with a PostGIS geometry column to store the incoming points</li>
    <li>A trigger function to perform the spatial query on insert or update</li>
    <li>A trigger to fire the trigger function</li>
    <li>A function to send the SMS message</li>
    <li>Some test SQL to insert records into the point table</li>
</ol>


<p>The first step was loading my county data, which I had in shapefile format. For that, I simply used <a href="http://www.qgis.org/">QGIS</a> and its SPIT plug-in. After that, I created the table that would hold my point data. Right now, it's just a point and an ID. The SQL is very simple:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='postgres'><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">locations</span> <span class="p">(</span><span class="n">gid</span> <span class="nb">SERIAL</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">);</span>
</span><span class='line'><span class="k">SELECT</span> <span class="n">AddGeometryColumn</span> <span class="p">(</span><span class="s1">&#39;public&#39;</span><span class="p">,</span><span class="s1">&#39;locations&#39;</span><span class="p">,</span><span class="s1">&#39;shape&#39;</span><span class="p">,</span><span class="mf">4326</span><span class="p">,</span><span class="s1">&#39;POINT&#39;</span><span class="p">,</span><span class="mf">2</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This table is the one that does all the work. The initial trigger will be attached to it. The counties data set really just sits there waiting to be queried. I'll actually take the next three functions in the reverse of the order in which they will execute.</p>

<p>The first function I wrote was the one that sends off the actual SMS message. That is its sole job in this process. After looking at different ways to accomplish the SMS, my old <a href="http://www.obtusesoft.com/">zigGIS</a> partner, <a href="http://twitter.com/xanadont">Abe</a> <a href="http://www.linkedin.com/in/agillesp">Gillespie</a>, clued me in to using each provider's e-mail gateway. So, by sending a properly formatted e-mail, the end user will receive an SMS message. You can learn more about it <a href="http://www.emailtextmessages.com/">here</a>. (Thanks, Abe!) So, my task really just became sending an e-mail message, which is nice because I want support that as well so now I can reuse code. After looking at various means to send e-mail from within PostgreSQL, I decided that Python was the most direct way to accomplish it.</p>

<p>PostgreSQL supports using Python for functions in a manner similar to the way SQL Server supports embedded procedures written against the <a href="http://en.wikipedia.org/wiki/Common_Language_Runtime">Common Language Runtime</a>. You simply need to make sure plpython support is installed with your instance of PostgreSQL. Here is the code for the simplified messaging function:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='postgres'><span class='line'><span class="k">CREATE</span> <span class="k">OR</span> <span class="k">REPLACE</span> <span class="k">FUNCTION</span> <span class="n">emailme</span><span class="p">(</span><span class="n">txt</span> <span class="nb">text</span><span class="p">)</span>
</span><span class='line'>  <span class="k">RETURNS</span> <span class="nb">integer</span> <span class="k">AS</span>
</span><span class='line'><span class="s">$BODY$</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">python</span> <span class="n">starts</span> <span class="n">here</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Import</span> <span class="n">smtplib</span> <span class="k">for</span> <span class="n">the</span> <span class="n">actual</span> <span class="n">sending</span> <span class="n">function</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">smtplib</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">email</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">re</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Import</span> <span class="n">the</span> <span class="n">email</span> <span class="n">modules</span> <span class="n">we</span><span class="s">&#39;ll need&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">email.mime.text</span> <span class="kn">import</span> <span class="n">MIMEText</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">threading</span> <span class="kn">import</span> <span class="n">Thread</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">mailfunction</span><span class="p">(</span><span class="n">recip</span><span class="p">,</span><span class="n">msgtxt</span><span class="p">,</span><span class="o">*</span><span class="n">args</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">msg</span> <span class="o">=</span> <span class="n">MIMEText</span><span class="p">(</span><span class="n">msgtxt</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># me == the sender&#39;s email address</span>
</span><span class='line'><span class="c"># you == the recipient&#39;s email address</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;Subject&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;Message from PostgreSQL&#39;</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;From&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;contact@zekiah.com&#39;</span>
</span><span class='line'><span class="c">#msg[&#39;To&#39;] = &#39;not used here&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Send the message via our own SMTP server, but don&#39;t include the</span>
</span><span class='line'><span class="c"># envelope header.</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">smtplib</span><span class="o">.</span><span class="n">SMTP</span><span class="p">(</span><span class="s">&#39;localhost&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">sendmail</span><span class="p">(</span><span class="s">&#39;contact@zekiah.com&#39;</span><span class="p">,</span> <span class="p">[</span><span class="n">recip</span><span class="p">],</span> <span class="n">msg</span><span class="o">.</span><span class="n">as_string</span><span class="p">())</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">quit</span><span class="p">()</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">t</span> <span class="o">=</span> <span class="n">Thread</span><span class="p">(</span><span class="n">target</span><span class="o">=</span><span class="n">mailfunction</span><span class="p">,</span><span class="n">args</span><span class="o">=</span><span class="p">(</span><span class="s">&#39;1234567890@vtext.com&#39;</span><span class="p">,</span> <span class="n">txt</span><span class="p">))</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span><span class='line'><span class="k">return</span> <span class="mi">0</span>
</span><span class='line'><span class="s">$BODY$</span>
</span><span class='line'>  <span class="k">LANGUAGE</span> <span class="n">plpythonu</span> <span class="k">VOLATILE</span>
</span><span class='line'>  <span class="k">COST</span> <span class="mf">100</span><span class="p">;</span>
</span><span class='line'><span class="k">ALTER</span> <span class="k">FUNCTION</span> <span class="n">emailme</span><span class="p">(</span><span class="nb">text</span><span class="p">)</span> <span class="k">OWNER</span> <span class="k">TO</span> <span class="n">postgres</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>As can be seen, the Python code is embedded in the body of the function. Early on, I was experiencing significant slowness when sending the messages. After some code refactoring, I realized it was the SMTP handshake that was causing the problem. The original version used an external server that required authentication. I installed a local open-source SMTP server and configured it to allow unauthenticated relay from the local server and the bottleneck went away.</p>

<p>This version of the code receives the message body as a parameter and sends to a hard-coded address. I plan to change this to accept the recipient address as well. Then the calling function can pass in an array of recipients who have subscribed to these messages. For now, the system just talks to me.</p>

<p>Next, I built the trigger function. This is a little different from other platforms I've worked on. In SQL Server, a trigger is basically a stored procedure that gets called when a table event happens. When authoring, you simply build the one procedure. In PostgreSQL, you have two distinct objects: a trigger and a trigger function. The trigger function does the heavy lifting and the trigger is what calls it. In my case, the trigger function is what performs the actual spatial query to determine if the new point geometry falls within my county. The code for that function is here:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='postgres'><span class='line'><span class="k">CREATE</span> <span class="k">OR</span> <span class="k">REPLACE</span> <span class="k">Function</span> <span class="n">checkcounty</span><span class="p">()</span> <span class="k">RETURNS</span> <span class="k">TRIGGER</span> <span class="k">AS</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="s">$BODY$</span>
</span><span class='line'><span class="k">DECLARE</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">shp</span> <span class="n">geometry</span><span class="p">;</span>
</span><span class='line'><span class="n">a_row</span> <span class="n">counties</span><span class="nb">%ROWTYPE</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">BEGIN</span>
</span><span class='line'><span class="n">shp</span> <span class="o">=</span> <span class="n">new</span><span class="mf">.</span><span class="n">shape</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">counties</span> <span class="k">WHERE</span> <span class="n">ST_Contains</span><span class="p">(</span><span class="n">counties</span><span class="mf">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">shp</span><span class="p">)</span> <span class="k">INTO</span> <span class="n">a_row</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">IF</span> <span class="n">a_row</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">THEN</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">IF</span> <span class="n">a_row</span><span class="mf">.</span><span class="s-Name">&quot;COUNTY&quot;</span> <span class="o">=</span> <span class="s1">&#39;Saint Marys County&#39;</span> <span class="k">THEN</span>
</span><span class='line'>    <span class="k">PERFORM</span> <span class="n">emailme</span><span class="p">(</span><span class="s1">&#39;New feature in St. Mary`s County&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">END</span> <span class="k">IF</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">END</span> <span class="k">IF</span><span class="p">;</span>
</span><span class='line'><span class="k">RETURN</span> <span class="n">new</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">END</span><span class="p">;</span>
</span><span class='line'><span class="s">$BODY$</span>
</span><span class='line'><span class="k">LANGUAGE</span> <span class="s1">&#39;plpgsql&#39;</span> <span class="k">VOLATILE</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Again, I'm just checking for one, hard-coded value. In my next iteration, I plan to make that configurable so that the trigger function will test for various user-specified conditions. Of course, the type of spatial relationship can also be configured.</p>

<p>Lastly, the trigger itself. As can be seen, it's primary job is to call the trigger function when appropriate.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='postgres'><span class='line'><span class="k">CREATE</span> <span class="k">TRIGGER</span> <span class="n">locations_change</span>
</span><span class='line'>  <span class="k">AFTER</span> <span class="k">INSERT</span> <span class="k">OR</span> <span class="k">UPDATE</span>
</span><span class='line'>  <span class="k">ON</span> <span class="n">locations</span>
</span><span class='line'>  <span class="k">FOR</span> <span class="k">EACH</span> <span class="k">ROW</span>
</span><span class='line'>  <span class="k">EXECUTE</span> <span class="k">PROCEDURE</span> <span class="n">checkcounty</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Once these were all in place, I used the following to test:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='postgres'><span class='line'><span class="c1">--TRUE</span>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">locations</span>
</span><span class='line'><span class="p">(</span><span class="n">shape</span><span class="p">)</span>
</span><span class='line'><span class="k">VALUES</span>
</span><span class='line'><span class="p">(</span><span class="n">ST_PointFromText</span><span class="p">(</span><span class="s1">&#39;POINT(-76.662 38.348)&#39;</span><span class="p">,</span> <span class="mf">4326</span><span class="p">));</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;--</span><span class="k">FALSE</span>
</span><span class='line'><span class="c1">--insert into locations</span>
</span><span class='line'><span class="c1">--(shape)</span>
</span><span class='line'><span class="c1">--VALUES</span>
</span><span class='line'><span class="c1">--(ST_PointFromText(&#39;POINT(-76.622 37.895)&#39;, 4326));&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;--</span><span class="k">NULL</span>
</span><span class='line'><span class="c1">--insert into locations</span>
</span><span class='line'><span class="c1">--(shape)</span>
</span><span class='line'><span class="c1">--VALUES</span>
</span><span class='line'><span class="c1">--(ST_PointFromText(&#39;POINT(-74.482 37.734)&#39;, 4326));</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>These objects represent the basic skeleton of the notification capability I am building. In the future, I also want to support various types of messaging in addition to SMS and e-mail. I'm thinking of Twitter, publishing to RSS or Atom and other such options.</p>

<p>Even at this early stage, I've got to consider performance. The spatial query in the trigger is performing amazingly fast but my data is still small. I've got spatial indices built on the data sets but I'll need to keep an eye on that as this grows. Thankfully, <a href="http://www.manning.com/obe/">'PostGIS In Action'</a> offers lots of tips in that regard. Another design consideration I've made is that all of my spatial data sets will be stored in the same spatial reference. PostGIS has nice coordinate transformation capabilities but I don't want to introduce that into my trigger functions in case data starts to grow. I plan to pre-process buffers and such for the same reasons.</p>

<p>I'm pretty happy with this so far primarily because all of the logic is executing at the database level. There's really no need to extract any of this logic out into a middle-tier library of any kind and it's running without any dependence on any middleware. It's also a nice use of spatial processing that doesn't involve a map. I love maps but they aren't necessary in every application of spatial technology. I'm also excited to have a meaty requirement to dig into to help with my Python explorations. I've missed working with these tools. It's good to be back.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL Server 2008 WKT X/Y Switching Illustrated]]></title>
    <link href="http://blog.geomusings.com/2007/12/18/SQL-Server-2008-WKT-XY-Switching-Illustrated/"/>
    <updated>2007-12-18T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2007/12/18/SQL-Server-2008-WKT-XY-Switching-Illustrated</id>
    <content type="html"><![CDATA[<p><strong>UPDATE:</strong> Microsoft has <a href="http://blogs.msdn.com/isaac/archive/2007/12/27/latitude-longitude-ordering.aspx">announced</a> that they will address this issue in an upcoming CTP. They plan to implement longitude-latitude ordering in WKB and WKT for both the geography and geometry types.</p>

<p>In a response to my <a href="http://geobabble.wordpress.com/2007/12/18/inserting-sql-2008-geometry-with-a-sqlcommand/">previous post</a>, <a href="http://www.spatialdatalogic.com/cs/blogs/brian_flood/default.aspx">Brian Flood</a> mentioned the ongoing discussion about <a href="http://www.microsoft.com/sql/2008/technologies/spatial.mspx">SQL Server 2008</a> and the "switching" of X and Y values in <a href="http://en.wikipedia.org/wiki/Well-known_text">WKT</a> strings depending upon which spatial data type, geometry or geography, is being used. The SQL snippet below boils the issue down to a simple example:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">DECLARE</span> <span class="o">@</span><span class="k">g</span> <span class="n">geometry</span><span class="p">;</span>
</span><span class='line'><span class="k">SET</span> <span class="o">@</span><span class="k">g</span> <span class="o">=</span> <span class="n">geometry</span><span class="p">::</span><span class="n">STGeomFromText</span><span class="p">(</span><span class="s1">&#39;POINT(3 8)&#39;</span><span class="p">,</span> <span class="mi">4326</span><span class="p">);</span>
</span><span class='line'><span class="k">SELECT</span> <span class="o">@</span><span class="k">g</span><span class="p">.</span><span class="n">STX</span> <span class="k">as</span> <span class="n">geomX</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">DECLARE</span> <span class="o">@</span><span class="n">h</span> <span class="n">geography</span><span class="p">;</span>
</span><span class='line'><span class="k">SET</span> <span class="o">@</span><span class="n">h</span> <span class="o">=</span> <span class="n">geography</span><span class="p">::</span><span class="n">STGeomFromText</span><span class="p">(</span><span class="s1">&#39;POINT(3 8)&#39;</span><span class="p">,</span> <span class="mi">4326</span><span class="p">);</span>
</span><span class='line'><span class="k">SELECT</span> <span class="o">@</span><span class="n">h</span><span class="p">.</span><span class="n">Lat</span> <span class="k">as</span> <span class="n">geogLat</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In both cases, the value returned is 3. As can be seen, the same WKT string is being used in both cases. The main difference is that one example queries the X value of a GEOMETRY object and the other queries the Lat (Latitude, or Y) value of a GEOGRAPHY object. So, depending on the data type, the same ordinal can be X or Y. You can check out the debate on this topic <a href="http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=2431933&amp;SiteID=1">here</a>. It is a great discussion that covers a lot of ground and I highly recommend checking it out.</p>

<p>For me, the issue is consistency. Regardless of the mindsets of professionals vs. non-professionals or the imprecision of the OGC spec, the bottom line is that the same call behaves differently for two related data types. Admittedly GEOGRAPHY and GEOMETRY do different things. GEOGRAPHY is for geodetic (spherical) data and GEOMETRY is for planar data. This fact, however, has no bearing on how WKT is parsed. The current situation is analagous to having a rounding function that by default rounds up for doubles and rounds down for singles.</p>

<p>At this point, I would normally say pick a method and run with it for both data types but I do have a preference here. I think that WKT should be parsed as X,Y consistently in order to provide better interoperability with a wider variety of client software. The simple fact is that most products out there do X,Y. For instance, I am working with SharpMap and it generates WKT in X,Y order and assumes X,Y order when parsing. Other database platforms such as Oracle, PostGIS and MySQL do the same but it's the client software that matters most in this case. I'm sure that others can chime in with more examples.</p>

<p>I am intrigued by the use of a separate data type to handle geodetic data but the X,Y order of WKT has no bearing here. To my way of thinking, the best approach would be to commit to X,Y order for both GEOMETRY and GEOGRAPHY.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL Server 2008 SharpMap Data Provider Code]]></title>
    <link href="http://blog.geomusings.com/2007/11/28/SQL-Server-2008-SharpMap-Data-Provider-Code/"/>
    <updated>2007-11-28T00:00:00-05:00</updated>
    <id>http://blog.geomusings.com/2007/11/28/SQL-Server-2008-SharpMap-Data-Provider-Code</id>
    <content type="html"><![CDATA[<p>As promised, I have uploaded the data provider code I <a href="http://geobabble.wordpress.com/2007/11/20/sharpmap-and-sql-server-2008-spatial/">mentioned earlier</a> to the <a href="http://www.codeplex.com/SharpMap">SharpMap</a> site. It's written in C#. I took the existing Oracle provider, stripped out the Oracle SQL and put in T-SQL. There are a couple of things I'm still trying to chase down but it's basically done at this point. I know they're busy trying to finish up SharpMap 2.0 so I don't know how long it'll take to become available. Just in case, here's the code:<!--more--></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
<span class='line-number'>419</span>
<span class='line-number'>420</span>
<span class='line-number'>421</span>
<span class='line-number'>422</span>
<span class='line-number'>423</span>
<span class='line-number'>424</span>
<span class='line-number'>425</span>
<span class='line-number'>426</span>
<span class='line-number'>427</span>
<span class='line-number'>428</span>
<span class='line-number'>429</span>
<span class='line-number'>430</span>
<span class='line-number'>431</span>
<span class='line-number'>432</span>
<span class='line-number'>433</span>
<span class='line-number'>434</span>
<span class='line-number'>435</span>
<span class='line-number'>436</span>
<span class='line-number'>437</span>
<span class='line-number'>438</span>
<span class='line-number'>439</span>
<span class='line-number'>440</span>
<span class='line-number'>441</span>
<span class='line-number'>442</span>
<span class='line-number'>443</span>
<span class='line-number'>444</span>
<span class='line-number'>445</span>
<span class='line-number'>446</span>
<span class='line-number'>447</span>
<span class='line-number'>448</span>
<span class='line-number'>449</span>
<span class='line-number'>450</span>
<span class='line-number'>451</span>
<span class='line-number'>452</span>
<span class='line-number'>453</span>
<span class='line-number'>454</span>
<span class='line-number'>455</span>
<span class='line-number'>456</span>
<span class='line-number'>457</span>
<span class='line-number'>458</span>
<span class='line-number'>459</span>
<span class='line-number'>460</span>
<span class='line-number'>461</span>
<span class='line-number'>462</span>
<span class='line-number'>463</span>
<span class='line-number'>464</span>
<span class='line-number'>465</span>
<span class='line-number'>466</span>
<span class='line-number'>467</span>
<span class='line-number'>468</span>
<span class='line-number'>469</span>
<span class='line-number'>470</span>
<span class='line-number'>471</span>
<span class='line-number'>472</span>
<span class='line-number'>473</span>
<span class='line-number'>474</span>
<span class='line-number'>475</span>
<span class='line-number'>476</span>
<span class='line-number'>477</span>
<span class='line-number'>478</span>
<span class='line-number'>479</span>
<span class='line-number'>480</span>
<span class='line-number'>481</span>
<span class='line-number'>482</span>
<span class='line-number'>483</span>
<span class='line-number'>484</span>
<span class='line-number'>485</span>
<span class='line-number'>486</span>
<span class='line-number'>487</span>
<span class='line-number'>488</span>
<span class='line-number'>489</span>
<span class='line-number'>490</span>
<span class='line-number'>491</span>
<span class='line-number'>492</span>
<span class='line-number'>493</span>
<span class='line-number'>494</span>
<span class='line-number'>495</span>
<span class='line-number'>496</span>
<span class='line-number'>497</span>
<span class='line-number'>498</span>
<span class='line-number'>499</span>
<span class='line-number'>500</span>
<span class='line-number'>501</span>
<span class='line-number'>502</span>
<span class='line-number'>503</span>
<span class='line-number'>504</span>
<span class='line-number'>505</span>
<span class='line-number'>506</span>
<span class='line-number'>507</span>
<span class='line-number'>508</span>
<span class='line-number'>509</span>
<span class='line-number'>510</span>
<span class='line-number'>511</span>
<span class='line-number'>512</span>
<span class='line-number'>513</span>
<span class='line-number'>514</span>
<span class='line-number'>515</span>
<span class='line-number'>516</span>
<span class='line-number'>517</span>
<span class='line-number'>518</span>
<span class='line-number'>519</span>
<span class='line-number'>520</span>
<span class='line-number'>521</span>
<span class='line-number'>522</span>
<span class='line-number'>523</span>
<span class='line-number'>524</span>
<span class='line-number'>525</span>
<span class='line-number'>526</span>
<span class='line-number'>527</span>
<span class='line-number'>528</span>
<span class='line-number'>529</span>
<span class='line-number'>530</span>
<span class='line-number'>531</span>
<span class='line-number'>532</span>
<span class='line-number'>533</span>
<span class='line-number'>534</span>
<span class='line-number'>535</span>
<span class='line-number'>536</span>
<span class='line-number'>537</span>
<span class='line-number'>538</span>
<span class='line-number'>539</span>
<span class='line-number'>540</span>
<span class='line-number'>541</span>
<span class='line-number'>542</span>
<span class='line-number'>543</span>
<span class='line-number'>544</span>
<span class='line-number'>545</span>
<span class='line-number'>546</span>
<span class='line-number'>547</span>
<span class='line-number'>548</span>
<span class='line-number'>549</span>
<span class='line-number'>550</span>
<span class='line-number'>551</span>
<span class='line-number'>552</span>
<span class='line-number'>553</span>
<span class='line-number'>554</span>
<span class='line-number'>555</span>
<span class='line-number'>556</span>
<span class='line-number'>557</span>
<span class='line-number'>558</span>
<span class='line-number'>559</span>
<span class='line-number'>560</span>
<span class='line-number'>561</span>
<span class='line-number'>562</span>
<span class='line-number'>563</span>
<span class='line-number'>564</span>
<span class='line-number'>565</span>
<span class='line-number'>566</span>
<span class='line-number'>567</span>
<span class='line-number'>568</span>
<span class='line-number'>569</span>
<span class='line-number'>570</span>
<span class='line-number'>571</span>
<span class='line-number'>572</span>
<span class='line-number'>573</span>
<span class='line-number'>574</span>
<span class='line-number'>575</span>
<span class='line-number'>576</span>
<span class='line-number'>577</span>
<span class='line-number'>578</span>
<span class='line-number'>579</span>
<span class='line-number'>580</span>
<span class='line-number'>581</span>
<span class='line-number'>582</span>
<span class='line-number'>583</span>
<span class='line-number'>584</span>
<span class='line-number'>585</span>
<span class='line-number'>586</span>
<span class='line-number'>587</span>
<span class='line-number'>588</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="c1">// Copyright 2008 - William Dollins</span>
</span><span class='line'><span class="c1">// SQL Server 2008 by William Dollins (dollins.bill@gmail.com)</span>
</span><span class='line'><span class="c1">// Based on Oracle provider by Humberto Ferreira (humbertojdf@hotmail.com)</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// Date 2007-11-28</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// This file is part of SharpMap.</span>
</span><span class='line'><span class="c1">// SharpMap is free software; you can redistribute it and/or modify</span>
</span><span class='line'><span class="c1">// it under the terms of the GNU Lesser General Public License as published by</span>
</span><span class='line'><span class="c1">// the Free Software Foundation; either version 2 of the License, or</span>
</span><span class='line'><span class="c1">// (at your option) any later version.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// SharpMap is distributed in the hope that it will be useful,</span>
</span><span class='line'><span class="c1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
</span><span class='line'><span class="c1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
</span><span class='line'><span class="c1">// GNU Lesser General Public License for more details.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="c1">// You should have received a copy of the GNU Lesser General Public License</span>
</span><span class='line'><span class="c1">// along with SharpMap; if not, write to the Free Software</span>
</span><span class='line'><span class="c1">// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Collections.ObjectModel</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Data.SqlClient</span><span class="p">;&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="k">namespace</span> <span class="nn">SharpMap.Data.Providers</span>
</span><span class='line'><span class="p">{&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="c1">/// </span>
</span><span class='line'><span class="c1">/// SQL Server 2008 data provider</span>
</span><span class='line'><span class="c1">/// </span>
</span><span class='line'><span class="c1">/// </span>
</span><span class='line'><span class="c1">/// This provider was developed against the SQL Server 2008 November CTP. The platform may change significantly before release.</span>
</span><span class='line'><span class="c1">/// </span>
</span><span class='line'><span class="c1">/// Adding a datasource to a layer:</span>
</span><span class='line'><span class="c1">/// &amp;lt;code lang=&quot;C#&quot;&amp;gt;</span>
</span><span class='line'><span class="c1">/// SharpMap.Layers.VectorLayer myLayer = new SharpMap.Layers.VectorLayer(&quot;My layer&quot;);</span>
</span><span class='line'><span class="c1">/// string ConnStr = &quot;Provider=SQLOLEDB.1;Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=myDB;Data Source=myServer\myInstance&quot;;</span>
</span><span class='line'><span class="c1">/// myLayer.DataSource = new SharpMap.Data.Providers.Katmai(ConnStr, &quot;myTable&quot;, &quot;GeomColumn&quot;, &quot;OidColumn&quot;);</span>
</span><span class='line'><span class="c1">/// &amp;lt;/code&amp;gt;</span>
</span><span class='line'><span class="c1">/// </span>
</span><span class='line'><span class="c1">/// SharpMap SQL Server 2008 provider by Bill Dollins (dollins.bill@gmail.com). Based on the Oracle provider written by Humberto Ferreira.</span>
</span><span class='line'><span class="c1">/// </span>
</span><span class='line'><span class="na">[Serializable]</span>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">Katmai</span> <span class="p">:</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">Providers</span><span class="p">.</span><span class="n">IProvider</span><span class="p">,</span> <span class="n">IDisposable</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Initializes a new connection to SQL Server</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Connectionstring</span>
</span><span class='line'>    <span class="c1">/// Name of data table</span>
</span><span class='line'>    <span class="c1">/// Name of geometry column</span>
</span><span class='line'>    <span class="c1">/// /// Name of column with unique identifier</span>
</span><span class='line'>    <span class="k">public</span> <span class="nf">Katmai</span><span class="p">(</span><span class="kt">string</span> <span class="n">ConnectionStr</span><span class="p">,</span> <span class="kt">string</span> <span class="n">tablename</span><span class="p">,</span> <span class="kt">string</span> <span class="n">geometryColumnName</span><span class="p">,</span> <span class="kt">string</span> <span class="n">OID_ColumnName</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">//Provider=SQLOLEDB.1;Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=ztTest;Data Source=\</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">ConnectionString</span> <span class="p">=</span> <span class="n">ConnectionStr</span><span class="p">;</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">=</span> <span class="n">tablename</span><span class="p">;</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">=</span> <span class="n">geometryColumnName</span><span class="p">;</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">ObjectIdColumn</span> <span class="p">=</span> <span class="n">OID_ColumnName</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Initializes a new connection to SQL Server</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Connectionstring</span>
</span><span class='line'>    <span class="c1">/// Name of data table</span>
</span><span class='line'>    <span class="c1">/// Name of column with unique identifier</span>
</span><span class='line'>    <span class="k">public</span> <span class="nf">Katmai</span><span class="p">(</span><span class="kt">string</span> <span class="n">ConnectionStr</span><span class="p">,</span> <span class="kt">string</span> <span class="n">tablename</span><span class="p">,</span> <span class="kt">string</span> <span class="n">OID_ColumnName</span><span class="p">)</span> <span class="p">:</span> <span class="k">this</span><span class="p">(</span><span class="n">ConnectionStr</span><span class="p">,</span><span class="n">tablename</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="n">OID_ColumnName</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">=</span> <span class="s">&quot;shape&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">bool</span> <span class="n">_IsOpen</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns true if the datasource is currently open</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">bool</span> <span class="n">IsOpen</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_IsOpen</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Opens the datasource</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">Open</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">//Don&#39;t really do anything.</span>
</span><span class='line'>        <span class="n">_IsOpen</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Closes the datasource</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">Close</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">//Don&#39;t really do anything.</span>
</span><span class='line'>        <span class="n">_IsOpen</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="cp">#region Disposers and finalizers</span>
</span><span class='line'>    <span class="k">private</span> <span class="kt">bool</span> <span class="n">disposed</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Disposes the object</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">Dispose</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Dispose</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
</span><span class='line'>        <span class="n">GC</span><span class="p">.</span><span class="n">SuppressFinalize</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">internal</span> <span class="k">void</span> <span class="nf">Dispose</span><span class="p">(</span><span class="kt">bool</span> <span class="n">disposing</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(!</span><span class="n">disposed</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">disposing</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="c1">//Close();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">disposed</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Finalizer</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="p">~</span><span class="n">Katmai</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Dispose</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cp">#endregion</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">string</span> <span class="n">_ConnectionString</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Connectionstring</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">ConnectionString</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_ConnectionString</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">set</span> <span class="p">{</span> <span class="n">_ConnectionString</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">string</span> <span class="n">_Table</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Data table name</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">Table</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_Table</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">set</span> <span class="p">{</span> <span class="n">_Table</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">string</span> <span class="n">_GeometryColumn</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Name of geometry column</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">GeometryColumn</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_GeometryColumn</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">set</span> <span class="p">{</span> <span class="n">_GeometryColumn</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">string</span> <span class="n">_ObjectIdColumn</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Name of column that contains the Object ID</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">ObjectIdColumn</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_ObjectIdColumn</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">set</span> <span class="p">{</span> <span class="n">_ObjectIdColumn</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns geometries within the specified bounding box</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="n">Collection</span> <span class="nf">GetGeometriesInView</span><span class="p">(</span><span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">BoundingBox</span> <span class="n">bbox</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Collection</span> <span class="n">features</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Collection</span><span class="p">();</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">//Get bounding box string</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strBbox</span> <span class="p">=</span> <span class="n">GetBoxFilterStr</span><span class="p">(</span><span class="n">bbox</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;SELECT g.&quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span><span class="s">&quot;.STAsBinary() &quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="n">strSQL</span> <span class="p">+=</span> <span class="s">&quot; FROM &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">+</span> <span class="s">&quot; g WHERE &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">String</span><span class="p">.</span><span class="n">IsNullOrEmpty</span><span class="p">(</span><span class="n">_defintionQuery</span><span class="p">))</span>
</span><span class='line'>                <span class="n">strSQL</span> <span class="p">+=</span> <span class="k">this</span><span class="p">.</span><span class="n">DefinitionQuery</span> <span class="p">+</span> <span class="s">&quot; AND &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">strSQL</span> <span class="p">+=</span> <span class="n">strBbox</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlCommand</span> <span class="n">command</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>                <span class="k">using</span> <span class="p">(</span><span class="n">SqlDataReader</span> <span class="n">dr</span> <span class="p">=</span> <span class="n">command</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="k">while</span> <span class="p">(</span><span class="n">dr</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">dr</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">!=</span> <span class="n">DBNull</span><span class="p">.</span><span class="n">Value</span><span class="p">)</span>
</span><span class='line'>                        <span class="p">{</span>
</span><span class='line'>                            <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Geometry</span> <span class="n">geom</span> <span class="p">=</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Converters</span><span class="p">.</span><span class="n">WellKnownBinary</span><span class="p">.</span><span class="n">GeometryFromWKB</span><span class="p">.</span><span class="n">Parse</span><span class="p">((</span><span class="kt">byte</span><span class="p">[])</span><span class="n">dr</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
</span><span class='line'>                            <span class="k">if</span><span class="p">(</span><span class="n">geom</span><span class="p">!=</span><span class="k">null</span><span class="p">)</span>
</span><span class='line'>                                <span class="n">features</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">geom</span><span class="p">);</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">features</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns the geometry corresponding to the Object ID</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Object ID</span>
</span><span class='line'>    <span class="c1">/// geometry</span>
</span><span class='line'>    <span class="k">public</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Geometry</span> <span class="n">GetGeometryByID</span><span class="p">(</span><span class="kt">uint</span> <span class="n">oid</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Geometry</span> <span class="n">geom</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;SELECT g.&quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span> <span class="s">&quot;.STAsBinary() FROM &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">+</span> <span class="s">&quot; g WHERE &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">ObjectIdColumn</span> <span class="p">+</span> <span class="s">&quot;=&#39;&quot;</span> <span class="p">+</span> <span class="n">oid</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="s">&quot;&#39;&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlCommand</span> <span class="n">command</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">using</span> <span class="p">(</span><span class="n">SqlDataReader</span> <span class="n">dr</span> <span class="p">=</span> <span class="n">command</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="k">while</span> <span class="p">(</span><span class="n">dr</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">dr</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">!=</span> <span class="n">DBNull</span><span class="p">.</span><span class="n">Value</span><span class="p">)</span>
</span><span class='line'>                            <span class="n">geom</span> <span class="p">=</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Converters</span><span class="p">.</span><span class="n">WellKnownBinary</span><span class="p">.</span><span class="n">GeometryFromWKB</span><span class="p">.</span><span class="n">Parse</span><span class="p">((</span><span class="kt">byte</span><span class="p">[])</span><span class="n">dr</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">geom</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns geometry Object IDs whose bounding box intersects &#39;bbox&#39;</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="n">Collection</span> <span class="nf">GetObjectIDsInView</span><span class="p">(</span><span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">BoundingBox</span> <span class="n">bbox</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Collection</span> <span class="n">objectlist</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Collection</span><span class="p">();</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">//Get bounding box string</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strBbox</span> <span class="p">=</span> <span class="n">GetBoxFilterStr</span><span class="p">(</span><span class="n">bbox</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;SELECT g.&quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">ObjectIdColumn</span> <span class="p">+</span> <span class="s">&quot; &quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="n">strSQL</span> <span class="p">+=</span> <span class="s">&quot;FROM &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">+</span> <span class="s">&quot; g WHERE &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">String</span><span class="p">.</span><span class="n">IsNullOrEmpty</span><span class="p">(</span><span class="n">_defintionQuery</span><span class="p">))</span>
</span><span class='line'>                <span class="n">strSQL</span> <span class="p">+=</span> <span class="k">this</span><span class="p">.</span><span class="n">DefinitionQuery</span> <span class="p">+</span> <span class="s">&quot; AND &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">strSQL</span> <span class="p">+=</span> <span class="n">strBbox</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlCommand</span> <span class="n">command</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>                <span class="k">using</span> <span class="p">(</span><span class="n">SqlDataReader</span> <span class="n">dr</span> <span class="p">=</span> <span class="n">command</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="k">while</span> <span class="p">(</span><span class="n">dr</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">dr</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">!=</span> <span class="n">DBNull</span><span class="p">.</span><span class="n">Value</span><span class="p">)</span>
</span><span class='line'>                        <span class="p">{</span>
</span><span class='line'>                            <span class="kt">uint</span> <span class="n">ID</span> <span class="p">=</span> <span class="p">(</span><span class="kt">uint</span><span class="p">)(</span><span class="kt">decimal</span><span class="p">)</span><span class="n">dr</span><span class="p">[</span><span class="m">0</span><span class="p">];</span>
</span><span class='line'>                            <span class="n">objectlist</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">ID</span><span class="p">);</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">objectlist</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns the box filter string needed in SQL query</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">private</span> <span class="kt">string</span> <span class="nf">GetBoxFilterStr</span><span class="p">(</span><span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">BoundingBox</span> <span class="n">bbox</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">//geography::STGeomFromText(&#39;LINESTRING(47.656 -122.360, 47.656 -122.343)&#39;, 4326);</span>
</span><span class='line'>        <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">LinearRing</span> <span class="n">lr</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">LinearRing</span><span class="p">();</span>
</span><span class='line'>        <span class="n">lr</span><span class="p">.</span><span class="n">Vertices</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Point</span><span class="p">(</span><span class="n">bbox</span><span class="p">.</span><span class="n">Left</span><span class="p">,</span> <span class="n">bbox</span><span class="p">.</span><span class="n">Bottom</span><span class="p">));</span>
</span><span class='line'>        <span class="n">lr</span><span class="p">.</span><span class="n">Vertices</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Point</span><span class="p">(</span><span class="n">bbox</span><span class="p">.</span><span class="n">Right</span><span class="p">,</span> <span class="n">bbox</span><span class="p">.</span><span class="n">Bottom</span><span class="p">));</span>
</span><span class='line'>        <span class="n">lr</span><span class="p">.</span><span class="n">Vertices</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Point</span><span class="p">(</span><span class="n">bbox</span><span class="p">.</span><span class="n">Right</span><span class="p">,</span> <span class="n">bbox</span><span class="p">.</span><span class="n">Top</span><span class="p">));</span>
</span><span class='line'>        <span class="n">lr</span><span class="p">.</span><span class="n">Vertices</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Point</span><span class="p">(</span><span class="n">bbox</span><span class="p">.</span><span class="n">Left</span><span class="p">,</span> <span class="n">bbox</span><span class="p">.</span><span class="n">Top</span><span class="p">));</span>
</span><span class='line'>        <span class="n">lr</span><span class="p">.</span><span class="n">Vertices</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Point</span><span class="p">(</span><span class="n">bbox</span><span class="p">.</span><span class="n">Left</span><span class="p">,</span> <span class="n">bbox</span><span class="p">.</span><span class="n">Bottom</span><span class="p">));</span>
</span><span class='line'>        <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Polygon</span> <span class="n">p</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Polygon</span><span class="p">(</span><span class="n">lr</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">string</span> <span class="n">bboxText</span> <span class="p">=</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Converters</span><span class="p">.</span><span class="n">WellKnownText</span><span class="p">.</span><span class="n">GeometryToWKT</span><span class="p">.</span><span class="n">Write</span><span class="p">((</span><span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">IGeometry</span><span class="p">)</span><span class="n">p</span><span class="p">);</span> <span class="c1">// &quot;&quot;;</span>
</span><span class='line'>        <span class="kt">string</span> <span class="n">whereClause</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span> <span class="s">&quot;.STIntersects(geometry::STGeomFromText(&#39;&quot;</span> <span class="p">+</span> <span class="n">bboxText</span> <span class="p">+</span> <span class="s">&quot;&#39;, &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">SRID</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="s">&quot;)) = 1&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">whereClause</span><span class="p">;</span> <span class="c1">// strBbox;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns the features that intersects with &#39;geom&#39;</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// FeatureDataSet to fill data into</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">ExecuteIntersectionQuery</span><span class="p">(</span><span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Geometry</span> <span class="n">geom</span><span class="p">,</span> <span class="n">FeatureDataSet</span> <span class="n">ds</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">List</span> <span class="n">features</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">();</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">//TODO: Convert to SQL Server</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strGeom</span> <span class="p">=</span> <span class="s">&quot;geography::STGeomFromText(&#39;&quot;</span> <span class="p">+</span> <span class="n">geom</span><span class="p">.</span><span class="n">AsText</span><span class="p">()</span> <span class="p">+</span> <span class="s">&quot;&#39;, #SRID#)&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">SRID</span> <span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">strGeom</span> <span class="p">=</span> <span class="n">strGeom</span><span class="p">.</span><span class="n">Replace</span><span class="p">(</span><span class="s">&quot;#SRID#&quot;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">SRID</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">strGeom</span> <span class="p">=</span> <span class="n">strGeom</span><span class="p">.</span><span class="n">Replace</span><span class="p">(</span><span class="s">&quot;#SRID#&quot;</span><span class="p">,</span> <span class="s">&quot;0&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">strGeom</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span> <span class="s">&quot;.STIntersects(&quot;</span> <span class="p">+</span> <span class="n">strGeom</span> <span class="p">+</span> <span class="s">&quot;) = 1&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;SELECT g.* , g.&quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span> <span class="s">&quot;).STAsBinary() As sharpmap_tempgeometry FROM &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">+</span> <span class="s">&quot; g WHERE &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">String</span><span class="p">.</span><span class="n">IsNullOrEmpty</span><span class="p">(</span><span class="n">_defintionQuery</span><span class="p">))</span>
</span><span class='line'>                <span class="n">strSQL</span> <span class="p">+=</span> <span class="k">this</span><span class="p">.</span><span class="n">DefinitionQuery</span> <span class="p">+</span> <span class="s">&quot; AND &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">strSQL</span> <span class="p">+=</span> <span class="n">strGeom</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlDataAdapter</span> <span class="n">adapter</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlDataAdapter</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>                <span class="n">adapter</span><span class="p">.</span><span class="n">Fill</span><span class="p">(</span><span class="n">ds</span><span class="p">);</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">.</span><span class="n">Count</span> <span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">FeatureDataTable</span> <span class="n">fdt</span> <span class="p">=</span> <span class="k">new</span> <span class="n">FeatureDataTable</span><span class="p">(</span><span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
</span><span class='line'>                    <span class="k">foreach</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataColumn</span> <span class="n">col</span> <span class="k">in</span> <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Columns</span><span class="p">)</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">&amp;</span><span class="n">amp</span><span class="p">;&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">)</span>
</span><span class='line'>                            <span class="n">fdt</span><span class="p">.</span><span class="n">Columns</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span><span class="p">,</span> <span class="n">col</span><span class="p">.</span><span class="n">DataType</span><span class="p">,</span> <span class="n">col</span><span class="p">.</span><span class="n">Expression</span><span class="p">);</span>
</span><span class='line'>                    <span class="k">foreach</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataRow</span> <span class="n">dr</span> <span class="k">in</span> <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Rows</span><span class="p">)</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">SharpMap</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">FeatureDataRow</span> <span class="n">fdr</span> <span class="p">=</span> <span class="n">fdt</span><span class="p">.</span><span class="n">NewRow</span><span class="p">();</span>
</span><span class='line'>                        <span class="k">foreach</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataColumn</span> <span class="n">col</span> <span class="k">in</span> <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Columns</span><span class="p">)</span>
</span><span class='line'>                            <span class="k">if</span> <span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">&amp;</span><span class="n">amp</span><span class="p">;&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">)</span>
</span><span class='line'>                                <span class="n">fdr</span><span class="p">[</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span><span class="p">]</span> <span class="p">=</span> <span class="n">dr</span><span class="p">[</span><span class="n">col</span><span class="p">];</span>
</span><span class='line'>                        <span class="n">fdr</span><span class="p">.</span><span class="n">Geometry</span> <span class="p">=</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Converters</span><span class="p">.</span><span class="n">WellKnownBinary</span><span class="p">.</span><span class="n">GeometryFromWKB</span><span class="p">.</span><span class="n">Parse</span><span class="p">((</span><span class="kt">byte</span><span class="p">[])</span><span class="n">dr</span><span class="p">[</span><span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">]);</span>
</span><span class='line'>                        <span class="n">fdt</span><span class="p">.</span><span class="n">AddRow</span><span class="p">(</span><span class="n">fdr</span><span class="p">);</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                    <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">fdt</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Convert WellKnownText to linestrings</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">private</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">LineString</span> <span class="n">WktToLineString</span><span class="p">(</span><span class="kt">string</span> <span class="n">WKT</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">LineString</span> <span class="n">line</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">LineString</span><span class="p">();</span>
</span><span class='line'>        <span class="n">WKT</span> <span class="p">=</span> <span class="n">WKT</span><span class="p">.</span><span class="n">Substring</span><span class="p">(</span><span class="n">WKT</span><span class="p">.</span><span class="n">LastIndexOf</span><span class="p">(</span><span class="sc">&#39;(&#39;</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">).</span><span class="n">Split</span><span class="p">(</span><span class="sc">&#39;)&#39;</span><span class="p">)[</span><span class="m">0</span><span class="p">];</span>
</span><span class='line'>        <span class="kt">string</span><span class="p">[]</span> <span class="n">strPoints</span> <span class="p">=</span> <span class="n">WKT</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="sc">&#39;,&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">strPoint</span> <span class="k">in</span> <span class="n">strPoints</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">string</span><span class="p">[]</span> <span class="n">coord</span> <span class="p">=</span> <span class="n">strPoint</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="sc">&#39; &#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="n">line</span><span class="p">.</span><span class="n">Vertices</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Point</span><span class="p">(</span><span class="kt">double</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">coord</span><span class="p">[</span><span class="m">0</span><span class="p">],</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Map</span><span class="p">.</span><span class="n">numberFormat_EnUS</span><span class="p">),</span> <span class="kt">double</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">coord</span><span class="p">[</span><span class="m">1</span><span class="p">],</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Map</span><span class="p">.</span><span class="n">numberFormat_EnUS</span><span class="p">)));</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">line</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns the number of features in the dataset</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// number of features</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">int</span> <span class="nf">GetFeatureCount</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">count</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;SELECT COUNT(*) FROM &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">String</span><span class="p">.</span><span class="n">IsNullOrEmpty</span><span class="p">(</span><span class="n">_defintionQuery</span><span class="p">))</span>
</span><span class='line'>                <span class="n">strSQL</span> <span class="p">+=</span> <span class="s">&quot; WHERE &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">DefinitionQuery</span><span class="p">;</span>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlCommand</span> <span class="n">command</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>                <span class="n">count</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">command</span><span class="p">.</span><span class="n">ExecuteScalar</span><span class="p">();</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">count</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cp">#region IProvider Members</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">string</span> <span class="n">_defintionQuery</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Definition query used for limiting dataset</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">DefinitionQuery</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_defintionQuery</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">set</span> <span class="p">{</span> <span class="n">_defintionQuery</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Gets a collection of columns in the dataset</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataColumnCollection</span> <span class="n">Columns</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">NotImplementedException</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">int</span> <span class="n">_srid</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Spacial Reference ID</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">int</span> <span class="n">SRID</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">_srid</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">set</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">_srid</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns a datarow based on a RowID</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// datarow</span>
</span><span class='line'>    <span class="k">public</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">FeatureDataRow</span> <span class="n">GetFeature</span><span class="p">(</span><span class="kt">uint</span> <span class="n">RowID</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;select g.* , g.&quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span> <span class="s">&quot;.STAsBinary() As sharpmap_tempgeometry from &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">+</span> <span class="s">&quot; g WHERE &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">ObjectIdColumn</span> <span class="p">+</span> <span class="s">&quot;=&quot;</span> <span class="p">+</span> <span class="n">RowID</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlDataAdapter</span> <span class="n">adapter</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlDataAdapter</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">FeatureDataSet</span> <span class="n">ds</span> <span class="p">=</span> <span class="k">new</span> <span class="n">FeatureDataSet</span><span class="p">();</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>                <span class="n">adapter</span><span class="p">.</span><span class="n">Fill</span><span class="p">(</span><span class="n">ds</span><span class="p">);</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">.</span><span class="n">Count</span> <span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">FeatureDataTable</span> <span class="n">fdt</span> <span class="p">=</span> <span class="k">new</span> <span class="n">FeatureDataTable</span><span class="p">(</span><span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
</span><span class='line'>                    <span class="k">foreach</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataColumn</span> <span class="n">col</span> <span class="k">in</span> <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Columns</span><span class="p">)</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">&amp;</span><span class="n">amp</span><span class="p">;&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">)</span>
</span><span class='line'>                            <span class="n">fdt</span><span class="p">.</span><span class="n">Columns</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span><span class="p">,</span> <span class="n">col</span><span class="p">.</span><span class="n">DataType</span><span class="p">,</span> <span class="n">col</span><span class="p">.</span><span class="n">Expression</span><span class="p">);</span>
</span><span class='line'>                    <span class="k">if</span><span class="p">(</span><span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Rows</span><span class="p">.</span><span class="n">Count</span><span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="m">0</span><span class="p">)</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataRow</span> <span class="n">dr</span> <span class="p">=</span> <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Rows</span><span class="p">[</span><span class="m">0</span><span class="p">];</span>
</span><span class='line'>                        <span class="n">SharpMap</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">FeatureDataRow</span> <span class="n">fdr</span> <span class="p">=</span> <span class="n">fdt</span><span class="p">.</span><span class="n">NewRow</span><span class="p">();</span>
</span><span class='line'>                        <span class="k">foreach</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataColumn</span> <span class="n">col</span> <span class="k">in</span> <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Columns</span><span class="p">)</span>
</span><span class='line'>                            <span class="k">if</span> <span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">&amp;</span><span class="n">amp</span><span class="p">;&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">)</span>
</span><span class='line'>                                <span class="n">fdr</span><span class="p">[</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span><span class="p">]</span> <span class="p">=</span> <span class="n">dr</span><span class="p">[</span><span class="n">col</span><span class="p">];</span>
</span><span class='line'>                        <span class="n">fdr</span><span class="p">.</span><span class="n">Geometry</span> <span class="p">=</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Converters</span><span class="p">.</span><span class="n">WellKnownBinary</span><span class="p">.</span><span class="n">GeometryFromWKB</span><span class="p">.</span><span class="n">Parse</span><span class="p">((</span><span class="kt">byte</span><span class="p">[])</span><span class="n">dr</span><span class="p">[</span><span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">]);</span>
</span><span class='line'>                        <span class="k">return</span> <span class="n">fdr</span><span class="p">;</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                    <span class="k">else</span>
</span><span class='line'>                        <span class="k">return</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'>                    <span class="k">return</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Boundingbox of dataset</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// boundingbox</span>
</span><span class='line'>    <span class="k">public</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">BoundingBox</span> <span class="n">GetExtents</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;SELECT g.&quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span> <span class="s">&quot;.STEnvelope().STAsText() FROM &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">+</span> <span class="s">&quot; g &quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">String</span><span class="p">.</span><span class="n">IsNullOrEmpty</span><span class="p">(</span><span class="n">_defintionQuery</span><span class="p">))</span>
</span><span class='line'>                <span class="n">strSQL</span> <span class="p">+=</span> <span class="s">&quot; WHERE &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">DefinitionQuery</span><span class="p">;</span>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlCommand</span> <span class="n">command</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>                <span class="c1">//SharpMap.Geometries.Geometry geom = null;</span>
</span><span class='line'>                <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">BoundingBox</span> <span class="n">bx</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>                <span class="n">SqlDataReader</span> <span class="n">dr</span> <span class="p">=</span> <span class="n">command</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">();</span>
</span><span class='line'>                <span class="k">while</span> <span class="p">(</span><span class="n">dr</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="kt">string</span> <span class="n">wkt</span> <span class="p">=</span> <span class="n">dr</span><span class="p">.</span><span class="n">GetString</span><span class="p">(</span><span class="m">0</span><span class="p">);</span> <span class="c1">//[this.GeometryColumn];</span>
</span><span class='line'>                    <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">Geometry</span> <span class="n">g</span> <span class="p">=</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Converters</span><span class="p">.</span><span class="n">WellKnownText</span><span class="p">.</span><span class="n">GeometryFromWKT</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">wkt</span><span class="p">);</span>
</span><span class='line'>                    <span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">BoundingBox</span> <span class="n">bb</span> <span class="p">=</span> <span class="n">g</span><span class="p">.</span><span class="n">GetBoundingBox</span><span class="p">();</span>
</span><span class='line'>                    <span class="k">if</span> <span class="p">(</span><span class="n">bx</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">bx</span> <span class="p">=</span> <span class="n">bb</span><span class="p">;</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                    <span class="k">else</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">bx</span> <span class="p">=</span> <span class="n">bx</span><span class="p">.</span><span class="n">Join</span><span class="p">(</span><span class="n">bb</span><span class="p">);</span>
</span><span class='line'>                     <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="n">dr</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">bx</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Gets the connection ID of the datasource</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">ConnectionID</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_ConnectionString</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cp">#endregion</span>
</span><span class='line'>
</span><span class='line'>    <span class="cp">#region IProvider Members</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// Returns all features with the view box</span>
</span><span class='line'>    <span class="c1">/// </span>
</span><span class='line'>    <span class="c1">/// view box</span>
</span><span class='line'>    <span class="c1">/// FeatureDataSet to fill data into</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">ExecuteIntersectionQuery</span><span class="p">(</span><span class="n">SharpMap</span><span class="p">.</span><span class="n">Geometries</span><span class="p">.</span><span class="n">BoundingBox</span> <span class="n">bbox</span><span class="p">,</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">FeatureDataSet</span> <span class="n">ds</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">List</span> <span class="n">features</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">();</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="n">SqlConnection</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">_ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">//Get bounding box string</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strBbox</span> <span class="p">=</span> <span class="n">GetBoxFilterStr</span><span class="p">(</span><span class="n">bbox</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="kt">string</span> <span class="n">strSQL</span> <span class="p">=</span> <span class="s">&quot;SELECT g.*, g.&quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">+</span> <span class="s">&quot;.Get_WKB() AS sharpmap_tempgeometry &quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="n">strSQL</span> <span class="p">+=</span> <span class="s">&quot;FROM &quot;</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">Table</span> <span class="p">+</span> <span class="s">&quot; g WHERE &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">String</span><span class="p">.</span><span class="n">IsNullOrEmpty</span><span class="p">(</span><span class="n">_defintionQuery</span><span class="p">))</span>
</span><span class='line'>                <span class="n">strSQL</span> <span class="p">+=</span> <span class="k">this</span><span class="p">.</span><span class="n">DefinitionQuery</span> <span class="p">+</span> <span class="s">&quot; AND &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">strSQL</span> <span class="p">+=</span> <span class="n">strBbox</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">SqlDataAdapter</span> <span class="n">adapter</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlDataAdapter</span><span class="p">(</span><span class="n">strSQL</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>                <span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataSet</span> <span class="n">ds2</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataSet</span><span class="p">();</span>
</span><span class='line'>                <span class="n">adapter</span><span class="p">.</span><span class="n">Fill</span><span class="p">(</span><span class="n">ds2</span><span class="p">);</span>
</span><span class='line'>                <span class="n">conn</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">ds2</span><span class="p">.</span><span class="n">Tables</span><span class="p">.</span><span class="n">Count</span> <span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">FeatureDataTable</span> <span class="n">fdt</span> <span class="p">=</span> <span class="k">new</span> <span class="n">FeatureDataTable</span><span class="p">(</span><span class="n">ds2</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
</span><span class='line'>                    <span class="k">foreach</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataColumn</span> <span class="n">col</span> <span class="k">in</span> <span class="n">ds2</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Columns</span><span class="p">)</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">&amp;</span><span class="n">amp</span><span class="p">;&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">)</span>
</span><span class='line'>                            <span class="n">fdt</span><span class="p">.</span><span class="n">Columns</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span><span class="p">,</span><span class="n">col</span><span class="p">.</span><span class="n">DataType</span><span class="p">,</span><span class="n">col</span><span class="p">.</span><span class="n">Expression</span><span class="p">);</span>
</span><span class='line'>                    <span class="k">foreach</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataRow</span> <span class="n">dr</span> <span class="k">in</span> <span class="n">ds2</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Rows</span><span class="p">)</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">SharpMap</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">FeatureDataRow</span> <span class="n">fdr</span> <span class="p">=</span> <span class="n">fdt</span><span class="p">.</span><span class="n">NewRow</span><span class="p">();</span>
</span><span class='line'>                        <span class="k">foreach</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">DataColumn</span> <span class="n">col</span> <span class="k">in</span> <span class="n">ds2</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Columns</span><span class="p">)</span>
</span><span class='line'>                            <span class="k">if</span> <span class="p">(</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="k">this</span><span class="p">.</span><span class="n">GeometryColumn</span> <span class="p">&amp;</span><span class="n">amp</span><span class="p">;&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span> <span class="p">!=</span> <span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">)</span>
</span><span class='line'>                                <span class="n">fdr</span><span class="p">[</span><span class="n">col</span><span class="p">.</span><span class="n">ColumnName</span><span class="p">]</span> <span class="p">=</span> <span class="n">dr</span><span class="p">[</span><span class="n">col</span><span class="p">];</span>
</span><span class='line'>                        <span class="n">fdr</span><span class="p">.</span><span class="n">Geometry</span> <span class="p">=</span> <span class="n">SharpMap</span><span class="p">.</span><span class="n">Converters</span><span class="p">.</span><span class="n">WellKnownBinary</span><span class="p">.</span><span class="n">GeometryFromWKB</span><span class="p">.</span><span class="n">Parse</span><span class="p">((</span><span class="kt">byte</span><span class="p">[])</span><span class="n">dr</span><span class="p">[</span><span class="s">&quot;sharpmap_tempgeometry&quot;</span><span class="p">]);</span>
</span><span class='line'>                        <span class="n">fdt</span><span class="p">.</span><span class="n">AddRow</span><span class="p">(</span><span class="n">fdr</span><span class="p">);</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                    <span class="n">ds</span><span class="p">.</span><span class="n">Tables</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">fdt</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cp">#endregion</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
